{"mappings":"8pBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,uCCnBF,IAAME,EAASC,SAASC,cAAc,WAChCC,EAAcF,SAASC,cAAc,mBACrCE,EAAeH,SAASC,cAAc,kBACnDF,EAAOK,iBAAiB,SAAS,SAAAC,GAC/BA,EAAEC,iBACFP,EAAOQ,UAAUC,OAAO,S,IAGER,SAASC,cAAc,WACtCG,iBAAiB,SAAS,SAAAC,GACrCA,EAAEC,iBACFN,SAASS,KAAKF,UAAUC,OAAO,aAC/BR,SAASC,cAAc,qBAAqBM,UAAUC,OAAO,aAEzDR,SAASS,KAAKF,UAAUG,SAAS,cACnCC,aAAaC,QAAQ,QAAS,QAC9BV,EAAYW,MAAMC,OAAS,QAC3BX,EAAaU,MAAMC,OAAS,UAE5BH,aAAaC,QAAQ,QAAS,SAC9BV,EAAYW,MAAMC,OAAS,QAC3BX,EAAaU,MAAMC,OAAS,Q,IAIhCd,SAASI,iBAAiB,oBAAoB,WAC5C,IAAMW,EAAaJ,aAAaK,QAAQ,SACpCD,IACFf,SAASS,KAAKF,UAAUC,OAAO,YAA4B,SAAfO,GAC5Cf,SACGC,cAAc,qBACdM,UAAUC,OAAO,YAA4B,SAAfO,GACjChB,EAAOQ,UAAUC,OAAO,SAAyB,SAAfO,G,yCChCtCE,EAAA,S,IAaQC,EACEC,EAkBAC,E,aAzBJC,EAAkBrB,SAASC,cAAc,6BACzCqB,EAAgBtB,SAASC,cAAc,mBACvCsB,EAAgBvB,SAASC,cAAc,iBAIrCiB,EAAgB,EACdC,EAAgBK,EAAAC,YAAYC,KAAI,SAAAC,G,IAAGC,EAAKD,EAALC,MAAOC,EAAGF,EAAHE,IAAKC,EAAGH,EAAHG,IAEjD,OADAZ,GAAiB,EACV,2FAEmFa,OAAlDF,EAAI,gDAA0HE,OAA5EC,OAAOd,GAAee,SAAS,EAAG,GAAG,yCAAoDF,OAAbD,EAAI,WAAeC,OAANH,EAAM,uC,IAG1LM,KAAK,IAERZ,EAAca,mBAAmB,aAAchB,IASzCC,EAAagB,MAAMC,KAAKf,EAAcgB,WACjCC,SAAQ,SAAUC,GAEzB,GAAqC,MAAjCnB,EAAgBoB,aAYpB,GAAqC,MAAjCpB,EAAgBoB,aAYpB,GAAqC,MAAjCpB,EAAgBoB,kBAApB,CACI,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAWzB,OAAQ+C,IACnCtB,EAAWsB,GAAGnC,UAAUoC,IAAI,yBAEhCpB,EAAcnB,iBAAiB,SAAS,WACpCoC,EAAMjC,UAAUC,OAAO,wB,QAjB/B,CACI,IAAK,IAAIoC,EAAI,EAAGA,EAAIxB,EAAWzB,OAAQiD,IACnCxB,EAAWwB,GAAGrC,UAAUoC,IAAI,yBAEhCpB,EAAcnB,iBAAiB,SAAS,WACpCoC,EAAMjC,UAAUC,OAAO,wB,QAjB/B,CACI,IAAK,IAAId,EAAI,EAAGA,EAAI0B,EAAWzB,OAAQD,IACnC0B,EAAW1B,GAAGa,UAAUoC,IAAI,yBAEhCpB,EAAcnB,iBAAiB,SAAS,WACpCoC,EAAMjC,UAAUC,OAAO,wB,6CC5BvCS,EAAA,S,kSCXA,IAAA4B,EAAA5B,EAAA,S,wTAqBM6B,EAAa,CACjBC,cAAAC,EAAAC,QACAC,OAAAC,EAAAF,QACAG,UAAAC,EAAAJ,QACAK,WAAAC,EAAAN,QACAT,MAAAgB,EAAAP,QACAQ,KAAAC,EAAAT,QACAU,WAAAC,EAAAX,QACAY,OAAAC,EAAAb,QACAc,YAAAC,EAAAf,QACAgB,cAAAC,EAAAjB,QACAkB,QAAAC,EAAAnB,SAEIoB,EAAmB,GACzBC,EA2iBI,W,sBA3iBEC,IACQ,QAAAC,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAtC,MAAAoC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,G,IAoCRC,EAnCEC,EACAC,E,eACgB,IAAhBJ,EAAK/E,QAAgB+E,EAAK,GAAGK,aAAwE,WAAzDtF,OAAOuF,UAAUC,SAASC,KAAKR,EAAK,IAAIS,MAAM,GAAG,GAC/FL,EAASJ,EAAK,IAEbG,G,OAAcH,EAAI,IAAhB,GAAEI,EAAMM,EAAA,IAERN,IAAQA,EAAS,IACtBA,GAAS,EAAAO,EAAAC,QAAO,GAAIR,GAChBD,IAAOC,EAAOD,KAAIC,EAAOD,GAAKA,GAClC,IAAM7E,GAAW,EAAAuF,EAAAC,eACjB,GAAIV,EAAOD,IAA2B,iBAAdC,EAAOD,IAAmB7E,EAASyF,iBAAiBX,EAAOD,IAAIlF,OAAS,EAAG,CACjG,IAAM+F,EAAU,GAQhB,OAPA1F,EAASyF,iBAAiBX,EAAOD,IAAItC,SAAQ,SAAAoD,GAC3C,IAAMC,GAAY,EAAAP,EAAAC,QAAO,GAAIR,EAAQ,CACnCD,GAAIc,IAEND,EAAQG,KAAK,IAAItB,EAAOqB,G,IAGnBF,C,CAIT,IAAMI,EAASC,KACfD,EAAOE,YAAa,EACpBF,EAAOG,SAAU,EAAAC,EAAAC,cACjBL,EAAOM,QAAS,EAAAC,EAAAC,WAAU,CACxBC,UAAWzB,EAAOyB,YAEpBT,EAAOU,SAAU,EAAAC,EAAAC,cACjBZ,EAAOa,gBAAkB,GACzBb,EAAOc,mBAAqB,GAC5Bd,EAAOe,QAAWC,EAAAC,EAAA,CAAGjB,EAAOkB,aACxBlC,EAAO+B,SAAWzE,MAAM6E,QAAQnC,EAAO+B,WACzCjC,EAAAkB,EAAOe,SAAQhB,KAAfqB,MAAAtC,EAAoBkC,EAAAC,EAAA,CAAGjC,EAAO+B,UAEhC,IAAMM,EAAmB,GACzBrB,EAAOe,QAAQtE,SAAQ,SAAA6E,GACrBA,EAAI,CACFtC,SACAgB,SACAuB,cAAc,EAAAC,EAAArE,SAAmB6B,EAAQqC,GACzCI,GAAIzB,EAAOyB,GAAGC,KAAK1B,GACnB2B,KAAM3B,EAAO2B,KAAKD,KAAK1B,GACvB4B,IAAK5B,EAAO4B,IAAIF,KAAK1B,GACrB6B,KAAM7B,EAAO6B,KAAKH,KAAK1B,I,IAK3B,IAAM8B,GAAe,EAAAvC,EAAAC,QAAO,GAAIuC,EAAA5E,QAAUkE,GAoG1C,OAjGArB,EAAOhB,QAAS,EAAAO,EAAAC,QAAO,GAAIsC,EAAcvD,EAAkBS,GAC3DgB,EAAOgC,gBAAiB,EAAAzC,EAAAC,QAAO,GAAIQ,EAAOhB,QAC1CgB,EAAOiC,cAAe,EAAA1C,EAAAC,QAAO,GAAIR,GAG7BgB,EAAOhB,QAAUgB,EAAOhB,OAAOyC,IACjC9H,OAAOD,KAAKsG,EAAOhB,OAAOyC,IAAIhF,SAAQ,SAAAyF,GACpClC,EAAOyB,GAAGS,EAAWlC,EAAOhB,OAAOyC,GAAGS,G,IAGtClC,EAAOhB,QAAUgB,EAAOhB,OAAOmD,OACjCnC,EAAOmC,MAAMnC,EAAOhB,OAAOmD,OAI7BxI,OAAOyI,OAAOpC,EAAQ,CACpBqC,QAASrC,EAAOhB,OAAOqD,QACvBtD,KAEAuD,WAAY,GAEZC,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,gBAAiB,GAEjBC,aAAA,WACE,MAAmC,eAA5B3C,EAAOhB,OAAO4D,S,EAEvBC,WAAA,WACE,MAAmC,aAA5B7C,EAAOhB,OAAO4D,S,EAGvBE,YAAa,EACbC,UAAW,EAEXC,aAAa,EACbC,OAAO,EAEP3F,UAAW,EACX4F,kBAAmB,EACnBC,SAAU,EACVC,SAAU,EACVC,WAAW,EACXC,sBAAA,WAGE,OAA8C,QAAvCC,KAAKC,MAAMvD,KAAK3C,UAAY,Q,EAGrCmG,eAAgBzD,EAAOhB,OAAOyE,eAC9BC,eAAgB1D,EAAOhB,OAAO0E,eAE9BC,gBAAiB,CACfC,eAAWC,EACXC,aAASD,EACTE,yBAAqBF,EACrBG,oBAAgBH,EAChBI,iBAAaJ,EACbK,sBAAkBL,EAClBM,oBAAgBN,EAChBO,wBAAoBP,EAEpBQ,kBAAmBrE,EAAOhB,OAAOqF,kBAEjCC,cAAe,EACfC,kBAAcV,EAEdW,WAAY,GACZC,yBAAqBZ,EACrBa,iBAAab,EACbc,QAAS,IAGXC,YAAY,EAEZC,eAAgB7E,EAAOhB,OAAO6F,eAC9BC,QAAS,CACPC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,SAAU,EACVC,KAAM,GAGRC,aAAc,GACdC,aAAc,IAEhBrF,EAAO6B,KAAK,WAGR7B,EAAOhB,OAAOsG,MAChBtF,EAAOsF,OAKFtF,C,iBAETuF,IAAA,gB,MAAA,SAAcC,GACZ,IACEC,EAEExF,KAFFwF,SACAzG,EACEiB,KADFjB,OAEIuD,GAAS,EAAAhD,EAAAmG,iBAAgBD,EAAU,IAAsBxJ,OAAlB+C,EAAO2G,WAAW,mBACzDC,GAAkB,EAAArG,EAAAsG,cAAatD,EAAO,IAC5C,OAAO,EAAAhD,EAAAsG,cAAaL,GAAWI,C,IAEjCL,IAAA,sB,MAAA,SAAoBO,GAClB,OAAO7F,KAAK8F,cAAc9F,KAAKsC,OAAOyD,QAAO,SAAAR,G,OAA6D,EAAlDA,EAAQS,aAAa,6BAAmCH,C,IAAO,G,IAEzHP,IAAA,e,MAAA,WACE,IAAMvF,EAASC,KAEbwF,EAEEzF,EAFFyF,SACAzG,EACEgB,EADFhB,OAEFgB,EAAOuC,QAAS,EAAAhD,EAAAmG,iBAAgBD,EAAU,IAAsBxJ,OAAlB+C,EAAO2G,WAAW,kB,IAElEJ,IAAA,S,MAAA,WACE,IAAMvF,EAASC,KACXD,EAAOqC,UACXrC,EAAOqC,SAAU,EACbrC,EAAOhB,OAAOnB,YAChBmC,EAAOkG,gBAETlG,EAAO6B,KAAK,U,IAEd0D,IAAA,U,MAAA,WACE,IAAMvF,EAASC,KACVD,EAAOqC,UACZrC,EAAOqC,SAAU,EACbrC,EAAOhB,OAAOnB,YAChBmC,EAAOmG,kBAETnG,EAAO6B,KAAK,W,IAEd0D,IAAA,c,MAAA,SAAYpC,EAAUiD,GACpB,IAAMpG,EAASC,KACfkD,EAAWI,KAAK8C,IAAI9C,KAAK+C,IAAInD,EAAU,GAAI,GAC3C,IAAMkD,EAAMrG,EAAOuG,eAEbC,GADMxG,EAAOyG,eACIJ,GAAOlD,EAAWkD,EACzCrG,EAAO0G,YAAYF,OAA0B,IAAVJ,EAAwB,EAAIA,GAC/DpG,EAAO2G,oBACP3G,EAAO4G,qB,IAETrB,IAAA,uB,MAAA,WACE,IAAMvF,EAASC,KACf,GAAKD,EAAOhB,OAAO6H,cAAiB7G,EAAOjB,GAA3C,CACA,IAAM+H,EAAM9G,EAAOjB,GAAGgI,UAAUC,MAAM,KAAKhB,QAAO,SAAAe,GAChD,OAAuC,IAAhCA,EAAUE,QAAQ,WAA+E,IAA5DF,EAAUE,QAAQjH,EAAOhB,OAAOkI,uB,IAE9ElH,EAAO6B,KAAK,oBAAqBiF,EAAI1K,KAAK,KAJK,C,IAMjDmJ,IAAA,kB,MAAA,SAAgBC,GACd,IAAMxF,EAASC,KACf,OAAID,EAAOmH,UAAkB,GACtB3B,EAAQuB,UAAUC,MAAM,KAAKhB,QAAO,SAAAe,GACzC,OAA6C,IAAtCA,EAAUE,QAAQ,iBAAyE,IAAhDF,EAAUE,QAAQjH,EAAOhB,OAAO2G,W,IACjFvJ,KAAK,I,IAEVmJ,IAAA,oB,MAAA,WACE,IAAMvF,EAASC,KACf,GAAKD,EAAOhB,OAAO6H,cAAiB7G,EAAOjB,GAA3C,CACA,IAAMqI,EAAU,GAChBpH,EAAOuC,OAAO9F,SAAQ,SAAA+I,GACpB,IAAMlD,EAAatC,EAAOqH,gBAAgB7B,GAC1C4B,EAAQrH,KAAK,CACXyF,UACAlD,eAEFtC,EAAO6B,KAAK,cAAe2D,EAASlD,E,IAEtCtC,EAAO6B,KAAK,gBAAiBuF,EAVkB,C,IAYjD7B,IAAA,uB,MAAA,W,IAAqB+B,EAAA3I,UAAA9E,OAAA,YAAA8E,UAAA,GAAgBA,UAAA,GAAT,UAAW4I,EAAA5I,UAAA9E,OAAA,YAAA8E,UAAA,IAAaA,UAAA,GAC5CqB,EAASC,KAEbjB,EAMEgB,EANFhB,OACAuD,EAKEvC,EALFuC,OACAC,EAIExC,EAJFwC,WACAE,EAGE1C,EAHF0C,gBACA8E,EAEExH,EAFFyH,KACA3E,EACE9C,EADF8C,YAEE4E,EAAM,EACV,GAAI1I,EAAO2I,eAAgB,CAGzB,IAFA,IACIC,EADAC,EAAYtF,EAAOO,GAAagF,gBAE3BlO,EAAIkJ,EAAc,EAAGlJ,EAAI2I,EAAO1I,OAAQD,GAAK,EAChD2I,EAAO3I,KAAOgO,IAEhBF,GAAO,GADPG,GAAatF,EAAO3I,GAAGkO,iBAEPN,IAAYI,GAAY,IAG5C,IAAK,IAAI9K,EAAIgG,EAAc,EAAGhG,GAAK,EAAGA,GAAK,EACrCyF,EAAOzF,KAAO8K,IAEhBF,GAAO,GADPG,GAAatF,EAAOzF,GAAGgL,iBAEPN,IAAYI,GAAY,G,MAK5C,GAAa,YAATN,EACF,IAAK,IAAI1K,EAAIkG,EAAc,EAAGlG,EAAI2F,EAAO1I,OAAQ+C,GAAK,EAAG,CACvD,IAAMmL,EAAcR,EAAQ/E,EAAW5F,GAAK8F,EAAgB9F,GAAK4F,EAAWM,GAAe0E,EAAahF,EAAW5F,GAAK4F,EAAWM,GAAe0E,EAC9IO,IACFL,GAAO,E,MAKX,IAAK,IAAIM,EAAIlF,EAAc,EAAGkF,GAAK,EAAGA,GAAK,EAAG,CAC5C,IAAMC,EAAczF,EAAWM,GAAeN,EAAWwF,GAAKR,EAC1DS,IACFP,GAAO,E,CAKf,OAAOA,C,IAETnC,IAAA,S,MAAA,WACE,IAAMvF,EAASC,KACf,GAAKD,IAAUA,EAAOmH,UAAtB,CACA,IAwBIe,EAvBFzF,EAEEzC,EAFFyC,SACAzD,EACEgB,EADFhB,OAuBF,GApBIA,EAAOf,aACT+B,EAAOmI,gBAERnH,EAAAC,EAAA,CAAGjB,EAAOjB,GAAGY,iBAAiB,qBAAqBlD,SAAQ,SAAA2L,GACtDA,EAAQC,WACV,EAAAC,EAAAC,sBAAqBvI,EAAQoI,E,IAGjCpI,EAAOwI,aACPxI,EAAOyI,eACPzI,EAAO0I,iBACP1I,EAAO4G,sBASH5G,EAAOhB,OAAO2J,UAAY3I,EAAOhB,OAAO2J,SAAStG,QACnDuG,IACI5I,EAAOhB,OAAO6J,YAChB7I,EAAO8I,uBAEJ,CACL,IAAqC,SAAhC9I,EAAOhB,OAAO+J,eAA4B/I,EAAOhB,OAAO+J,cAAgB,IAAM/I,EAAOiD,QAAUjD,EAAOhB,OAAO2I,eAAgB,CAChI,IAAMpF,EAASvC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QAAUrC,EAAOgJ,QAAQzG,OAASvC,EAAOuC,OAChG2F,EAAalI,EAAOiJ,QAAQ1G,EAAO1I,OAAS,EAAG,GAAG,GAAO,E,MAEzDqO,EAAalI,EAAOiJ,QAAQjJ,EAAO8C,YAAa,GAAG,GAAO,GAEvDoF,GACHU,G,CAGA5J,EAAOkK,eAAiBzG,IAAazC,EAAOyC,UAC9CzC,EAAO7B,gBAET6B,EAAO6B,KAAK,SA7CqB,CAkBjC,SAAS+G,IACP,IAAMO,EAAiBnJ,EAAOoJ,cAAkC,EAAnBpJ,EAAO1C,UAAiB0C,EAAO1C,UACtE+L,EAAe9F,KAAK8C,IAAI9C,KAAK+C,IAAI6C,EAAgBnJ,EAAOyG,gBAAiBzG,EAAOuG,gBACtFvG,EAAO4I,aAAaS,GACpBrJ,EAAO2G,oBACP3G,EAAO4G,qB,KAwBXrB,IAAA,kB,MAAA,SAAgB+D,G,IAAcC,IAAA5K,UAAA9E,OAAA,YAAA8E,UAAA,KAAiBA,UAAA,GACvCqB,EAASC,KACTuJ,EAAmBxJ,EAAOhB,OAAO4D,UAKvC,OAJK0G,IAEHA,EAAoC,eAArBE,EAAoC,WAAa,cAE9DF,IAAiBE,GAAqC,eAAjBF,GAAkD,aAAjBA,IAG1EtJ,EAAOjB,GAAGtE,UAAUgP,OAAO,GAA0CxN,OAAvC+D,EAAOhB,OAAOkI,wBAA0CjL,OAAjBuN,IACrExJ,EAAOjB,GAAGtE,UAAUoC,IAAI,GAA0CZ,OAAvC+D,EAAOhB,OAAOkI,wBAAsCjL,OAAbqN,IAClEtJ,EAAO0J,uBACP1J,EAAOhB,OAAO4D,UAAY0G,EAC1BtJ,EAAOuC,OAAO9F,SAAQ,SAAA+I,GACC,aAAjB8D,EACF9D,EAAQzK,MAAM4O,MAAQ,GAEtBnE,EAAQzK,MAAM6O,OAAS,E,IAG3B5J,EAAO6B,KAAK,mBACR0H,GAAYvJ,EAAO5C,UAdd4C,C,IAiBXuF,IAAA,0B,MAAA,SAAwB3C,GACtB,IAAM5C,EAASC,KACXD,EAAO6J,KAAqB,QAAdjH,IAAwB5C,EAAO6J,KAAqB,QAAdjH,IACxD5C,EAAO6J,IAAoB,QAAdjH,EACb5C,EAAOoJ,aAA2C,eAA5BpJ,EAAOhB,OAAO4D,WAA8B5C,EAAO6J,IACrE7J,EAAO6J,KACT7J,EAAOjB,GAAGtE,UAAUoC,IAAI,GAAwCZ,OAArC+D,EAAOhB,OAAOkI,uBAAuB,QAChElH,EAAOjB,GAAG+K,IAAM,QAEhB9J,EAAOjB,GAAGtE,UAAUgP,OAAO,GAAwCxN,OAArC+D,EAAOhB,OAAOkI,uBAAuB,QACnElH,EAAOjB,GAAG+K,IAAM,OAElB9J,EAAO5C,S,IAETmI,IAAA,Q,MAAA,SAAMwE,GACJ,IAAM/J,EAASC,KACf,GAAID,EAAOgK,QAAS,OAAO,EAG3B,IAAIjL,EAAKgL,GAAW/J,EAAOhB,OAAOD,GAIlC,GAHkB,iBAAPA,IACTA,EAAK7E,SAASC,cAAc4E,KAEzBA,EACH,OAAO,EAETA,EAAGiB,OAASA,EACRjB,EAAGkL,WACLjK,EAAOkK,WAAY,GAErB,IAAMC,EAAqB,WACzB,MAAO,IAAmElO,QAA9D+D,EAAOhB,OAAOoL,cAAgB,IAAIC,OAAOrD,MAAM,KAAK5K,KAAK,K,EAWnEkO,EAREvL,GAAMA,EAAGwL,YAAcxL,EAAGwL,WAAWpQ,cAC3B4E,EAAGwL,WAAWpQ,cAAcgQ,MAInC,EAAA5K,EAAAmG,iBAAgB3G,EAAIoL,KAAsB,GAqBnD,OAjBKG,GAAatK,EAAOhB,OAAOwL,iBAC9BF,GAAY,EAAA/K,EAAAkL,eAAc,MAAOzK,EAAOhB,OAAOoL,cAC/CrL,EAAG2L,OAAOJ,IACV,EAAA/K,EAAAmG,iBAAgB3G,EAAI,IAA6B9C,OAAzB+D,EAAOhB,OAAO2G,aAAclJ,SAAQ,SAAA+I,GAC1D8E,EAAUI,OAAOlF,E,KAGrB7L,OAAOyI,OAAOpC,EAAQ,CACpBjB,KACAuL,YACA7E,SAAUzF,EAAOkK,UAAYnL,EAAKuL,EAClCN,SAAS,EAETH,IAA8B,QAAzB9K,EAAG+K,IAAIa,eAA6D,SAAlC,EAAApL,EAAAqL,cAAa7L,EAAI,aACxDqK,aAA0C,eAA5BpJ,EAAOhB,OAAO4D,YAAwD,QAAzB7D,EAAG+K,IAAIa,eAA6D,SAAlC,EAAApL,EAAAqL,cAAa7L,EAAI,cAC9G8L,SAAiD,iBAAvC,EAAAtL,EAAAqL,cAAaN,EAAW,cAE7B,C,IAET/E,IAAA,O,MAAA,SAAKxG,GACH,IAAMiB,EAASC,KACf,OAAID,EAAO8K,cAEK,IADA9K,EAAO+K,MAAMhM,KAE7BiB,EAAO6B,KAAK,cAGR7B,EAAOhB,OAAOf,aAChB+B,EAAOmI,gBAITnI,EAAOgL,aAGPhL,EAAOwI,aAGPxI,EAAOyI,eACHzI,EAAOhB,OAAOkK,eAChBlJ,EAAO7B,gBAIL6B,EAAOhB,OAAOnB,YAAcmC,EAAOqC,SACrCrC,EAAOkG,gBAILlG,EAAOhB,OAAOrB,MAAQqC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QAChErC,EAAOiJ,QAAQjJ,EAAOhB,OAAOiM,aAAejL,EAAOgJ,QAAQkC,aAAc,EAAGlL,EAAOhB,OAAOmM,oBAAoB,GAAO,GAErHnL,EAAOiJ,QAAQjJ,EAAOhB,OAAOiM,aAAc,EAAGjL,EAAOhB,OAAOmM,oBAAoB,GAAO,GAIrFnL,EAAOhB,OAAOrB,MAChBqC,EAAOoL,aAITpL,EAAOqL,eACNrK,EAAAC,EAAA,CAAGjB,EAAOjB,GAAGY,iBAAiB,qBAAqBlD,SAAQ,SAAA2L,GACtDA,EAAQC,UACV,EAAAC,EAAAC,sBAAqBvI,EAAQoI,GAE7BA,EAAQ9N,iBAAiB,QAAQ,SAAAC,IAC/B,EAAA+N,EAAAC,sBAAqBvI,EAAQzF,EAAE+Q,O,QAIrC,EAAAhD,EAAAiD,SAAQvL,GAGRA,EAAO8K,aAAc,GACrB,EAAAxC,EAAAiD,SAAQvL,GAGRA,EAAO6B,KAAK,QACZ7B,EAAO6B,KAAK,cA1DmB7B,C,IA6DjCuF,IAAA,U,MAAA,W,IAAQiG,IAAA7M,UAAA9E,OAAA,YAAA8E,UAAA,KAAqBA,UAAA,GAAE8M,IAAA9M,UAAA9E,OAAA,YAAA8E,UAAA,KAAkBA,UAAA,GACzCqB,EAASC,KAEbjB,EAIEgB,EAJFhB,OACAD,EAGEiB,EAHFjB,GACAuL,EAEEtK,EAFFsK,UACA/H,EACEvC,EADFuC,OAEF,YAA6B,IAAlBvC,EAAOhB,QAA0BgB,EAAOmH,YAGnDnH,EAAO6B,KAAK,iBAGZ7B,EAAO8K,aAAc,EAGrB9K,EAAO0L,eAGH1M,EAAOrB,MACTqC,EAAO2L,cAILF,IACFzL,EAAO4L,gBACP7M,EAAG8M,gBAAgB,SACnBvB,EAAUuB,gBAAgB,SACtBtJ,GAAUA,EAAO1I,QACnB0I,EAAO9F,SAAQ,SAAA+I,GACbA,EAAQ/K,UAAUgP,OAAOzK,EAAO8M,kBAAmB9M,EAAO+M,iBAAkB/M,EAAOgN,eAAgBhN,EAAOiN,gBAC1GzG,EAAQqG,gBAAgB,SACxBrG,EAAQqG,gBAAgB,0B,KAI9B7L,EAAO6B,KAAK,WAGZlI,OAAOD,KAAKsG,EAAOa,iBAAiBpE,SAAQ,SAAAyF,GAC1ClC,EAAO4B,IAAIM,E,KAEU,IAAnBsJ,IACFxL,EAAOjB,GAAGiB,OAAS,MACnB,EAAAT,EAAA2M,aAAYlM,IAEdA,EAAOmH,WAAY,GAtCV,I,MAyCJ5B,IAAA,iB,MAAP,SAAsB4G,IACpB,EAAA5M,EAAAC,QAAOjB,EAAkB4N,E,IAEhB5G,IAAA,mB,IAAX,WACE,OAAOhH,C,IAEEgH,IAAA,W,IAAX,WACE,OAAOxD,EAAA5E,O,IAEFoI,IAAA,gB,MAAP,SAAqBjE,GACd7C,EAAOS,UAAUgC,cAAazC,EAAOS,UAAUgC,YAAc,IAClE,IAAMH,EAAUtC,EAAOS,UAAUgC,YACd,mBAARI,GAAsBP,EAAQkG,QAAQ3F,GAAO,GACtDP,EAAQhB,KAAKuB,E,IAGViE,IAAA,M,MAAP,SAAW6G,GACT,OAAI9P,MAAM6E,QAAQiL,IAChBA,EAAO3P,SAAQ,SAAA4P,G,OAAK5N,EAAO6N,cAAcD,E,IAClC5N,IAETA,EAAO6N,cAAcF,GACd3N,E,OAGP,GAAJ9E,OAAOD,KAAKsD,GAAYP,SAAQ,SAAA8P,GAC9B5S,OAAOD,KAAKsD,EAAWuP,IAAiB9P,SAAQ,SAAA+P,GAC9ChO,EAAOU,UAAUsN,GAAexP,EAAWuP,GAAgBC,E,OAG/DhO,EAAOiO,IAAI,CAACC,EAAAvP,QAAQwP,EAAAxP,S,sCCxkBpB,SAASyP,EAASC,GACd,OAAgB,OAARA,GACW,iBAARA,GACP,gBAAiBA,GACjBA,EAAI5N,cAAgBtF,M,CAE5B,SAASmT,I,IAAOxB,EAAA3M,UAAA9E,OAAA,YAAA8E,UAAA,GAAWA,UAAA,GAAF,GAAIoO,EAAApO,UAAA9E,OAAA,YAAA8E,UAAA,GAAQA,UAAA,GAAF,GAC/BhF,OAAOD,KAAKqT,GAAKtQ,SAAQ,SAAC8I,QACK,IAAhB+F,EAAO/F,GACd+F,EAAO/F,GAAOwH,EAAIxH,GACbqH,EAASG,EAAIxH,KAClBqH,EAAStB,EAAO/F,KAChB5L,OAAOD,KAAKqT,EAAIxH,IAAM1L,OAAS,GAC/BiT,EAAOxB,EAAO/F,GAAMwH,EAAIxH,G,sGAKpC,IAAMyH,EAAc,CAChBrS,KAAM,GACNL,iBAAA,WAAmB,EACnB2S,oBAAA,WAAsB,EACtBC,cAAe,CACXC,KAAA,WAAO,EACPC,SAAU,IAEdjT,cAAA,WACI,OAAO,I,EAEXwF,iBAAA,WACI,MAAO,E,EAEX0N,eAAA,WACI,OAAO,I,EAEXC,YAAA,WACI,MAAO,CACHC,UAAA,WAAY,E,EAGpB9C,cAAA,WACI,MAAO,CACHjO,SAAU,GACVgR,WAAY,GACZzS,MAAO,GACP0S,aAAA,WAAe,EACfC,qBAAA,WACI,MAAO,E,IAInBC,gBAAA,WACI,MAAO,E,EAEXC,WAAA,WACI,OAAO,I,EAEXC,SAAU,CACNC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,OAAQ,KAGhB,SAASC,IACL,IAAMC,EAA0B,oBAAbrU,SAA2BA,SAAW,GAEzD,OADA4S,EAAOyB,EAAKvB,GACLuB,C,CAGX,IAAMC,EAAY,CACdtU,SAAU8S,EACVyB,UAAW,CACPhO,UAAW,IAEfoN,SAAU,CACNC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,OAAQ,IAEZK,QAAS,CACLC,aAAA,WAAe,EACfC,UAAA,WAAY,EACZC,GAAA,WAAK,EACLC,KAAA,WAAO,GAEXC,YAAa,WACT,OAAO9O,I,EAEX3F,iBAAA,WAAmB,EACnB2S,oBAAA,WAAsB,EACtB+B,iBAAA,WACI,MAAO,CACHC,iBAAA,WACI,MAAO,E,IAInBC,MAAA,WAAQ,EACRC,KAAA,WAAO,EACPC,OAAQ,GACRC,WAAA,WAAa,EACbC,aAAA,WAAe,EACfC,WAAA,WACI,MAAO,E,EAEXC,sBAAA,SAAsBC,GAClB,MAA0B,oBAAfJ,YACPI,IACO,MAEJJ,WAAWI,EAAU,E,EAEhCC,qBAAA,SAAqB5V,GACS,oBAAfuV,YAGXC,aAAaxV,E,GAGrB,SAAS6V,IACL,IAAMC,EAAwB,oBAAXC,OAAyBA,OAAS,GAErD,OADA/C,EAAO8C,EAAKpB,GACLoB,C,ggCChJX,IAAAE,EAAA3U,EAAA,S,0BACA,SAAS4U,EAAYlD,GACnB,IAAMmD,EAASnD,EACflT,OAAOD,KAAKsW,GAAQvT,SAAQ,SAAA8I,GAC1B,IACEyK,EAAOzK,GAAO,I,CACd,MAAOhL,G,CAGT,WACSyV,EAAOzK,E,CACd,MAAO0K,G,KAKb,SAASC,EAAST,G,IAAUU,EAAAxR,UAAA9E,OAAA,YAAA8E,UAAA,GAASA,UAAA,GAAD,EAClC,OAAO0Q,WAAWI,EAAUU,E,CAE9B,SAASC,IACP,OAAOjB,KAAKkB,K,CAEd,SAASC,EAAiBvR,GACxB,IACIhE,EADE8U,GAAS,EAAApQ,EAAA8Q,aAWf,OATIV,EAAOb,mBACTjU,EAAQ8U,EAAOb,iBAAiBjQ,EAAI,QAEjChE,GAASgE,EAAGyR,eACfzV,EAAQgE,EAAGyR,cAERzV,IACHA,EAAQgE,EAAGhE,OAENA,C,CAET,SAAS0V,EAAa1R,G,IAEhB2R,EACAC,EACAC,EAJoBC,EAAAlS,UAAA9E,OAAA,YAAA8E,UAAA,GAAUA,UAAA,GAAH,IACzBkR,GAAS,EAAApQ,EAAA8Q,aAITO,EAAWR,EAAiBvR,GA6BlC,OA5BI8Q,EAAOkB,kBACTJ,EAAeG,EAASE,WAAaF,EAASG,iBAC7BjK,MAAM,KAAKnN,OAAS,IACnC8W,EAAeA,EAAa3J,MAAM,MAAMpL,KAAI,SAAAsV,G,OAAKA,EAAEC,QAAQ,IAAK,I,IAAM/U,KAAK,OAI7EwU,EAAkB,IAAIf,EAAOkB,gBAAiC,SAAjBJ,EAA0B,GAAKA,IAG5ED,GADAE,EAAkBE,EAASM,cAAgBN,EAASO,YAAcP,EAASQ,aAAeR,EAASS,aAAeT,EAASE,WAAaF,EAAS7B,iBAAiB,aAAakC,QAAQ,aAAc,uBAC5KhS,WAAW6H,MAAM,KAE/B,MAAT6J,IAE0BF,EAAxBd,EAAOkB,gBAAgCH,EAAgBY,IAEhC,KAAlBd,EAAO7W,OAA8B4X,WAAWf,EAAO,KAE5Ce,WAAWf,EAAO,KAE3B,MAATG,IAE0BF,EAAxBd,EAAOkB,gBAAgCH,EAAgBc,IAEhC,KAAlBhB,EAAO7W,OAA8B4X,WAAWf,EAAO,KAE5Ce,WAAWf,EAAO,KAEjCC,GAAgB,C,CAEzB,SAASgB,EAASC,GAChB,MAAoB,iBAANA,GAAwB,OAANA,GAAcA,EAAE3S,aAAkE,WAAnDtF,OAAOuF,UAAUC,SAASC,KAAKwS,GAAGvS,MAAM,GAAG,E,CAE5G,SAASwS,EAAOC,GAEd,MAAsB,oBAAXjC,aAAwD,IAAvBA,OAAOkC,YAC1CD,aAAgBC,YAElBD,IAA2B,IAAlBA,EAAKE,UAAoC,KAAlBF,EAAKE,S,CAE9C,SAASC,IAAO,I,kBAIZ,IAAMC,EAAatT,EAAKhF,GACxB,GAAIsY,UAAoDL,EAAOK,GAE7D,IADA,IAAMC,EAAYxY,OAAOD,KAAKC,OAAOuY,IAAalM,QAAO,SAAAT,G,OAAO6M,EAASnL,QAAQ1B,GAAO,C,IAC/E8M,EAAY,EAAGC,EAAMH,EAAUtY,OAAQwY,EAAYC,EAAKD,GAAa,EAAG,CAC/E,IAAME,EAAUJ,EAAUE,GACpBG,EAAO7Y,OAAO8Y,yBAAyBP,EAAYK,QAC5C1O,IAAT2O,GAAsBA,EAAKE,aACzBf,EAASgB,EAAGJ,KAAaZ,EAASO,EAAWK,IAC3CL,EAAWK,GAASrS,WACtByS,EAAGJ,GAAWL,EAAWK,GAEzBN,EAAOU,EAAGJ,GAAUL,EAAWK,KAEvBZ,EAASgB,EAAGJ,KAAaZ,EAASO,EAAWK,KACvDI,EAAGJ,GAAW,GACVL,EAAWK,GAASrS,WACtByS,EAAGJ,GAAWL,EAAWK,GAEzBN,EAAOU,EAAGJ,GAAUL,EAAWK,KAGjCI,EAAGJ,GAAWL,EAAWK,G,GAzBrB7T,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAtC,MAAAoC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GAGd,IAFA,IAAM8T,EAAKhZ,OAAOiF,EAAK,IACjBwT,EAAW,CAAC,YAAa,cAAe,aACrCtV,EAAI,EAAGA,EAAI8B,EAAK/E,OAAQiD,GAAK,EAAC8V,EAAA9V,GA4BvC,OAAO6V,C,CAET,SAASE,EAAe9T,EAAI+T,EAASC,GACnChU,EAAGhE,MAAMiY,YAAYF,EAASC,E,CAEhC,SAASE,EAAqBpX,G,IAQxBqX,EAPJlT,EAD4BnE,EAC5BmE,OACAmT,EAF4BtX,EAE5BsX,eACAC,EAH4BvX,EAG5BuX,KAEMvD,GAAS,EAAApQ,EAAA8Q,aACT8C,GAAiBrT,EAAO1C,UAC1BgW,EAAY,KAEVC,EAAWvT,EAAOhB,OAAOoH,MAC/BpG,EAAOsK,UAAUvP,MAAMyY,eAAiB,OACxC3D,EAAOH,qBAAqB1P,EAAOyT,gBACnC,IAAM3J,EAAMqJ,EAAiBE,EAAgB,OAAS,OAChDK,EAAe,SAAClN,EAAS8E,GAC7B,MAAe,SAARxB,GAAkBtD,GAAW8E,GAAkB,SAARxB,GAAkBtD,GAAW8E,C,EAEvEqI,EAAU,WACdT,GAAO,IAAI/D,MAAOyE,UACA,OAAdN,IACFA,EAAYJ,GAEd,IAAM/P,EAAWI,KAAK+C,IAAI/C,KAAK8C,KAAK6M,EAAOI,GAAaC,EAAU,GAAI,GAChEM,EAAe,GAAMtQ,KAAKuQ,IAAI3Q,EAAWI,KAAKwQ,IAAM,EACtDC,EAAkBX,EAAgBQ,GAAgBV,EAAiBE,GAOvE,GANIK,EAAaM,EAAiBb,KAChCa,EAAkBb,GAEpBnT,EAAOsK,UAAU2J,SACfjT,EAAA8O,EAAA,IAACsD,EAAOY,IAENN,EAAaM,EAAiBb,GAUhC,OATAnT,EAAOsK,UAAUvP,MAAMmZ,SAAW,SAClClU,EAAOsK,UAAUvP,MAAMyY,eAAiB,GACxCnE,YAAW,WACTrP,EAAOsK,UAAUvP,MAAMmZ,SAAW,GAClClU,EAAOsK,UAAU2J,SACfjT,EAAA8O,EAAA,IAACsD,EAAOY,G,SAGZnE,EAAOH,qBAAqB1P,EAAOyT,gBAGrCzT,EAAOyT,eAAiB5D,EAAOL,sBAAsBmE,E,EAEvDA,G,CAEF,SAASQ,EAAoB3O,GAC3B,OAAOA,EAAQrL,cAAc,4BAA8BqL,EAAQyE,UAAYzE,EAAQyE,SAAS9P,cAAc,4BAA8BqL,C,CAS9I,SAAS4O,EAAgBrK,G,IAASsK,EAAA1V,UAAA9E,OAAA,YAAA8E,UAAA,GAAaA,UAAA,GAAF,GAC3C,OAAQqC,EAAAC,EAAD,CAAI8I,EAAQvN,UAAUwJ,QAAO,SAAAjH,G,OAAMA,EAAGuV,QAAQD,E,IAEvD,SAASE,EAAcC,G,IAErBC,EAF0BpW,EAAAM,UAAA9E,OAAA,YAAA8E,UAAA,GAAYA,UAAA,GAAF,GAC9BI,EAAK7E,SAASuQ,cAAc+J,GAElC,OADAC,EAAA1V,EAAGtE,WAAUoC,IAAbuE,MAAAqT,EAAiBzT,EAAAC,EAAA,CAAI3E,MAAM6E,QAAQ9C,GAAWA,EAAU,CAACA,KAClDU,C,CAET,SAAS2V,EAAc3V,GACrB,IAAM8Q,GAAS,EAAApQ,EAAA8Q,aACTrW,GAAW,EAAAuF,EAAAC,eACXiV,EAAM5V,EAAG6V,wBACTja,EAAOT,EAASS,KAChBka,EAAY9V,EAAG8V,WAAala,EAAKka,WAAa,EAC9CC,EAAa/V,EAAG+V,YAAcna,EAAKma,YAAc,EACjDC,EAAYhW,IAAO8Q,EAASA,EAAOmF,QAAUjW,EAAGgW,UAChDE,EAAalW,IAAO8Q,EAASA,EAAOqF,QAAUnW,EAAGkW,WACvD,MAAO,CACLE,IAAKR,EAAIQ,IAAMJ,EAAYF,EAC3BO,KAAMT,EAAIS,KAAOH,EAAaH,E,CAGlC,SAASO,EAAetW,EAAIsV,GAE1B,IADA,IAAMiB,EAAU,GACTvW,EAAGwW,wBAAwB,CAChC,IAAMC,EAAOzW,EAAGwW,uBACZlB,EACEmB,EAAKlB,QAAQD,IAAWiB,EAAQvV,KAAKyV,GACpCF,EAAQvV,KAAKyV,GACpBzW,EAAKyW,C,CAEP,OAAOF,C,CAET,SAASG,EAAe1W,EAAIsV,GAE1B,IADA,IAAMqB,EAAU,GACT3W,EAAG4W,oBAAoB,CAC5B,IAAMC,EAAO7W,EAAG4W,mBACZtB,EACEuB,EAAKtB,QAAQD,IAAWqB,EAAQ3V,KAAK6V,GACpCF,EAAQ3V,KAAK6V,GACpB7W,EAAK6W,C,CAEP,OAAOF,C,CAET,SAASG,EAAa9W,EAAI+W,GAExB,OADe,EAAArW,EAAA8Q,aACDvB,iBAAiBjQ,EAAI,MAAMkQ,iBAAiB6G,E,CAE5D,SAASC,EAAahX,GACpB,IACInF,EADAoc,EAAQjX,EAEZ,GAAIiX,EAAO,CAGT,IAFApc,EAAI,EAEuC,QAAnCoc,EAAQA,EAAMC,kBACG,IAAnBD,EAAMhE,WAAgBpY,GAAK,GAEjC,OAAOA,C,EAIX,SAASsc,EAAenX,EAAIsV,GAG1B,IAFA,IAAM8B,EAAU,GACZC,EAASrX,EAAGsX,cACTD,GACD/B,EACE+B,EAAO9B,QAAQD,IAAW8B,EAAQpW,KAAKqW,GAE3CD,EAAQpW,KAAKqW,GAEfA,EAASA,EAAOC,cAElB,OAAOF,C,CAET,SAASG,EAAqBvX,EAAI0Q,GAM5BA,GACF1Q,EAAGzE,iBAAiB,iBANtB,SAASic,EAAahc,GAChBA,EAAE+Q,SAAWvM,IACjB0Q,EAASrQ,KAAKL,EAAIxE,GAClBwE,EAAGkO,oBAAoB,gBAAiBsJ,G,IAM5C,SAASC,EAAiBzX,EAAI0I,EAAMgP,GAClC,IAAM5G,GAAS,EAAApQ,EAAA8Q,aACf,OAAIkG,EACK1X,EAAY,UAAT0I,EAAmB,cAAgB,gBAAkBgK,WAAW5B,EAAOb,iBAAiBjQ,EAAI,MAAMkQ,iBAA0B,UAATxH,EAAmB,eAAiB,eAAiBgK,WAAW5B,EAAOb,iBAAiBjQ,EAAI,MAAMkQ,iBAA0B,UAATxH,EAAmB,cAAgB,kBAE9Q1I,EAAG2X,W,wFCvQZ,IACIC,EADJlX,EAAAtE,EAAA,SAUA,SAASyb,IAIP,OAHKD,IACHA,EAVJ,WACE,IAAM9G,GAAS,EAAApQ,EAAA8Q,aACTrW,GAAW,EAAAuF,EAAAC,eACjB,MAAO,CACLmX,aAAc3c,EAAS4c,iBAAmB,mBAAoB5c,EAAS4c,gBAAgB/b,MACvFgc,SAAU,iBAAkBlH,GAAUA,EAAOmH,eAAiB9c,aAAoB2V,EAAOmH,e,CAK/EC,IAELN,C,uFCdT,IAEIO,EAFJzX,EAAAtE,EAAA,S,aAGA,SAASgc,I,IAAW1W,GAAA9B,UAAA9E,OAAA,YAAA8E,UAAA,GAEdA,UAAA,GAAF,IADF8B,UAEMN,GAAU,EAAAC,EAAAC,cACVwP,GAAS,EAAApQ,EAAA8Q,aACT6G,EAAWvH,EAAOpB,UAAU2I,SAC5BC,EAAK5W,GAAaoP,EAAOpB,UAAUhO,UACnCH,EAAS,CACbgX,KAAK,EACLC,SAAS,GAELC,EAAc3H,EAAOT,OAAOzF,MAC5B8N,EAAe5H,EAAOT,OAAOxF,OAC7B2N,EAAUF,EAAGK,MAAK,+BACpBC,EAAON,EAAGK,MAAK,wBACbE,EAAOP,EAAGK,MAAK,2BACfG,GAAUF,GAAQN,EAAGK,MAAK,8BAC1BI,EAAuB,UAAbV,EACZW,EAAqB,aAAbX,EAGNY,EAAc,CAAC,YAAa,YAAa,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAkB3J,OAjBKL,GAAQI,GAAS5X,EAAQ4W,OAASiB,EAAY/Q,QAAQ,GAAkBhL,OAAfub,EAAY,KAAgBvb,OAAbwb,KAAmB,KAC9FE,EAAON,EAAGK,MAAK,0BACJC,EAAO,CAAC,EAAG,EAAG,WACzBI,GAAQ,GAINR,IAAYO,IACdxX,EAAO2X,GAAK,UACZ3X,EAAOiX,SAAU,IAEfI,GAAQE,GAAUD,KACpBtX,EAAO2X,GAAK,MACZ3X,EAAOgX,KAAM,GAIRhX,C,CAET,SAAS4X,I,IAAUC,EAAAxZ,UAAA9E,OAAA,YAAA8E,UAAA,GAAcA,UAAA,GAAF,GAI7B,OAHKuY,IACHA,EAAeC,EAAWgB,IAErBjB,C,wFChDT,IACIkB,EADJC,EAAAld,EAAA,S,aAsBA,SAASmd,IAIP,OAHKF,IACHA,EAtBJ,WACE,IAAMvI,GAAS,EAAApQ,EAAA8Q,aACXgI,GAAqB,EACzB,SAASC,IACP,IAAMnB,EAAKxH,EAAOpB,UAAUhO,UAAUkK,cACtC,OAAO0M,EAAGpQ,QAAQ,WAAa,GAAKoQ,EAAGpQ,QAAQ,UAAY,GAAKoQ,EAAGpQ,QAAQ,WAAa,C,CAE1F,GAAIuR,IAAY,CACd,IAAMC,EAAKvc,OAAO2T,EAAOpB,UAAUhO,WACnC,GAAIgY,EAAGC,SAAS,YAAa,CAC3B,IAAuBpZ,EAAwE0B,EAAAqX,EAAA,CAAxEI,EAAGzR,MAAM,YAAY,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAKpL,KAAI,SAAA+c,G,OAAOC,OAAOD,E,IAAK,GAAxFE,EAAgBvZ,EAAwE,GAAjFwZ,EAASxZ,EAAwE,GAC/FiZ,EAAqBM,EAAQ,IAAgB,KAAVA,GAAgBC,EAAQ,C,EAG/D,MAAO,CACLN,SAAUD,GAAsBC,IAChCD,qBACAQ,UAAW,+CAA+CC,KAAKnJ,EAAOpB,UAAUhO,W,CAKtEwY,IAELb,C,qFC1BT,IAAA3Y,EAAAtE,EAAA,SACe,SAAA+d,EAAgBC,G,IAC7BnZ,EAD6BmZ,EAC7BnZ,OACAyB,EAF6B0X,EAE7B1X,GACAI,EAH6BsX,EAG7BtX,KAEMgO,GAAS,EAAApQ,EAAA8Q,aACX6I,EAAW,KACXC,EAAiB,KACfC,EAAgB,WACftZ,IAAUA,EAAOmH,WAAcnH,EAAO8K,cAC3CjJ,EAAK,gBACLA,EAAK,U,EAqCD0X,EAA2B,WAC1BvZ,IAAUA,EAAOmH,WAAcnH,EAAO8K,aAC3CjJ,EAAK,oB,EAEPJ,EAAG,QAAQ,WACLzB,EAAOhB,OAAOwa,qBAAmD,IAA1B3J,EAAO4J,eAvC7CzZ,IAAUA,EAAOmH,WAAcnH,EAAO8K,cAC3CsO,EAAW,IAAIK,gBAAe,SAAAC,GAC5BL,EAAiBxJ,EAAOL,uBAAsB,WAC5C,IACE7F,EAEE3J,EAFF2J,MACAC,EACE5J,EADF4J,OAEE+P,EAAWhQ,EACXiQ,EAAYhQ,EAChB8P,EAAQjd,SAAQ,SAAAZ,G,IACdge,EAAche,EAAdge,eACAC,EAAWje,EAAXie,YACAxO,EAAMzP,EAANyP,OAEIA,GAAUA,IAAWtL,EAAOjB,KAChC4a,EAAWG,EAAcA,EAAYnQ,OAASkQ,EAAe,IAAMA,GAAgBE,WACnFH,EAAYE,EAAcA,EAAYlQ,QAAUiQ,EAAe,IAAMA,GAAgBG,U,IAEnFL,IAAahQ,GAASiQ,IAAchQ,GACtC0P,G,QAIGW,QAAQja,EAAOjB,KAoBxB8Q,EAAOvV,iBAAiB,SAAUgf,GAClCzJ,EAAOvV,iBAAiB,oBAAqBif,G,IAE/C9X,EAAG,WAAW,WApBR4X,GACFxJ,EAAOH,qBAAqB2J,GAE1BD,GAAYA,EAASc,WAAala,EAAOjB,KAC3Cqa,EAASc,UAAUla,EAAOjB,IAC1Bqa,EAAW,MAiBbvJ,EAAO5C,oBAAoB,SAAUqM,GACrCzJ,EAAO5C,oBAAoB,oBAAqBsM,E,wFChEpD,IAAA9Z,EAAAtE,EAAA,S,aAEe,SAAAgf,EAAkBte,G,IAC/BmE,EAD+BnE,EAC/BmE,OACAuB,EAF+B1F,EAE/B0F,aACAE,EAH+B5F,EAG/B4F,GACAI,EAJ+BhG,EAI/BgG,KAEMuY,EAAY,GACZvK,GAAS,EAAApQ,EAAA8Q,aACT8J,EAAS,SAAC/O,G,IAAQgP,EAAO3b,UAAA9E,OAAA,YAAA8E,UAAA,GAAAA,UAAA,GAAG,GAC1B4b,EAAe1K,EAAO2K,kBAAoB3K,EAAO4K,uBACjDrB,EAAW,IAAImB,GAAa,SAAAG,GAIhC,IAAI1a,EAAO2a,oBACX,GAAyB,IAArBD,EAAU7gB,OAAd,CAIA,IAAM+gB,EAAiB,WACrB/Y,EAAK,iBAAkB6Y,EAAU,G,EAE/B7K,EAAOL,sBACTK,EAAOL,sBAAsBoL,GAE7B/K,EAAOR,WAAWuL,EAAgB,E,MATlC/Y,EAAK,iBAAkB6Y,EAAU,G,IAYrCtB,EAASa,QAAQ3O,EAAQ,CACvBuP,gBAA0C,IAAvBP,EAAQO,YAAoCP,EAAQO,WACvEC,eAAwC,IAAtBR,EAAQQ,WAAmCR,EAAQQ,UACrEC,mBAAgD,IAA1BT,EAAQS,eAAuCT,EAAQS,gBAE/EX,EAAUra,KAAKqZ,E,EA0BjB7X,EAAa,CACX6X,UAAU,EACV4B,gBAAgB,EAChBC,sBAAsB,IAExBxZ,EAAG,QA7BU,WACX,GAAKzB,EAAOhB,OAAOoa,SAAnB,CACA,GAAIpZ,EAAOhB,OAAOgc,eAEhB,IADA,IAAME,GAAmB,EAAA3b,EAAA4b,gBAAenb,EAAOjB,IACtCnF,EAAI,EAAGA,EAAIshB,EAAiBrhB,OAAQD,GAAK,EAChDygB,EAAOa,EAAiBthB,IAI5BygB,EAAOra,EAAOjB,GAAI,CAChB+b,UAAW9a,EAAOhB,OAAOic,uBAI3BZ,EAAOra,EAAOsK,UAAW,CACvBuQ,YAAY,GAde,C,IA6B/BpZ,EAAG,WAZa,WACd2Y,EAAU3d,SAAQ,SAAA2c,GAChBA,EAASgC,Y,IAEXhB,EAAUiB,OAAO,EAAGjB,EAAUvgB,O,wFCzDlC,IAAAoH,EAAA9F,EAAA,SAAAmgB,EAAe,CACb7Z,GAAA,SAAG1D,EAAQwd,EAASC,GAClB,IAAMC,EAAOxb,KACb,IAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAW,OAAOsU,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,IAAMC,EAASF,EAAW,UAAY,OAKtC,OAJAzd,EAAOiJ,MAAM,KAAKvK,SAAQ,SAAAkf,GACnBF,EAAK5a,gBAAgB8a,KAAQF,EAAK5a,gBAAgB8a,GAAS,IAChEF,EAAK5a,gBAAgB8a,GAAOD,GAAQH,E,IAE/BE,C,EAET9Z,KAAA,SAAK5D,EAAQwd,EAASC,GACpB,IAAMC,EAAOxb,KACb,IAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAW,OAAOsU,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,SAASG,IAAY,QAAAld,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAtC,MAAAoC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GACnB4c,EAAK7Z,IAAI7D,EAAQ6d,GACbA,EAAYC,uBACPD,EAAYC,eAErBN,EAAQna,MAAMqa,EAAM7c,E,CAGtB,OADAgd,EAAYC,eAAiBN,EACtBE,EAAKha,GAAG1D,EAAQ6d,EAAaJ,E,EAEtCrZ,MAAA,SAAMoZ,EAASC,GACb,IAAMC,EAAOxb,KACb,IAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAW,OAAOsU,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,IAAMC,EAASF,EAAW,UAAY,OAItC,OAHIC,EAAK3a,mBAAmBmG,QAAQsU,GAAW,GAC7CE,EAAK3a,mBAAmB4a,GAAQH,GAE3BE,C,EAETK,OAAA,SAAOP,GACL,IAAME,EAAOxb,KACb,IAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAW,OAAOsU,EACpD,IAAKA,EAAK3a,mBAAoB,OAAO2a,EACrC,IAAM3V,EAAQ2V,EAAK3a,mBAAmBmG,QAAQsU,GAI9C,OAHIzV,GAAS,GACX2V,EAAK3a,mBAAmBua,OAAOvV,EAAO,GAEjC2V,C,EAET7Z,IAAA,SAAI7D,EAAQwd,GACV,IAAME,EAAOxb,KACb,OAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAkBsU,EAC/CA,EAAK5a,iBACV9C,EAAOiJ,MAAM,KAAKvK,SAAQ,SAAAkf,QACD,IAAZJ,EACTE,EAAK5a,gBAAgB8a,GAAS,GACrBF,EAAK5a,gBAAgB8a,IAC9BF,EAAK5a,gBAAgB8a,GAAOlf,SAAQ,SAACsf,EAAcjW,IAC7CiW,IAAiBR,GAAWQ,EAAaF,gBAAkBE,EAAaF,iBAAmBN,IAC7FE,EAAK5a,gBAAgB8a,GAAON,OAAOvV,EAAO,E,OAK3C2V,GAZ2BA,C,EAcpC5Z,KAAA,WAAK,QAAAnD,EAAAC,UAAA9E,OAAA+E,EAAA,IAAAtC,MAAAoC,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAD,EAAAC,GAAAF,UAAAE,GACH,IAGId,EACAie,EACAC,EALER,EAAOxb,KACb,IAAKwb,EAAK5a,iBAAmB4a,EAAKtU,UAAW,OAAOsU,EACpD,IAAKA,EAAK5a,gBAAiB,OAAO4a,EAIX,iBAAZ7c,EAAK,IAAmBtC,MAAM6E,QAAQvC,EAAK,KACpDb,EAASa,EAAK,GACdod,EAAOpd,EAAKS,MAAM,EAAGT,EAAK/E,QAC1BoiB,EAAUR,IAEV1d,EAASa,EAAK,GAAGb,OACjBie,EAAOpd,EAAK,GAAGod,KACfC,EAAUrd,EAAK,GAAGqd,SAAWR,GAE/BO,EAAKE,QAAQD,GACb,IAAME,EAAc7f,MAAM6E,QAAQpD,GAAUA,EAASA,EAAOiJ,MAAM,KAalE,OAZAmV,EAAY1f,SAAQ,SAAAkf,GACdF,EAAK3a,oBAAsB2a,EAAK3a,mBAAmBjH,QACrD4hB,EAAK3a,mBAAmBrE,SAAQ,SAAAsf,GAC9BA,EAAa3a,MAAM6a,EAAS,CAACN,GAAD1f,OAAQ+E,EAAAC,EAAA,CAAG+a,I,IAGvCP,EAAK5a,iBAAmB4a,EAAK5a,gBAAgB8a,IAC/CF,EAAK5a,gBAAgB8a,GAAOlf,SAAQ,SAAAsf,GAClCA,EAAa3a,MAAM6a,EAASD,E,OAI3BP,C,sFC/FX,IAAAW,EAAAjhB,EAAA,S,wGASAkhB,EAAe,CACb7T,WAAA4T,EAAAjf,QACAsL,aAAA6T,EAAAnf,QACA2L,iBAAAyT,EAAApf,QACAqf,mBAAAC,EAAAtf,QACAuf,qBAAAC,EAAAxf,QACAuL,eAAAkU,EAAAzf,QACAyJ,oBAAAiW,EAAA1f,QACAwJ,kBAAAmW,EAAA3f,QACA4f,mBAAAC,EAAA7f,Q,oFClBF,IAAAoC,EAAApE,EAAA,SACe,SAAA8hB,IACb,IACItT,EACAC,EAFE5J,EAASC,KAGTlB,EAAKiB,EAAOjB,GAEhB4K,OADiC,IAAxB3J,EAAOhB,OAAO2K,OAAiD,OAAxB3J,EAAOhB,OAAO2K,MACtD3J,EAAOhB,OAAO2K,MAEd5K,EAAGme,YAGXtT,OADkC,IAAzB5J,EAAOhB,OAAO4K,QAAmD,OAAzB5J,EAAOhB,OAAO4K,OACtD5J,EAAOhB,OAAO4K,OAEd7K,EAAGpC,aAEA,IAAVgN,GAAe3J,EAAO2C,gBAA6B,IAAXiH,GAAgB5J,EAAO6C,eAKnE8G,EAAQA,EAAQwT,UAAS,EAAA5d,EAAAqL,cAAa7L,EAAI,iBAAmB,EAAG,IAAMoe,UAAS,EAAA5d,EAAAqL,cAAa7L,EAAI,kBAAoB,EAAG,IACvH6K,EAASA,EAASuT,UAAS,EAAA5d,EAAAqL,cAAa7L,EAAI,gBAAkB,EAAG,IAAMoe,UAAS,EAAA5d,EAAAqL,cAAa7L,EAAI,mBAAqB,EAAG,IACrH6Z,OAAOwE,MAAMzT,KAAQA,EAAQ,GAC7BiP,OAAOwE,MAAMxT,KAASA,EAAS,GACnCjQ,OAAOyI,OAAOpC,EAAQ,CACpB2J,QACAC,SACAnC,KAAMzH,EAAO2C,eAAiBgH,EAAQC,I,qFC5B1C,IAAArK,EAAApE,EAAA,SACe,SAAAkiB,IACb,IAAMrd,EAASC,KACf,SAASqd,EAAkBC,GACzB,OAAIvd,EAAO2C,eACF4a,EAGF,CACL5T,MAAS,SACT,aAAc,cACd,iBAAkB,eAClB,cAAe,aACf,eAAgB,gBAChB,eAAgB,cAChB,gBAAiB,iBACjB6T,YAAe,gBACfD,E,CAEJ,SAASE,EAA0B3L,EAAM4L,GACvC,OAAOjM,WAAWK,EAAK7C,iBAAiBqO,EAAkBI,KAAW,E,CAEvE,IAAM1e,EAASgB,EAAOhB,OAEpBsL,EAKEtK,EALFsK,UACA7E,EAIEzF,EAJFyF,SACA+B,EAGExH,EAHFyH,KACAoC,EAEE7J,EAFFoJ,aACAyB,EACE7K,EADF6K,SAEI8S,EAAY3d,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,QAC7Cub,EAAuBD,EAAY3d,EAAOgJ,QAAQzG,OAAO1I,OAASmG,EAAOuC,OAAO1I,OAChF0I,GAAS,EAAAhD,EAAAmG,iBAAgBD,EAAU,IAA6BxJ,OAAzB+D,EAAOhB,OAAO2G,WAAW,mBAChEkY,EAAeF,EAAY3d,EAAOgJ,QAAQzG,OAAO1I,OAAS0I,EAAO1I,OACnE4I,EAAW,GACTD,EAAa,GACbE,EAAkB,GACpBob,EAAe9e,EAAO+e,mBACE,mBAAjBD,IACTA,EAAe9e,EAAO+e,mBAAmB3e,KAAKY,IAEhD,IAAIge,EAAchf,EAAOif,kBACE,mBAAhBD,IACTA,EAAchf,EAAOif,kBAAkB7e,KAAKY,IAE9C,IAAMke,EAAyBle,EAAOyC,SAAS5I,OACzCskB,EAA2Bne,EAAOwC,WAAW3I,OAC/CukB,EAAepf,EAAOof,aACtBC,GAAiBP,EACjBQ,EAAgB,EAChBxY,EAAQ,EACZ,QAA0B,IAAf0B,EAAX,CAG4B,iBAAjB4W,GAA6BA,EAAanX,QAAQ,MAAQ,IACnEmX,EAAe3M,WAAW2M,EAAajN,QAAQ,IAAK,KAAO,IAAM3J,GAEnExH,EAAOue,aAAeH,EAGtB7b,EAAO9F,SAAQ,SAAA+I,GACTqE,EACFrE,EAAQzK,MAAMyjB,WAAa,GAE3BhZ,EAAQzK,MAAMyiB,YAAc,GAE9BhY,EAAQzK,MAAM0jB,aAAe,GAC7BjZ,EAAQzK,MAAM2jB,UAAY,E,IAIxB1f,EAAO2I,gBAAkB3I,EAAO2f,WAClC,EAAApf,EAAAqf,gBAAetU,EAAW,kCAAmC,KAC7D,EAAA/K,EAAAqf,gBAAetU,EAAW,iCAAkC,KAE9D,IAMIzC,EANEgX,EAAc7f,EAAO8f,MAAQ9f,EAAO8f,KAAKC,KAAO,GAAK/e,EAAO8e,KAC9DD,GACF7e,EAAO8e,KAAKE,WAAWnB,GAQzB,IAHA,IAAMoB,EAAgD,SAAzBjgB,EAAO+J,eAA4B/J,EAAOf,aAAetE,OAAOD,KAAKsF,EAAOf,aAAa+H,QAAO,SAAAT,GAC3H,YAAwD,IAA1CvG,EAAOf,YAAYsH,GAAKwD,a,IACrClP,OAAS,EACHD,EAAI,EAAGA,EAAIikB,EAAcjkB,GAAK,EAAG,CACxCiO,EAAY,EACZ,IAAInL,OAAA,EAKJ,GAJI6F,EAAO3I,KAAI8C,EAAQ6F,EAAO3I,IAC1BilB,GACF7e,EAAO8e,KAAKI,YAAYtlB,EAAG8C,EAAOmhB,EAAcP,IAE9C/a,EAAO3I,IAAyC,UAAnC,EAAA2F,EAAAqL,cAAalO,EAAO,WAArC,CAEA,GAA6B,SAAzBsC,EAAO+J,cAA0B,CAC/BkW,IACF1c,EAAO3I,GAAGmB,MAAMuiB,EAAkB,UAAa,IAEjD,IAAM6B,EAAcnQ,iBAAiBtS,GAC/B0iB,EAAmB1iB,EAAM3B,MAAMiW,UAC/BqO,EAAyB3iB,EAAM3B,MAAMkW,gBAO3C,GANImO,IACF1iB,EAAM3B,MAAMiW,UAAY,QAEtBqO,IACF3iB,EAAM3B,MAAMkW,gBAAkB,QAE5BjS,EAAOsgB,aACTzX,EAAY7H,EAAO2C,gBAAiB,EAAApD,EAAAggB,kBAAiB7iB,EAAO,SAAS,IAAQ,EAAA6C,EAAAggB,kBAAiB7iB,EAAO,UAAU,OAC1G,CAEL,IAAMiN,EAAQ8T,EAA0B0B,EAAa,SAC/CK,EAAc/B,EAA0B0B,EAAa,gBACrDM,EAAehC,EAA0B0B,EAAa,iBACtDX,EAAaf,EAA0B0B,EAAa,eACpD3B,EAAcC,EAA0B0B,EAAa,gBACrDO,EAAYP,EAAYlQ,iBAAiB,cAC/C,GAAIyQ,GAA2B,eAAdA,EACf7X,EAAY8B,EAAQ6U,EAAahB,MAC5B,CACL,IACEN,EAEExgB,EAFFwgB,YAGFrV,EAAY8B,EAAQ6V,EAAcC,EAAejB,EAAahB,GAD1D9gB,EADFga,YAEyFwG,E,EAG3FkC,IACF1iB,EAAM3B,MAAMiW,UAAYoO,GAEtBC,IACF3iB,EAAM3B,MAAMkW,gBAAkBoO,GAE5BrgB,EAAOsgB,eAAczX,EAAYtE,KAAKoc,MAAM9X,G,MAEhDA,GAAaL,GAAcxI,EAAO+J,cAAgB,GAAKqV,GAAgBpf,EAAO+J,cAC1E/J,EAAOsgB,eAAczX,EAAYtE,KAAKoc,MAAM9X,IAC5CtF,EAAO3I,KACT2I,EAAO3I,GAAGmB,MAAMuiB,EAAkB,UAAY,GAAarhB,OAAV4L,EAAU,OAG3DtF,EAAO3I,KACT2I,EAAO3I,GAAGkO,gBAAkBD,GAE9BnF,EAAgB3C,KAAK8H,GACjB7I,EAAO2I,gBACT0W,EAAgBA,EAAgBxW,EAAY,EAAIyW,EAAgB,EAAIF,EAC9C,IAAlBE,GAA6B,IAAN1kB,IAASykB,EAAgBA,EAAgB7W,EAAa,EAAI4W,GAC3E,IAANxkB,IAASykB,EAAgBA,EAAgB7W,EAAa,EAAI4W,GAC1D7a,KAAKqc,IAAIvB,GAAiB,OAAUA,EAAgB,GACpDrf,EAAOsgB,eAAcjB,EAAgB9a,KAAKoc,MAAMtB,IAChDvY,EAAQ9G,EAAO6gB,gBAAmB,GAAGpd,EAAS1C,KAAKse,GACvD7b,EAAWzC,KAAKse,KAEZrf,EAAOsgB,eAAcjB,EAAgB9a,KAAKoc,MAAMtB,KAC/CvY,EAAQvC,KAAK8C,IAAIrG,EAAOhB,OAAO8gB,mBAAoBha,IAAU9F,EAAOhB,OAAO6gB,gBAAmB,GAAGpd,EAAS1C,KAAKse,GACpH7b,EAAWzC,KAAKse,GAChBA,EAAgBA,EAAgBxW,EAAYuW,GAE9Cpe,EAAOue,aAAe1W,EAAYuW,EAClCE,EAAgBzW,EAChB/B,GAAS,CArEmD,C,CAmF9D,GAZA9F,EAAOue,YAAchb,KAAK+C,IAAItG,EAAOue,YAAa/W,GAAcwW,EAC5DnU,GAAOgB,IAA+B,UAAlB7L,EAAO+gB,QAAwC,cAAlB/gB,EAAO+gB,UAC1DzV,EAAUvP,MAAM4O,MAAQ,GAA4C1N,OAAzC+D,EAAOue,YAAcvf,EAAOof,aAAa,OAElEpf,EAAOghB,iBACT1V,EAAUvP,MAAMuiB,EAAkB,UAAY,GAA4CrhB,OAAzC+D,EAAOue,YAAcvf,EAAOof,aAAa,OAExFS,GACF7e,EAAO8e,KAAKmB,kBAAkBpY,EAAWpF,EAAU6a,IAIhDte,EAAO2I,eAAgB,CAE1B,IADA,IAAMuY,EAAgB,GACbpjB,EAAI,EAAGA,EAAI2F,EAAS5I,OAAQiD,GAAK,EAAG,CAC3C,IAAIqjB,EAAiB1d,EAAS3F,GAC1BkC,EAAOsgB,eAAca,EAAiB5c,KAAKoc,MAAMQ,IACjD1d,EAAS3F,IAAMkD,EAAOue,YAAc/W,GACtC0Y,EAAcngB,KAAKogB,E,CAGvB1d,EAAWyd,EACP3c,KAAKoc,MAAM3f,EAAOue,YAAc/W,GAAcjE,KAAKoc,MAAMld,EAASA,EAAS5I,OAAS,IAAM,GAC5F4I,EAAS1C,KAAKC,EAAOue,YAAc/W,E,CAGvC,GAAImW,GAAa3e,EAAOrB,KAAM,CAC5B,IAAM8J,EAAO/E,EAAgB,GAAK0b,EAClC,GAAIpf,EAAO6gB,eAAiB,EAG1B,IAFA,IAAMO,EAAS7c,KAAK8c,MAAMrgB,EAAOgJ,QAAQkC,aAAelL,EAAOgJ,QAAQsX,aAAethB,EAAO6gB,gBACvFU,EAAY9Y,EAAOzI,EAAO6gB,eACvBjjB,EAAI,EAAGA,EAAIwjB,EAAQxjB,GAAK,EAC/B6F,EAAS1C,KAAK0C,EAASA,EAAS5I,OAAS,GAAK0mB,GAGlD,IAAK,IAAIvY,EAAI,EAAGA,EAAIhI,EAAOgJ,QAAQkC,aAAelL,EAAOgJ,QAAQsX,YAAatY,GAAK,EACnD,IAA1BhJ,EAAO6gB,gBACTpd,EAAS1C,KAAK0C,EAASA,EAAS5I,OAAS,GAAK4N,GAEhDjF,EAAWzC,KAAKyC,EAAWA,EAAW3I,OAAS,GAAK4N,GACpDzH,EAAOue,aAAe9W,C,CAI1B,GADwB,IAApBhF,EAAS5I,SAAc4I,EAAW,CAAC,IACX,IAAxBzD,EAAOof,aAAoB,CAC7B,IAAMoC,EAAMxgB,EAAO2C,gBAAkBkH,EAAM,aAAeyT,EAAkB,eAC5E/a,EAAOyD,QAAO,SAACya,EAAGC,GAChB,QAAK1hB,EAAO2f,UAAW3f,EAAOrB,OAC1B+iB,IAAene,EAAO1I,OAAS,C,IAIlC4C,SAAQ,SAAA+I,GACTA,EAAQzK,MAAMylB,GAAO,GAAgBvkB,OAAbmiB,EAAa,K,IAGzC,GAAIpf,EAAO2I,gBAAkB3I,EAAO2hB,qBAAsB,CACxD,IAAIC,EAAgB,EACpBle,EAAgBjG,SAAQ,SAAAokB,GACtBD,GAAiBC,GAAkB7hB,EAAOof,aAAepf,EAAOof,aAAe,E,IAGjF,IAAM0C,GADNF,GAAiB5hB,EAAOof,cACQ5W,EAChC/E,EAAWA,EAAS7G,KAAI,SAAAmlB,GACtB,OAAIA,EAAO,GAAWjD,EAClBiD,EAAOD,EAAgBA,EAAU9C,EAC9B+C,C,IAGX,GAAI/hB,EAAOgiB,yBAA0B,CACnC,IAAIC,EAAgB,EAKpB,GAJAve,EAAgBjG,SAAQ,SAAAokB,GACtBI,GAAiBJ,GAAkB7hB,EAAOof,aAAepf,EAAOof,aAAe,E,KAEjF6C,GAAiBjiB,EAAOof,cACJ5W,EAAY,CAC9B,IAAM0Z,GAAmB1Z,EAAayZ,GAAiB,EACvDxe,EAAShG,SAAQ,SAACskB,EAAMI,GACtB1e,EAAS0e,GAAaJ,EAAOG,C,IAE/B1e,EAAW/F,SAAQ,SAACskB,EAAMI,GACxB3e,EAAW2e,GAAaJ,EAAOG,C,KAUrC,GANAvnB,OAAOyI,OAAOpC,EAAQ,CACpBuC,SACAE,WACAD,aACAE,oBAEE1D,EAAO2I,gBAAkB3I,EAAO2f,UAAY3f,EAAO2hB,qBAAsB,EAC3E,EAAAphB,EAAAqf,gBAAetU,EAAW,kCAAmC,GAAgBrO,QAAZwG,EAAS,GAAG,QAC7E,EAAAlD,EAAAqf,gBAAetU,EAAW,iCAAkC,GAAqErO,OAAlE+D,EAAOyH,KAAO,EAAI/E,EAAgBA,EAAgB7I,OAAS,GAAK,EAAE,OACjI,IAAMunB,GAAiBphB,EAAOyC,SAAS,GACjC4e,IAAmBrhB,EAAOwC,WAAW,GAC3CxC,EAAOyC,SAAWzC,EAAOyC,SAAS7G,KAAI,SAAA0lB,G,OAAKA,EAAIF,C,IAC/CphB,EAAOwC,WAAaxC,EAAOwC,WAAW5G,KAAI,SAAA0lB,G,OAAKA,EAAID,E,IAerD,GAbIxD,IAAiBD,GACnB5d,EAAO6B,KAAK,sBAEVY,EAAS5I,SAAWqkB,IAClBle,EAAOhB,OAAOkK,eAAelJ,EAAO7B,gBACxC6B,EAAO6B,KAAK,yBAEVW,EAAW3I,SAAWskB,GACxBne,EAAO6B,KAAK,0BAEV7C,EAAOuiB,qBACTvhB,EAAOwc,uBAEJmB,GAAc3e,EAAO2f,SAA8B,UAAlB3f,EAAO+gB,QAAwC,SAAlB/gB,EAAO+gB,QAAoB,CAC5F,IAAMyB,GAAsB,GAAiCvlB,OAA9B+C,EAAOkI,uBAAuB,mBACvDua,GAA6BzhB,EAAOjB,GAAGtE,UAAUG,SAAS4mB,IAC5D3D,GAAgB7e,EAAO0iB,wBACpBD,IAA4BzhB,EAAOjB,GAAGtE,UAAUoC,IAAI2kB,IAChDC,IACTzhB,EAAOjB,GAAGtE,UAAUgP,OAAO+X,G,CArO7B,C,uCCpDW,SAAAG,EAA0Bvb,GACvC,IAIIxM,EAJEoG,EAASC,KACT2hB,EAAe,GACfjE,EAAY3d,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QACtDuX,EAAY,EAEK,iBAAVxT,EACTpG,EAAO6hB,cAAczb,IACF,IAAVA,GACTpG,EAAO6hB,cAAc7hB,EAAOhB,OAAOoH,OAErC,IAAM0b,EAAkB,SAAAhc,GACtB,OAAI6X,EACK3d,EAAOuC,OAAOvC,EAAO+hB,oBAAoBjc,IAE3C9F,EAAOuC,OAAOuD,E,EAGvB,GAAoC,SAAhC9F,EAAOhB,OAAO+J,eAA4B/I,EAAOhB,OAAO+J,cAAgB,EAC1E,GAAI/I,EAAOhB,OAAO2I,gBACf3H,EAAOgiB,eAAiB,IAAIvlB,SAAQ,SAAAC,GACnCklB,EAAa7hB,KAAKrD,E,SAGpB,IAAK9C,EAAI,EAAGA,EAAI2J,KAAK8c,KAAKrgB,EAAOhB,OAAO+J,eAAgBnP,GAAK,EAAG,CAC9D,IAAMqoB,EAAQjiB,EAAO8C,YAAclJ,EACnC,GAAIqoB,EAAQjiB,EAAOuC,OAAO1I,SAAW8jB,EAAW,MAChDiE,EAAa7hB,KAAK+hB,EAAgBG,G,MAItCL,EAAa7hB,KAAK+hB,EAAgB9hB,EAAO8C,cAI3C,IAAKlJ,EAAI,EAAGA,EAAIgoB,EAAa/nB,OAAQD,GAAK,EACxC,QAA+B,IAApBgoB,EAAahoB,GAAoB,CAC1C,IAAMgQ,EAASgY,EAAahoB,GAAGsoB,aAC/BtI,EAAYhQ,EAASgQ,EAAYhQ,EAASgQ,C,EAK1CA,GAA2B,IAAdA,KAAiB5Z,EAAOsK,UAAUvP,MAAM6O,OAAS,GAAa3N,OAAV2d,EAAU,M,oFC3ClE,SAAAuI,IAKb,IAJA,IAAMniB,EAASC,KACTsC,EAASvC,EAAOuC,OAEhB6f,EAAcpiB,EAAOkK,UAAYlK,EAAO2C,eAAiB3C,EAAOsK,UAAU+X,WAAariB,EAAOsK,UAAUgY,UAAY,EACjH1oB,EAAI,EAAGA,EAAI2I,EAAO1I,OAAQD,GAAK,EACtC2I,EAAO3I,GAAG2oB,mBAAqBviB,EAAO2C,eAAiBJ,EAAO3I,GAAGyoB,WAAa9f,EAAO3I,GAAG0oB,WAAaF,EAAcpiB,EAAOsD,uB,oFCN/G,SAAAkf,I,IAA8BllB,EAAAqB,UAAA9E,OAAA,YAAA8E,UAAA,GAAuCA,UAAA,GAA3BsB,MAAQA,KAAK3C,WAAa,EAC3E0C,EAASC,KACTjB,EAASgB,EAAOhB,OAEpBuD,EAGEvC,EAHFuC,OACAsH,EAEE7J,EAFFoJ,aACA3G,EACEzC,EADFyC,SAEF,GAAsB,IAAlBF,EAAO1I,OAAX,MAC2C,IAAhC0I,EAAO,GAAGggB,mBAAmCviB,EAAOwc,qBAC/D,IAAIiG,GAAgBnlB,EAChBuM,IAAK4Y,EAAenlB,GAGxBiF,EAAO9F,SAAQ,SAAA+I,GACbA,EAAQ/K,UAAUgP,OAAOzK,EAAO8M,kB,IAElC9L,EAAO0iB,qBAAuB,GAC9B1iB,EAAOgiB,cAAgB,GACvB,IAAK,IAAIpoB,EAAI,EAAGA,EAAI2I,EAAO1I,OAAQD,GAAK,EAAG,CACzC,IAAM8C,EAAQ6F,EAAO3I,GACjB+oB,EAAcjmB,EAAM6lB,kBACpBvjB,EAAO2f,SAAW3f,EAAO2I,iBAC3Bgb,GAAepgB,EAAO,GAAGggB,mBAE3B,IAAMK,GAAiBH,GAAgBzjB,EAAO2I,eAAiB3H,EAAOuG,eAAiB,GAAKoc,IAAgBjmB,EAAMoL,gBAAkB9I,EAAOof,cACrIyE,GAAyBJ,EAAehgB,EAAS,IAAMzD,EAAO2I,eAAiB3H,EAAOuG,eAAiB,GAAKoc,IAAgBjmB,EAAMoL,gBAAkB9I,EAAOof,cAC3J0E,IAAgBL,EAAeE,GAC/BI,EAAaD,EAAc9iB,EAAO0C,gBAAgB9I,GAClDopB,EAAYF,GAAe,GAAKA,EAAc9iB,EAAOyH,KAAO,GAAKsb,EAAa,GAAKA,GAAc/iB,EAAOyH,MAAQqb,GAAe,GAAKC,GAAc/iB,EAAOyH,KAC3Jub,IACFhjB,EAAOgiB,cAAcjiB,KAAKrD,GAC1BsD,EAAO0iB,qBAAqB3iB,KAAKnG,GACjC2I,EAAO3I,GAAGa,UAAUoC,IAAImC,EAAO8M,oBAEjCpP,EAAMyG,SAAW0G,GAAO+Y,EAAgBA,EACxClmB,EAAMumB,iBAAmBpZ,GAAOgZ,EAAwBA,C,CA5BjC,C,oFCRZ,SAAAK,EAAwB5lB,GACrC,IAAM0C,EAASC,KACf,QAAyB,IAAd3C,EAA2B,CACpC,IAAM6lB,EAAanjB,EAAOoJ,cAAe,EAAK,EAE9C9L,EAAY0C,GAAUA,EAAO1C,WAAa0C,EAAO1C,UAAY6lB,GAAc,C,CAE7E,IAAMnkB,EAASgB,EAAOhB,OAChBokB,EAAiBpjB,EAAOyG,eAAiBzG,EAAOuG,eAEpDpD,EAIEnD,EAJFmD,SACAH,EAGEhD,EAHFgD,YACAC,EAEEjD,EAFFiD,MACAogB,EACErjB,EADFqjB,aAEIC,EAAetgB,EACfugB,EAAStgB,EACf,GAAuB,IAAnBmgB,EACFjgB,EAAW,EACXH,GAAc,EACdC,GAAQ,MACH,CACLE,GAAY7F,EAAY0C,EAAOuG,gBAAkB6c,EACjD,IAAMI,EAAqBjgB,KAAKqc,IAAItiB,EAAY0C,EAAOuG,gBAAkB,EACnEkd,EAAelgB,KAAKqc,IAAItiB,EAAY0C,EAAOyG,gBAAkB,EACnEzD,EAAcwgB,GAAsBrgB,GAAY,EAChDF,EAAQwgB,GAAgBtgB,GAAY,EAChCqgB,IAAoBrgB,EAAW,GAC/BsgB,IAActgB,EAAW,E,CAE/B,GAAInE,EAAOrB,KAAM,CACf,IAAMiI,EAAkB5F,EAAO+hB,oBAAoB,GAC7C2B,EAAiB1jB,EAAO+hB,oBAAoB/hB,EAAOuC,OAAO1I,OAAS,GACnE8pB,EAAsB3jB,EAAOwC,WAAWoD,GACxCge,EAAqB5jB,EAAOwC,WAAWkhB,GACvCG,EAAe7jB,EAAOwC,WAAWxC,EAAOwC,WAAW3I,OAAS,GAC5DiqB,EAAevgB,KAAKqc,IAAItiB,IAE5B+lB,EADES,GAAgBH,GACFG,EAAeH,GAAuBE,GAEtCC,EAAeD,EAAeD,GAAsBC,GAEnD,IAAGR,GAAgB,E,CAExC1pB,OAAOyI,OAAOpC,EAAQ,CACpBmD,WACAkgB,eACArgB,cACAC,WAEEjE,EAAOuiB,qBAAuBviB,EAAO2I,gBAAkB3I,EAAO6J,aAAY7I,EAAO0c,qBAAqBpf,GACtG0F,IAAgBsgB,GAClBtjB,EAAO6B,KAAK,yBAEVoB,IAAUsgB,GACZvjB,EAAO6B,KAAK,oBAEVyhB,IAAiBtgB,GAAeugB,IAAWtgB,IAC7CjD,EAAO6B,KAAK,YAEd7B,EAAO6B,KAAK,WAAYsB,E,kIC5D1B,IAAA5D,EAAApE,EAAA,SACe,SAAA4oB,IACb,IAcIC,EAdEhkB,EAASC,KAEbsC,EAIEvC,EAJFuC,OACAvD,EAGEgB,EAHFhB,OACAyG,EAEEzF,EAFFyF,SACA3C,EACE9C,EADF8C,YAEI6a,EAAY3d,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,QAC7C4hB,EAAmB,SAAA5P,GACvB,OAAO,EAAA9U,EAAAmG,iBAAgBD,EAAU,IAAwBxJ,OAApB+C,EAAO2G,YAAsC1J,OAAzBoY,EAAS,kBAAyBpY,OAAToY,IAAY,E,EAMhG,GAJA9R,EAAO9F,SAAQ,SAAA+I,GACbA,EAAQ/K,UAAUgP,OAAOzK,EAAO+M,iBAAkB/M,EAAOgN,eAAgBhN,EAAOiN,e,IAG9E0R,EACF,GAAI3e,EAAOrB,KAAM,CACf,IAAI+iB,EAAa5d,EAAc9C,EAAOgJ,QAAQkC,aAC1CwV,EAAa,IAAGA,EAAa1gB,EAAOgJ,QAAQzG,OAAO1I,OAAS6mB,GAC5DA,GAAc1gB,EAAOgJ,QAAQzG,OAAO1I,SAAQ6mB,GAAc1gB,EAAOgJ,QAAQzG,OAAO1I,QACpFmqB,EAAcC,EAAiB,6BAAwChoB,OAAXykB,EAAW,M,MAEvEsD,EAAcC,EAAiB,6BAAyChoB,OAAZ6G,EAAY,YAG1EkhB,EAAczhB,EAAOO,GAEvB,GAAIkhB,EAAa,CAEfA,EAAYvpB,UAAUoC,IAAImC,EAAO+M,kBAGjC,IAAImY,GAAY,EAAA3kB,EAAA4kB,gBAAeH,EAAa,IAAsB/nB,OAAlB+C,EAAO2G,WAAW,mBAAiB,GAC/E3G,EAAOrB,OAASumB,IAClBA,EAAY3hB,EAAO,IAEjB2hB,GACFA,EAAUzpB,UAAUoC,IAAImC,EAAOgN,gBAGjC,IAAIoY,GAAY,EAAA7kB,EAAA8kB,gBAAeL,EAAa,IAAsB/nB,OAAlB+C,EAAO2G,WAAW,mBAAiB,GAC/E3G,EAAOrB,KAGPymB,GACFA,EAAU3pB,UAAUoC,IAAImC,EAAOiN,e,CAGnCjM,EAAOskB,mB,qFClDT,IAAAhc,EAAAnN,EAAA,SAyBe,SAAAopB,EAA2BC,GACxC,IAUIrD,EAgCAsD,EA1CEzkB,EAASC,KACT3C,EAAY0C,EAAOoJ,aAAepJ,EAAO1C,WAAa0C,EAAO1C,UAEjEmF,EAKEzC,EALFyC,SACAzD,EAIEgB,EAJFhB,OACA0lB,EAGE1kB,EAHF8C,YACA6hB,EAEE3kB,EAFF+C,UACA6hB,EACE5kB,EADFmhB,UAEEre,EAAc0hB,EAEZK,EAAsB,SAAAC,GAC1B,IAAI/hB,EAAY+hB,EAAS9kB,EAAOgJ,QAAQkC,aAOxC,OANInI,EAAY,IACdA,EAAY/C,EAAOgJ,QAAQzG,OAAO1I,OAASkJ,GAEzCA,GAAa/C,EAAOgJ,QAAQzG,OAAO1I,SACrCkJ,GAAa/C,EAAOgJ,QAAQzG,OAAO1I,QAE9BkJ,C,EAKT,QAH2B,IAAhBD,IACTA,EA/CG,SAAmC9C,GAOxC,IANA,IAKI8C,EAJFN,EAEExC,EAFFwC,WACAxD,EACEgB,EADFhB,OAEI1B,EAAY0C,EAAOoJ,aAAepJ,EAAO1C,WAAa0C,EAAO1C,UAE1D1D,EAAI,EAAGA,EAAI4I,EAAW3I,OAAQD,GAAK,OACT,IAAtB4I,EAAW5I,EAAI,GACpB0D,GAAakF,EAAW5I,IAAM0D,EAAYkF,EAAW5I,EAAI,IAAM4I,EAAW5I,EAAI,GAAK4I,EAAW5I,IAAM,EACtGkJ,EAAclJ,EACL0D,GAAakF,EAAW5I,IAAM0D,EAAYkF,EAAW5I,EAAI,KAClEkJ,EAAclJ,EAAI,GAEX0D,GAAakF,EAAW5I,KACjCkJ,EAAclJ,GAOlB,OAHIoF,EAAO+lB,sBACLjiB,EAAc,QAA4B,IAAhBA,KAA6BA,EAAc,GAEpEA,C,CAyBSkiB,CAA0BhlB,IAEtCyC,EAASwE,QAAQ3J,IAAc,EACjC6jB,EAAY1e,EAASwE,QAAQ3J,OACxB,CACL,IAAM2nB,EAAO1hB,KAAK8C,IAAIrH,EAAO8gB,mBAAoBhd,GACjDqe,EAAY8D,EAAO1hB,KAAKoc,OAAO7c,EAAcmiB,GAAQjmB,EAAO6gB,e,CAG9D,GADIsB,GAAa1e,EAAS5I,SAAQsnB,EAAY1e,EAAS5I,OAAS,GAC5DiJ,IAAgB4hB,EAQlB,OAPIvD,IAAcyD,IAChB5kB,EAAOmhB,UAAYA,EACnBnhB,EAAO6B,KAAK,yBAEV7B,EAAOhB,OAAOrB,MAAQqC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,UAChErC,EAAO+C,UAAY8hB,EAAoB/hB,KAOzC2hB,EADEzkB,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,SAAWrD,EAAOrB,KACzCknB,EAAoB/hB,GACvB9C,EAAOuC,OAAOO,GACXqa,SAASnd,EAAOuC,OAAOO,GAAamD,aAAa,4BAA8BnD,EAAa,IAE5FA,EAEdnJ,OAAOyI,OAAOpC,EAAQ,CACpB4kB,oBACAzD,YACAwD,oBACA5hB,UAAA0hB,EACAC,gBACA5hB,gBAEE9C,EAAO8K,cACT,EAAAxC,EAAAiD,SAAQvL,GAEVA,EAAO6B,KAAK,qBACZ7B,EAAO6B,KAAK,mBACR8iB,IAAsBF,GACxBzkB,EAAO6B,KAAK,oBAEV7B,EAAO8K,aAAe9K,EAAOhB,OAAOmM,qBACtCnL,EAAO6B,KAAK,c,gJC7FT,IAAMqjB,EAAuB,SAACllB,EAAQoI,GAC3C,GAAKpI,IAAUA,EAAOmH,WAAcnH,EAAOhB,OAA3C,CACA,IACMwG,EAAU4C,EAAQ+c,QADInlB,EAAOkK,UAAa,eAAgB,IAA6BjO,OAAzB+D,EAAOhB,OAAO2G,aAElF,GAAIH,EAAS,CACX,IAAM4f,EAAS5f,EAAQrL,cAAc,IAAqC8B,OAAjC+D,EAAOhB,OAAOqmB,qBACnDD,GAAQA,EAAO3b,Q,CAL8B,C,EAQ/C6b,EAAS,SAACtlB,EAAQ8F,GACtB,GAAK9F,EAAOuC,OAAOuD,GAAnB,CACA,IAAMsC,EAAUpI,EAAOuC,OAAOuD,GAAO3L,cAAc,oBAC/CiO,GAASA,EAAQyD,gBAAgB,UAFV,C,EAIhB0Z,EAAU,SAAAvlB,GACrB,GAAKA,IAAUA,EAAOmH,WAAcnH,EAAOhB,OAA3C,CACA,IAAIwmB,EAASxlB,EAAOhB,OAAOymB,oBACrBnT,EAAMtS,EAAOuC,OAAO1I,OAC1B,GAAKyY,GAAQkT,KAAUA,EAAS,GAAhC,CACAA,EAASjiB,KAAK8C,IAAImf,EAAQlT,GAC1B,IAAMvJ,EAAgD,SAAhC/I,EAAOhB,OAAO+J,cAA2B/I,EAAO0lB,uBAAyBniB,KAAK8c,KAAKrgB,EAAOhB,OAAO+J,eACjHjG,EAAc9C,EAAO8C,YACrB6iB,EAAuB7iB,EAAciG,EAAgB,EAC3D,GAAI/I,EAAOhB,OAAO4mB,OAChB,IAAK,IAAIhsB,EAAIkJ,EAAc0iB,EAAQ5rB,GAAK+rB,EAAuBH,EAAQ5rB,GAAK,EAAG,CAC7E,IAAMmJ,GAAanJ,EAAI0Y,EAAMA,GAAOA,EAChCvP,IAAcD,GAAeC,EAAY4iB,GAAsBL,EAAOtlB,EAAQ+C,E,MAGpF,IAAK,IAAIjG,EAAIyG,KAAK+C,IAAIqf,EAAuBH,EAAQ,GAAI1oB,GAAKyG,KAAK8C,IAAIsf,EAAuBH,EAAQlT,EAAM,GAAIxV,GAAK,EAC/GA,IAAMgG,GAAehG,EAAI6oB,GAAsBL,EAAOtlB,EAAQlD,EAZnC,CAHgB,C,uCCftC,SAAA+oB,EAA4BtrB,GACzC,IAIImmB,EAJE1gB,EAASC,KACTjB,EAASgB,EAAOhB,OAChBtC,EAAQnC,EAAE4qB,QAAQ,IAAsBlpB,OAAlB+C,EAAO2G,WAAW,mBAC1CmgB,GAAa,EAEjB,GAAIppB,EACF,IAAK,IAAI9C,EAAI,EAAGA,EAAIoG,EAAOuC,OAAO1I,OAAQD,GAAK,EAC7C,GAAIoG,EAAOuC,OAAO3I,KAAO8C,EAAO,CAC9BopB,GAAa,EACbpF,EAAa9mB,EACb,K,CAIN,IAAI8C,IAASopB,EAUX,OAFA9lB,EAAO+lB,kBAAeliB,OACtB7D,EAAOgmB,kBAAeniB,GARtB7D,EAAO+lB,aAAerpB,EAClBsD,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QAC1CrC,EAAOgmB,aAAe7I,SAASzgB,EAAMuJ,aAAa,2BAA4B,IAE9EjG,EAAOgmB,aAAetF,EAOtB1hB,EAAOinB,0BAA+CpiB,IAAxB7D,EAAOgmB,cAA8BhmB,EAAOgmB,eAAiBhmB,EAAO8C,aACpG9C,EAAOimB,qB,kIC5BX,IAAAC,EAAA/qB,EAAA,S,oDAKAgrB,EAAe,CACbC,aAAAF,EAAA/oB,QACAyL,aAAAyd,EAAAlpB,QACAoJ,aAAA+f,EAAAnpB,QACAsJ,aAAA8f,EAAAppB,QACAuJ,YAAA8f,EAAArpB,Q,oFCVF,IAAAoC,EAAApE,EAAA,SACe,SAAAsrB,I,IAA4B5V,EAAAlS,UAAA9E,OAAA,YAAA8E,UAAA,GAAsCA,UAAA,GAA/BsB,KAAK0C,eAAiB,IAAM,IACtE3C,EAASC,KAEbjB,EAIEgB,EAJFhB,OACA6K,EAGE7J,EAHFoJ,aACA9L,EAEE0C,EAFF1C,UACAgN,EACEtK,EADFsK,UAEF,GAAItL,EAAO0nB,iBACT,OAAO7c,GAAOvM,EAAYA,EAE5B,GAAI0B,EAAO2f,QACT,OAAOrhB,EAET,IAAI4G,GAAmB,EAAA3E,EAAA6mB,cAAa9b,EAAWuG,GAG/C,OAFA3M,GAAoBlE,EAAOsD,wBACvBuG,IAAK3F,GAAoBA,GACtBA,GAAoB,C,uCClBd,SAAAyiB,EAAsBrpB,EAAWspB,GAC9C,IAAM5mB,EAASC,KAEb4J,EAIE7J,EAJFoJ,aACApK,EAGEgB,EAHFhB,OACAsL,EAEEtK,EAFFsK,UACAnH,EACEnD,EADFmD,SAEE0jB,EAAI,EACJC,EAAI,EAEJ9mB,EAAO2C,eACTkkB,EAAIhd,GAAOvM,EAAYA,EAEvBwpB,EAAIxpB,EAEF0B,EAAOsgB,eACTuH,EAAItjB,KAAKoc,MAAMkH,GACfC,EAAIvjB,KAAKoc,MAAMmH,IAEjB9mB,EAAOkD,kBAAoBlD,EAAO1C,UAClC0C,EAAO1C,UAAY0C,EAAO2C,eAAiBkkB,EAAIC,EAC3C9nB,EAAO2f,QACTrU,EAAUtK,EAAO2C,eAAiB,aAAe,aAAe3C,EAAO2C,gBAAkBkkB,GAAKC,EACpF9nB,EAAO0nB,mBACb1mB,EAAO2C,eACTkkB,GAAK7mB,EAAOsD,wBAEZwjB,GAAK9mB,EAAOsD,wBAEdgH,EAAUvP,MAAMiW,UAAY,eAAuB/U,OAAR4qB,EAAE,QAAc5qB,OAAR6qB,EAAE,QAAQ7qB,OApBrD,EAoBqD,QAK/D,IAAMmnB,EAAiBpjB,EAAOyG,eAAiBzG,EAAOuG,gBAC/B,IAAnB6c,EACY,GAEC9lB,EAAY0C,EAAOuG,gBAAkB6c,KAElCjgB,GAClBnD,EAAO0I,eAAepL,GAExB0C,EAAO6B,KAAK,eAAgB7B,EAAO1C,UAAWspB,E,oFC5CjC,SAAAG,IACb,OAAQ9mB,KAAKwC,SAAS,E,oFCDT,SAAAukB,IACb,OAAQ/mB,KAAKwC,SAASxC,KAAKwC,SAAS5I,OAAS,E,kICD/C,IAAAiW,EAAA3U,EAAA,S,aACe,SAAA8rB,I,IAAqB3pB,EAAAqB,UAAA9E,OAAA,YAAA8E,UAAA,GAAaA,UAAA,GAAD,EAAGyH,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEwoB,IAAAxoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAsBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UAC3HqB,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAsL,EACEtK,EADFsK,UAEF,GAAItK,EAAOqD,WAAarE,EAAOqoB,+BAC7B,OAAO,EAET,IAEIhe,EAFE9C,EAAevG,EAAOuG,eACtBE,EAAezG,EAAOyG,eAM5B,GAJiD4C,EAA7C8d,GAAmB7pB,EAAYiJ,EAA6BA,EAAsB4gB,GAAmB7pB,EAAYmJ,EAA6BA,EAAiCnJ,EAGnL0C,EAAO0I,eAAeW,GAClBrK,EAAO2f,QAAS,CAClB,IAAM2I,EAAMtnB,EAAO2C,eACnB,GAAc,IAAVyD,EACFkE,EAAUgd,EAAM,aAAe,cAAgBje,MAC1C,CACL,IAAKrJ,EAAOG,QAAQ0W,aAMlB,OALA,EAAAtX,EAAAgoB,sBAAqB,CACnBvnB,SACAmT,gBAAiB9J,EACjB+J,KAAMkU,EAAM,OAAS,SAEhB,E,IAEUE,EAAnBld,EAAU2J,UAASuT,EAGlB,GAFCxmB,EAAA8O,EAAA,CADiB0X,EAChBF,EAAM,OAAS,OAASje,GACzBrI,EAAA8O,EAAA,CAFiB0X,EAEjB,WAAU,UAFOA,G,CAKrB,OAAO,C,CAiCT,OA/Bc,IAAVphB,GACFpG,EAAO6hB,cAAc,GACrB7hB,EAAO4I,aAAaS,GAChB6d,IACFlnB,EAAO6B,KAAK,wBAAyBuE,EAAOghB,GAC5CpnB,EAAO6B,KAAK,oBAGd7B,EAAO6hB,cAAczb,GACrBpG,EAAO4I,aAAaS,GAChB6d,IACFlnB,EAAO6B,KAAK,wBAAyBuE,EAAOghB,GAC5CpnB,EAAO6B,KAAK,oBAET7B,EAAOqD,YACVrD,EAAOqD,WAAY,EACdrD,EAAOynB,oCACVznB,EAAOynB,kCAAoC,SAAuBltB,GAC3DyF,IAAUA,EAAOmH,WAClB5M,EAAE+Q,SAAWrL,OACjBD,EAAOsK,UAAU2C,oBAAoB,gBAAiBjN,EAAOynB,mCAC7DznB,EAAOynB,kCAAoC,YACpCznB,EAAOynB,kCACVP,GACFlnB,EAAO6B,KAAK,iB,GAIlB7B,EAAOsK,UAAUhQ,iBAAiB,gBAAiB0F,EAAOynB,sCAGvD,C,qFCpET,IAAAC,EAAAvsB,EAAA,S,0BAGAwsB,EAAe,CACb9F,cAAA6F,EAAAvqB,QACAyqB,gBAAAC,EAAA1qB,QACA2qB,cAAAC,EAAA5qB,Q,sCCNa,SAAA6qB,EAAuBzU,EAAUqT,GAC9C,IAAM5mB,EAASC,KACVD,EAAOhB,OAAO2f,UACjB3e,EAAOsK,UAAUvP,MAAMktB,mBAAqB,GAAYhsB,OAATsX,EAAS,OAE1DvT,EAAO6B,KAAK,gBAAiB0R,EAAUqT,E,kICLzC,IAAAsB,EAAA/sB,EAAA,SACe,SAAAgtB,I,IAAyBjB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEiE,EAASjE,UAAA9E,OAAA,EAAA8E,UAAA,UAC9DqB,EAASC,KACTjB,EAEFgB,EADFhB,OAEEA,EAAO2f,UACP3f,EAAO6J,YACT7I,EAAO8I,oBAET,EAAAof,EAAA/qB,SAAe,CACb6C,SACAknB,eACAtkB,YACAwlB,KAAM,U,uCCdK,SAAAC,EAAwBxsB,G,IACrCmE,EADqCnE,EACrCmE,OACAknB,EAFqCrrB,EAErCqrB,aACAtkB,EAHqC/G,EAGrC+G,UACAwlB,EAJqCvsB,EAIrCusB,KAGEtlB,EAEE9C,EAFF8C,YACA4hB,EACE1kB,EADF0kB,cAEE5a,EAAMlH,EAKV,GAJKkH,IAC8BA,EAA7BhH,EAAc4hB,EAAqB,OAAgB5hB,EAAc4hB,EAAqB,OAAkB,SAE9G1kB,EAAO6B,KAAK,aAAkB5F,OAALmsB,IACrBlB,GAAgBpkB,IAAgB4hB,EAAe,CACjD,GAAY,UAAR5a,EAEF,YADA9J,EAAO6B,KAAK,uBAA4B5F,OAALmsB,IAGrCpoB,EAAO6B,KAAK,wBAA6B5F,OAALmsB,IACxB,SAARte,EACF9J,EAAO6B,KAAK,sBAA2B5F,OAALmsB,IAElCpoB,EAAO6B,KAAK,sBAA2B5F,OAALmsB,G,mICxBxC,IAAAF,EAAA/sB,EAAA,SACe,SAAAmtB,I,IAAuBpB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEiE,EAASjE,UAAA9E,OAAA,EAAA8E,UAAA,UAC5DqB,EAASC,KACTjB,EAEFgB,EADFhB,OAEFgB,EAAOqD,WAAY,EACfrE,EAAO2f,UACX3e,EAAO6hB,cAAc,IACrB,EAAAqG,EAAA/qB,SAAe,CACb6C,SACAknB,eACAtkB,YACAwlB,KAAM,Q,qFCbV,IAAAG,EAAAptB,EAAA,S,8EAOAqtB,EAAe,CACbvf,QAAAsf,EAAAprB,QACAsrB,YAAAC,EAAAvrB,QACAwrB,UAAAC,EAAAzrB,QACA0rB,UAAAC,EAAA3rB,QACA4rB,WAAAC,EAAA7rB,QACA8rB,eAAAC,EAAA/rB,QACA8oB,oBAAAkD,EAAAhsB,Q,oFCdF,IAAA2S,EAAA3U,EAAA,S,aACe,SAAAiuB,I,IAAiBtjB,EAAAnH,UAAA9E,OAAA,YAAA8E,UAAA,GAASA,UAAA,GAAD,EAAGyH,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UAAE0qB,EAAO1qB,UAAA9E,OAAA,EAAA8E,UAAA,UACrF,iBAAVmH,IACTA,EAAQqX,SAASrX,EAAO,KAE1B,IAAM9F,EAASC,KACXygB,EAAa5a,EACb4a,EAAa,IAAGA,EAAa,GACjC,IACE1hB,EAQEgB,EARFhB,OACAyD,EAOEzC,EAPFyC,SACAD,EAMExC,EANFwC,WACAkiB,EAKE1kB,EALF0kB,cACA5hB,EAIE9C,EAJF8C,YACA+G,EAGE7J,EAHFoJ,aACAkB,EAEEtK,EAFFsK,UACAjI,EACErC,EADFqC,QAEF,GAAIrC,EAAOqD,WAAarE,EAAOqoB,iCAAmChlB,IAAY+kB,IAAaiC,EACzF,OAAO,EAET,IAAMpE,EAAO1hB,KAAK8C,IAAIrG,EAAOhB,OAAO8gB,mBAAoBY,GACpDS,EAAY8D,EAAO1hB,KAAKoc,OAAOe,EAAauE,GAAQjlB,EAAOhB,OAAO6gB,gBAClEsB,GAAa1e,EAAS5I,SAAQsnB,EAAY1e,EAAS5I,OAAS,GAChE,IAmCI+I,EAnCEtF,GAAamF,EAAS0e,GAE5B,GAAIniB,EAAO+lB,oBACT,IAAK,IAAInrB,EAAI,EAAGA,EAAI4I,EAAW3I,OAAQD,GAAK,EAAG,CAC7C,IAAM0vB,GAAuB/lB,KAAKoc,MAAkB,IAAZriB,GAClCisB,EAAiBhmB,KAAKoc,MAAsB,IAAhBnd,EAAW5I,IACvC4vB,EAAqBjmB,KAAKoc,MAA0B,IAApBnd,EAAW5I,EAAI,SACpB,IAAtB4I,EAAW5I,EAAI,GACpB0vB,GAAuBC,GAAkBD,EAAsBE,GAAsBA,EAAqBD,GAAkB,EAC9H7I,EAAa9mB,EACJ0vB,GAAuBC,GAAkBD,EAAsBE,IACxE9I,EAAa9mB,EAAI,GAEV0vB,GAAuBC,IAChC7I,EAAa9mB,E,CAKnB,GAAIoG,EAAO8K,aAAe4V,IAAe5d,EAAa,CACpD,IAAK9C,EAAOyD,gBAAkBnG,EAAY0C,EAAO1C,WAAaA,EAAY0C,EAAOuG,eAC/E,OAAO,EAET,IAAKvG,EAAO0D,gBAAkBpG,EAAY0C,EAAO1C,WAAaA,EAAY0C,EAAOyG,iBAC1E3D,GAAe,KAAO4d,EACzB,OAAO,C,CAcb,GAVIA,KAAgBgE,GAAiB,IAAMwC,GACzClnB,EAAO6B,KAAK,0BAId7B,EAAO0I,eAAepL,GAEQsF,EAA1B8d,EAAa5d,EAAyB,OAAgB4d,EAAa5d,EAAyB,OAAwB,QAGpH+G,IAAQvM,IAAc0C,EAAO1C,YAAcuM,GAAOvM,IAAc0C,EAAO1C,UAczE,OAbA0C,EAAO2G,kBAAkB+Z,GAErB1hB,EAAO6J,YACT7I,EAAO8I,mBAET9I,EAAO4G,sBACe,UAAlB5H,EAAO+gB,QACT/f,EAAO4I,aAAatL,GAEJ,UAAdsF,IACF5C,EAAO4nB,gBAAgBV,EAActkB,GACrC5C,EAAO8nB,cAAcZ,EAActkB,KAE9B,EAET,GAAI5D,EAAO2f,QAAS,CAClB,IAAM2I,EAAMtnB,EAAO2C,eACb8mB,EAAI5f,EAAMvM,GAAaA,EAC7B,GAAc,IAAV8I,EAAa,CACf,IAAMuX,EAAY3d,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QACtDsb,IACF3d,EAAOsK,UAAUvP,MAAMyY,eAAiB,OACxCxT,EAAO0pB,mBAAoB,GAEzB/L,IAAc3d,EAAO2pB,2BAA6B3pB,EAAOhB,OAAOiM,aAAe,GACjFjL,EAAO2pB,2BAA4B,EACnCna,uBAAsB,WACpBlF,EAAUgd,EAAM,aAAe,aAAemC,C,KAGhDnf,EAAUgd,EAAM,aAAe,aAAemC,EAE5C9L,GACFnO,uBAAsB,WACpBxP,EAAOsK,UAAUvP,MAAMyY,eAAiB,GACxCxT,EAAO0pB,mBAAoB,C,QAG1B,CACL,IAAK1pB,EAAOG,QAAQ0W,aAMlB,OALA,EAAAtX,EAAAgoB,sBAAqB,CACnBvnB,SACAmT,eAAgBsW,EAChBrW,KAAMkU,EAAM,OAAS,SAEhB,E,IAEUE,EAAnBld,EAAU2J,UAASuT,EAGlB,GAFCxmB,EAAA8O,EAAA,CADiB0X,EAChBF,EAAM,OAAS,MAAQmC,GACxBzoB,EAAA8O,EAAA,CAFiB0X,EAEjB,WAAU,UAFOA,G,CAKrB,OAAO,C,CAwBT,OAtBAxnB,EAAO6hB,cAAczb,GACrBpG,EAAO4I,aAAatL,GACpB0C,EAAO2G,kBAAkB+Z,GACzB1gB,EAAO4G,sBACP5G,EAAO6B,KAAK,wBAAyBuE,EAAOghB,GAC5CpnB,EAAO4nB,gBAAgBV,EAActkB,GACvB,IAAVwD,EACFpG,EAAO8nB,cAAcZ,EAActkB,GACzB5C,EAAOqD,YACjBrD,EAAOqD,WAAY,EACdrD,EAAO4pB,gCACV5pB,EAAO4pB,8BAAgC,SAAuBrvB,GACvDyF,IAAUA,EAAOmH,WAClB5M,EAAE+Q,SAAWrL,OACjBD,EAAOsK,UAAU2C,oBAAoB,gBAAiBjN,EAAO4pB,+BAC7D5pB,EAAO4pB,8BAAgC,YAChC5pB,EAAO4pB,8BACd5pB,EAAO8nB,cAAcZ,EAActkB,G,GAGvC5C,EAAOsK,UAAUhQ,iBAAiB,gBAAiB0F,EAAO4pB,iCAErD,C,uCC5IM,SAAAC,I,IAAqB/jB,EAAAnH,UAAA9E,OAAA,YAAA8E,UAAA,GAASA,UAAA,GAAD,EAAGyH,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UACrG,GAAqB,iBAAVmH,EAAoB,CAC7B,IAAMgkB,EAAgB3M,SAASrX,EAAO,IACtCA,EAAQgkB,C,CAEV,IAAM9pB,EAASC,KACX8pB,EAAWjkB,EASf,OARI9F,EAAOhB,OAAOrB,OACZqC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QAE1C0nB,GAAsB/pB,EAAOgJ,QAAQkC,aAErC6e,EAAW/pB,EAAO+hB,oBAAoBgI,IAGnC/pB,EAAOiJ,QAAQ8gB,EAAU3jB,EAAO8gB,EAAcE,E,oFCdxC,SAAA4C,I,IAAmB5jB,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UAClFqB,EAASC,KAEboC,EAGErC,EAHFqC,QACArD,EAEEgB,EAFFhB,OACAqE,EACErD,EADFqD,UAEF,IAAKhB,EAAS,OAAOrC,EACrB,IAAIiqB,EAAWjrB,EAAO6gB,eACO,SAAzB7gB,EAAO+J,eAAsD,IAA1B/J,EAAO6gB,gBAAwB7gB,EAAOkrB,qBAC3ED,EAAW1mB,KAAK+C,IAAItG,EAAO0lB,qBAAqB,WAAW,GAAO,IAEpE,IAAMyE,EAAYnqB,EAAO8C,YAAc9D,EAAO8gB,mBAAqB,EAAImK,EACjEtM,EAAY3d,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,QACnD,GAAIrD,EAAOrB,KAAM,CACf,GAAI0F,IAAcsa,GAAa3e,EAAOorB,oBAAqB,OAAO,EAClEpqB,EAAOqqB,QAAQ,CACbznB,UAAW,SAGb5C,EAAOsqB,YAActqB,EAAOsK,UAAUwK,U,CAExC,OAAI9V,EAAO4mB,QAAU5lB,EAAOiD,MACnBjD,EAAOiJ,QAAQ,EAAG7C,EAAO8gB,EAAcE,GAEzCpnB,EAAOiJ,QAAQjJ,EAAO8C,YAAcqnB,EAAW/jB,EAAO8gB,EAAcE,E,oFCzB9D,SAAAmD,I,IAAmBnkB,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UAClFqB,EAASC,KAEbjB,EAMEgB,EANFhB,OACAyD,EAKEzC,EALFyC,SACAD,EAIExC,EAJFwC,WACA4G,EAGEpJ,EAHFoJ,aACA/G,EAEErC,EAFFqC,QACAgB,EACErD,EADFqD,UAEF,IAAKhB,EAAS,OAAOrC,EACrB,IAAM2d,EAAY3d,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,QACnD,GAAIrD,EAAOrB,KAAM,CACf,GAAI0F,IAAcsa,GAAa3e,EAAOorB,oBAAqB,OAAO,EAClEpqB,EAAOqqB,QAAQ,CACbznB,UAAW,SAGb5C,EAAOsqB,YAActqB,EAAOsK,UAAUwK,U,CAExC,IAAMxX,EAAY8L,EAAepJ,EAAO1C,WAAa0C,EAAO1C,UAC5D,SAASktB,EAAUC,GACjB,OAAIA,EAAM,GAAWlnB,KAAKoc,MAAMpc,KAAKqc,IAAI6K,IAClClnB,KAAKoc,MAAM8K,E,CAEpB,IAIMC,EAJApB,EAAsBkB,EAAUltB,GAChCqtB,EAAqBloB,EAAS7G,KAAI,SAAA6uB,G,OAAOD,EAAUC,E,IACrDG,EAAWnoB,EAASkoB,EAAmB1jB,QAAQqiB,GAAuB,QAClD,IAAbsB,GAA4B5rB,EAAO2f,UAE5Clc,EAAShG,SAAQ,SAACskB,EAAMI,GAClBmI,GAAuBvI,IAEzB2J,EAAgBvJ,E,SAGS,IAAlBuJ,IACTE,EAAWnoB,EAASioB,EAAgB,EAAIA,EAAgB,EAAIA,KAGhE,IAAIG,EAAY,EAShB,QARwB,IAAbD,KACTC,EAAYroB,EAAWyE,QAAQ2jB,IACf,IAAGC,EAAY7qB,EAAO8C,YAAc,GACvB,SAAzB9D,EAAO+J,eAAsD,IAA1B/J,EAAO6gB,gBAAwB7gB,EAAOkrB,qBAC3EW,EAAYA,EAAY7qB,EAAO0lB,qBAAqB,YAAY,GAAQ,EACxEmF,EAAYtnB,KAAK+C,IAAIukB,EAAW,KAGhC7rB,EAAO4mB,QAAU5lB,EAAOgD,YAAa,CACvC,IAAM8nB,EAAY9qB,EAAOhB,OAAOgK,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,SAAWrC,EAAOgJ,QAAUhJ,EAAOgJ,QAAQzG,OAAO1I,OAAS,EAAImG,EAAOuC,OAAO1I,OAAS,EACvJ,OAAOmG,EAAOiJ,QAAQ6hB,EAAW1kB,EAAO8gB,EAAcE,E,CAExD,OAAOpnB,EAAOiJ,QAAQ4hB,EAAWzkB,EAAO8gB,EAAcE,E,oFCrDzC,SAAA2D,I,IAAoB3kB,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UACnFqB,EAASC,KACf,OAAOD,EAAOiJ,QAAQjJ,EAAO8C,YAAasD,EAAO8gB,EAAcE,E,oFCFlD,SAAA4D,I,IAAwB5kB,EAAAzH,UAAA9E,OAAA,YAAA8E,UAAA,GAAyBA,UAAA,GAAjBsB,KAAKjB,OAAOoH,MAAO8gB,IAAAvoB,UAAA9E,OAAA,YAAA8E,UAAA,KAAmBA,UAAA,GAAEyoB,EAAQzoB,UAAA9E,OAAA,EAAA8E,UAAA,UAAEssB,EAAAtsB,UAAA9E,OAAA,YAAA8E,UAAA,GAAeA,UAAA,GAAH,GACrGqB,EAASC,KACX6F,EAAQ9F,EAAO8C,YACbmiB,EAAO1hB,KAAK8C,IAAIrG,EAAOhB,OAAO8gB,mBAAoBha,GAClDqb,EAAY8D,EAAO1hB,KAAKoc,OAAO7Z,EAAQmf,GAAQjlB,EAAOhB,OAAO6gB,gBAC7DviB,EAAY0C,EAAOoJ,aAAepJ,EAAO1C,WAAa0C,EAAO1C,UACnE,GAAIA,GAAa0C,EAAOyC,SAAS0e,GAAY,CAG3C,IAAM+J,EAAclrB,EAAOyC,SAAS0e,GAC9BgK,EAAWnrB,EAAOyC,SAAS0e,EAAY,GACzC7jB,EAAY4tB,GAAeC,EAAWD,GAAeD,IACvDnlB,GAAS9F,EAAOhB,OAAO6gB,e,KAEpB,CAGL,IAAM+K,EAAW5qB,EAAOyC,SAAS0e,EAAY,GACvCiK,EAAcprB,EAAOyC,SAAS0e,GAChC7jB,EAAYstB,IAAaQ,EAAcR,GAAYK,IACrDnlB,GAAS9F,EAAOhB,OAAO6gB,e,CAK3B,OAFA/Z,EAAQvC,KAAK+C,IAAIR,EAAO,GACxBA,EAAQvC,KAAK8C,IAAIP,EAAO9F,EAAOwC,WAAW3I,OAAS,GAC5CmG,EAAOiJ,QAAQnD,EAAOM,EAAO8gB,EAAcE,E,kIC1BpD,IAAA7nB,EAAApE,EAAA,SACe,SAAAkwB,IACb,IAOItoB,EAPE/C,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAyG,EACEzF,EADFyF,SAEIsD,EAAyC,SAAzB/J,EAAO+J,cAA2B/I,EAAO0lB,uBAAyB1mB,EAAO+J,cAC3FuiB,EAAetrB,EAAOgmB,aAEpBuF,EAAgBvrB,EAAOkK,UAAa,eAAgB,IAAsBjO,OAAlB+C,EAAO2G,YACrE,GAAI3G,EAAOrB,KAAM,CACf,GAAIqC,EAAOqD,UAAW,OACtBN,EAAYoa,SAASnd,EAAO+lB,aAAa9f,aAAa,2BAA4B,IAC9EjH,EAAO2I,eACL2jB,EAAetrB,EAAOwrB,aAAeziB,EAAgB,GAAKuiB,EAAetrB,EAAOuC,OAAO1I,OAASmG,EAAOwrB,aAAeziB,EAAgB,GACxI/I,EAAOqqB,UACPiB,EAAetrB,EAAO+F,eAAc,EAAAxG,EAAAmG,iBAAgBD,EAAU,GAA6CxJ,OAA1CsvB,EAAc,8BAAsCtvB,OAAV8G,EAAU,OAAK,KAC1H,EAAAxD,EAAAksB,WAAS,WACPzrB,EAAOiJ,QAAQqiB,E,KAGjBtrB,EAAOiJ,QAAQqiB,GAERA,EAAetrB,EAAOuC,OAAO1I,OAASkP,GAC/C/I,EAAOqqB,UACPiB,EAAetrB,EAAO+F,eAAc,EAAAxG,EAAAmG,iBAAgBD,EAAU,GAA6CxJ,OAA1CsvB,EAAc,8BAAsCtvB,OAAV8G,EAAU,OAAK,KAC1H,EAAAxD,EAAAksB,WAAS,WACPzrB,EAAOiJ,QAAQqiB,E,KAGjBtrB,EAAOiJ,QAAQqiB,E,MAGjBtrB,EAAOiJ,QAAQqiB,E,qFClCnB,IAAAI,EAAAvwB,EAAA,S,0BAGAwwB,EAAe,CACbvgB,WAAAsgB,EAAAvuB,QACAktB,QAAAuB,EAAAzuB,QACAwO,YAAAkgB,EAAA1uB,Q,oFCNF,IAAAoC,EAAApE,EAAA,SACe,SAAA2wB,EAAoBC,GACjC,IAAM/rB,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAyG,EACEzF,EADFyF,UAEGzG,EAAOrB,MAAQqC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,WAC7C,EAAA9C,EAAAmG,iBAAgBD,EAAU,IAAsBxJ,OAAlB+C,EAAO2G,WAAW,mBACxDlJ,SAAQ,SAACsC,EAAI+G,GAClB/G,EAAG0O,aAAa,0BAA2B3H,E,IAE7C9F,EAAOqqB,QAAQ,CACb0B,iBACAnpB,UAAW5D,EAAO2I,oBAAiB9D,EAAY,S,uCCdpC,SAAAmoB,I,IAAiB1sB,EAAAX,UAAA9E,OAAA,YAAA8E,UAAA,GAQ1BA,UAAA,GAAF,GAPFotB,EAD8BzsB,EAC9BysB,eAAcE,EADgB3sB,EAE9B2J,eAAO,IAAAgjB,GAAOA,EACdrpB,EAH8BtD,EAG9BsD,UACAgG,EAJ8BtJ,EAI9BsJ,aACAsjB,EAL8B5sB,EAK9B4sB,iBACAtF,EAN8BtnB,EAM9BsnB,aACAuF,EAP8B7sB,EAO9B6sB,aAEMnsB,EAASC,KACf,GAAKD,EAAOhB,OAAOrB,KAAnB,CACAqC,EAAO6B,KAAK,iBACZ,IACEU,EAKEvC,EALFuC,OACAmB,EAIE1D,EAJF0D,eACAD,EAGEzD,EAHFyD,eACAgC,EAEEzF,EAFFyF,SACAzG,EACEgB,EADFhB,OAIF,GAFAgB,EAAO0D,gBAAiB,EACxB1D,EAAOyD,gBAAiB,EACpBzD,EAAOgJ,SAAWhK,EAAOgK,QAAQ3G,QAanC,OAZI4G,IACGjK,EAAO2I,gBAAuC,IAArB3H,EAAOmhB,UAE1BniB,EAAO2I,gBAAkB3H,EAAOmhB,UAAYniB,EAAO+J,cAC5D/I,EAAOiJ,QAAQjJ,EAAOgJ,QAAQzG,OAAO1I,OAASmG,EAAOmhB,UAAW,GAAG,GAAO,GACjEnhB,EAAOmhB,YAAcnhB,EAAOyC,SAAS5I,OAAS,GACvDmG,EAAOiJ,QAAQjJ,EAAOgJ,QAAQkC,aAAc,GAAG,GAAO,GAJtDlL,EAAOiJ,QAAQjJ,EAAOgJ,QAAQzG,OAAO1I,OAAQ,GAAG,GAAO,IAO3DmG,EAAO0D,eAAiBA,EACxB1D,EAAOyD,eAAiBA,OACxBzD,EAAO6B,KAAK,WAGd,IAAMkH,EAAyC,SAAzB/J,EAAO+J,cAA2B/I,EAAO0lB,uBAAyBniB,KAAK8c,KAAK5O,WAAWzS,EAAO+J,cAAe,KAC/HyiB,EAAexsB,EAAOwsB,cAAgBziB,EACtCyiB,EAAexsB,EAAO6gB,gBAAmB,IAC3C2L,GAAgBxsB,EAAO6gB,eAAiB2L,EAAexsB,EAAO6gB,gBAEhE7f,EAAOwrB,aAAeA,EACtB,IAAMY,EAAuB,GACvBC,EAAsB,GACxBvpB,EAAc9C,EAAO8C,iBACO,IAArBopB,EACTA,EAAmBlsB,EAAO+F,cAAc/F,EAAOuC,OAAOyD,QAAO,SAAAjH,G,OAAMA,EAAGtE,UAAUG,SAASoE,EAAO+M,iB,IAAmB,IAEnHjJ,EAAcopB,EAEhB,IAAMI,EAAuB,SAAd1pB,IAAyBA,EAClC2pB,EAAuB,SAAd3pB,IAAyBA,EACpC4pB,EAAkB,EAClBC,EAAiB,EAErB,GAAIP,EAAmBV,EAAc,CACnCgB,EAAkBjpB,KAAK+C,IAAIklB,EAAeU,EAAkBltB,EAAO6gB,gBACnE,IAAK,IAAIjmB,EAAI,EAAGA,EAAI4xB,EAAeU,EAAkBtyB,GAAK,EAAG,CAC3D,IAAMkM,EAAQlM,EAAI2J,KAAKoc,MAAM/lB,EAAI2I,EAAO1I,QAAU0I,EAAO1I,OACzDuyB,EAAqBrsB,KAAKwC,EAAO1I,OAASiM,EAAQ,E,OAE/C,GAAIomB,EAAyClsB,EAAOuC,OAAO1I,OAAwB,EAAf2xB,EAAkB,CAC3FiB,EAAiBlpB,KAAK+C,IAAI4lB,GAAoBlsB,EAAOuC,OAAO1I,OAAwB,EAAf2xB,GAAmBxsB,EAAO6gB,gBAC/F,IAAK,IAAI/iB,EAAI,EAAGA,EAAI2vB,EAAgB3vB,GAAK,EAAG,CAC1C,IAAMmlB,EAAQnlB,EAAIyG,KAAKoc,MAAM7iB,EAAIyF,EAAO1I,QAAU0I,EAAO1I,OACzDwyB,EAAoBtsB,KAAKkiB,E,EAoB7B,GAjBIsK,GACFH,EAAqB3vB,SAAQ,SAAAqJ,GAC3BL,EAASinB,QAAQ1sB,EAAOuC,OAAOuD,G,IAG/BwmB,GACFD,EAAoB5vB,SAAQ,SAAAqJ,GAC1BL,EAASiF,OAAO1K,EAAOuC,OAAOuD,G,IAGlC9F,EAAO2sB,eACsB,SAAzB3tB,EAAO+J,eACT/I,EAAOyI,eAELzJ,EAAOuiB,qBACTvhB,EAAOwc,qBAELvT,EACF,GAAImjB,EAAqBvyB,OAAS,GAAK0yB,EACrC,QAA8B,IAAnBR,EAAgC,CACzC,IAAMa,EAAwB5sB,EAAOwC,WAAWM,GAC1C+pB,EAAoB7sB,EAAOwC,WAAWM,EAAc0pB,GACpDrnB,EAAO0nB,EAAoBD,EAC7BT,EACFnsB,EAAO4I,aAAa5I,EAAO1C,UAAY6H,IAEvCnF,EAAOiJ,QAAQnG,EAAc0pB,EAAiB,GAAG,GAAO,GACpD5jB,IACF5I,EAAO8E,QAAQ9E,EAAO2C,eAAiB,SAAW,WAAawC,G,MAI/DyD,GACF5I,EAAOyoB,YAAYsD,EAAgB,GAAG,GAAO,QAG5C,GAAIM,EAAoBxyB,OAAS,GAAKyyB,EAC3C,QAA8B,IAAnBP,EAAgC,CACzC,IAAMe,EAAwB9sB,EAAOwC,WAAWM,GAC1CiqB,EAAoB/sB,EAAOwC,WAAWM,EAAc2pB,GACpDO,EAAOD,EAAoBD,EAC7BX,EACFnsB,EAAO4I,aAAa5I,EAAO1C,UAAY0vB,IAEvChtB,EAAOiJ,QAAQnG,EAAc2pB,EAAgB,GAAG,GAAO,GACnD7jB,IACF5I,EAAO8E,QAAQ9E,EAAO2C,eAAiB,SAAW,WAAaqqB,G,MAInEhtB,EAAOyoB,YAAYsD,EAAgB,GAAG,GAAO,GAMnD,GAFA/rB,EAAO0D,eAAiBA,EACxB1D,EAAOyD,eAAiBA,EACpBzD,EAAOitB,YAAcjtB,EAAOitB,WAAWC,UAAYtG,EAAc,CACnE,IAAMuG,EAAa,CACjBpB,iBACA9iB,SAAS,EACTrG,YACAgG,eACAsjB,mBACAtF,cAAc,GAEZtqB,MAAM6E,QAAQnB,EAAOitB,WAAWC,SAClCltB,EAAOitB,WAAWC,QAAQzwB,SAAQ,SAAA2wB,IAC3BA,EAAEjmB,WAAaimB,EAAEpuB,OAAOrB,MAAMyvB,EAAE/C,QAAQ8C,E,IAEtCntB,EAAOitB,WAAWC,mBAAmBltB,EAAOf,aAAee,EAAOitB,WAAWC,QAAQluB,OAAOrB,MACrGqC,EAAOitB,WAAWC,QAAQ7C,QAAQ8C,E,CAGtCntB,EAAO6B,KAAK,UAnIa,C,oFCVZ,SAAAwrB,IACb,IAAMrtB,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAyG,EACEzF,EADFyF,SAEF,MAAKzG,EAAOrB,MAAQqC,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,SAA5D,CACArC,EAAO2sB,eACP,IAAMW,EAAiB,GACvBttB,EAAOuC,OAAO9F,SAAQ,SAAA+I,GACpB,IAAMM,OAA4C,IAA7BN,EAAQ+nB,iBAAqF,EAAlD/nB,EAAQS,aAAa,2BAAiCT,EAAQ+nB,iBAC9HD,EAAexnB,GAASN,C,IAE1BxF,EAAOuC,OAAO9F,SAAQ,SAAA+I,GACpBA,EAAQqG,gBAAgB,0B,IAE1ByhB,EAAe7wB,SAAQ,SAAA+I,GACrBC,EAASiF,OAAOlF,E,IAElBxF,EAAO2sB,eACP3sB,EAAOiJ,QAAQjJ,EAAO+C,UAAW,EAdoC,C,kICNvE,IAAAyqB,EAAAryB,EAAA,S,aAEAsyB,EAAe,CACbvnB,cAAAsnB,EAAArwB,QACAgJ,gBAAAunB,EAAAvwB,Q,sCCJa,SAAAwwB,EAAuBC,GACpC,IAAM5tB,EAASC,KACf,MAAKD,EAAOhB,OAAO6uB,eAAiB7tB,EAAOhB,OAAOkK,eAAiBlJ,EAAO8tB,UAAY9tB,EAAOhB,OAAO2f,SAApG,CACA,IAAM5f,EAAyC,cAApCiB,EAAOhB,OAAO+uB,kBAAoC/tB,EAAOjB,GAAKiB,EAAOsK,UAC5EtK,EAAOkK,YACTlK,EAAO2a,qBAAsB,GAE/B5b,EAAGhE,MAAMizB,OAAS,OAClBjvB,EAAGhE,MAAMizB,OAASJ,EAAS,WAAa,OACpC5tB,EAAOkK,WACTsF,uBAAsB,WACpBxP,EAAO2a,qBAAsB,C,GAT4E,C,oFCFhG,SAAAsT,IACb,IAAMjuB,EAASC,KACXD,EAAOhB,OAAOkK,eAAiBlJ,EAAO8tB,UAAY9tB,EAAOhB,OAAO2f,UAGhE3e,EAAOkK,YACTlK,EAAO2a,qBAAsB,GAE/B3a,EAA2C,cAApCA,EAAOhB,OAAO+uB,kBAAoC,KAAO,aAAahzB,MAAMizB,OAAS,GACxFhuB,EAAOkK,WACTsF,uBAAsB,WACpBxP,EAAO2a,qBAAsB,C,sICXnC,IAAAlb,EAAAtE,EAAA,S,2FAQI+yB,GAAqB,EACzB,SAASC,IAAqB,CAC9B,IAAMC,EAAS,SAACpuB,EAAQ0b,GACtB,IAAMxhB,GAAW,EAAAuF,EAAAC,eAEfV,EAIEgB,EAJFhB,OACAD,EAGEiB,EAHFjB,GACAuL,EAEEtK,EAFFsK,UACAhK,EACEN,EADFM,OAEI+tB,IAAYrvB,EAAOsvB,OACnBC,EAAuB,OAAX7S,EAAkB,mBAAqB,sBACnD8S,EAAe9S,EAGrB3c,EAAGwvB,GAAW,cAAevuB,EAAOyuB,aAAc,CAChDC,SAAS,IAEXx0B,EAASq0B,GAAW,cAAevuB,EAAO2uB,YAAa,CACrDD,SAAS,EACTL,YAEFn0B,EAASq0B,GAAW,YAAavuB,EAAO4uB,WAAY,CAClDF,SAAS,IAEXx0B,EAASq0B,GAAW,gBAAiBvuB,EAAO4uB,WAAY,CACtDF,SAAS,IAEXx0B,EAASq0B,GAAW,aAAcvuB,EAAO4uB,WAAY,CACnDF,SAAS,IAEXx0B,EAASq0B,GAAW,eAAgBvuB,EAAO4uB,WAAY,CACrDF,SAAS,KAIP1vB,EAAO6vB,eAAiB7vB,EAAO8vB,2BACjC/vB,EAAGwvB,GAAW,QAASvuB,EAAO+uB,SAAS,GAErC/vB,EAAO2f,SACTrU,EAAUikB,GAAW,SAAUvuB,EAAOgvB,UAIpChwB,EAAOiwB,qBACTjvB,EAAOwuB,GAAcluB,EAAOgX,KAAOhX,EAAOiX,QAAU,0CAA4C,wBAAyB2X,EAAA/xB,SAAU,GAEnI6C,EAAOwuB,GAAc,iBAAkBU,EAAA/xB,SAAU,GAInD4B,EAAGwvB,GAAW,OAAQvuB,EAAOmvB,OAAQ,CACnCd,SAAS,G,MA2Bbe,EAAe,CACb/jB,aAzBF,WACE,IAAMrL,EAASC,KACT/F,GAAW,EAAAuF,EAAAC,eACXV,EAEFgB,EADFhB,OAEFgB,EAAOyuB,aAAeY,EAAAlyB,QAAauE,KAAK1B,GACxCA,EAAO2uB,YAAcW,EAAAnyB,QAAYuE,KAAK1B,GACtCA,EAAO4uB,WAAaW,EAAApyB,QAAWuE,KAAK1B,GAChChB,EAAO2f,UACT3e,EAAOgvB,SAAWQ,EAAAryB,QAASuE,KAAK1B,IAElCA,EAAO+uB,QAAUU,EAAAtyB,QAAQuE,KAAK1B,GAC9BA,EAAOmvB,OAASO,EAAAvyB,QAAOuE,KAAK1B,GACvBkuB,IACHh0B,EAASI,iBAAiB,aAAc6zB,GACxCD,GAAqB,GAEvBE,EAAOpuB,EAAQ,K,EAQf0L,aANF,WAEE0iB,EADenuB,KACA,M,sFCrFjB,IAAAR,EAAAtE,EAAA,S,aAgBe,SAAAw0B,EAAsBhU,GACnC,IAAM3b,EAASC,KACT/F,GAAW,EAAAuF,EAAAC,eACXmQ,GAAS,EAAApQ,EAAA8Q,aACTyL,EAAOhc,EAAO2D,gBACpBqY,EAAKrX,QAAQ5E,KAAK4b,GAClB,IACE3c,EAGEgB,EAHFhB,OACA8F,EAEE9E,EAFF8E,QAGF,GADI9E,EADFqC,UAGGrD,EAAO6uB,eAAuC,UAAtBlS,EAAMiU,gBAC/B5vB,EAAOqD,YAAarE,EAAOqoB,gCAA/B,EAGKrnB,EAAOqD,WAAarE,EAAO2f,SAAW3f,EAAOrB,MAChDqC,EAAOqqB,UAET,IAAI9vB,EAAIohB,EACJphB,EAAEs1B,gBAAet1B,EAAIA,EAAEs1B,eAC3B,IAAIC,EAAWv1B,EAAE+Q,OACjB,IAAiC,YAA7BtM,EAAO+uB,mBACJ/tB,EAAOsK,UAAU1P,SAASk1B,OAE7B,UAAWv1B,GAAiB,IAAZA,EAAEw1B,OAClB,WAAYx1B,GAAKA,EAAEy1B,OAAS,GAC5BhU,EAAKpY,WAAaoY,EAAKlY,SAA3B,CAGA,IAAMmsB,IAAyBjxB,EAAOkxB,gBAA4C,KAA1BlxB,EAAOkxB,eAEzDC,EAAYxU,EAAMyU,aAAezU,EAAMyU,eAAiBzU,EAAM0U,KAChEJ,GAAwB11B,EAAE+Q,QAAU/Q,EAAE+Q,OAAOf,YAAc4lB,IAC7DL,EAAWK,EAAU,IAEvB,IAAMG,EAAoBtxB,EAAOsxB,kBAAoBtxB,EAAOsxB,kBAAoB,IAA0Br0B,OAAtB+C,EAAOkxB,gBACrFK,KAAoBh2B,EAAE+Q,SAAU/Q,EAAE+Q,OAAOf,YAG/C,GAAIvL,EAAOwxB,YAAcD,EApD3B,SAAwBlc,GACtB,SAASoc,EAAc1xB,GACrB,IAAKA,GAAMA,KAAO,EAAAU,EAAAC,gBAAiBX,KAAO,EAAAU,EAAA8Q,aAAa,OAAO,KAC1DxR,EAAG2xB,eAAc3xB,EAAKA,EAAG2xB,cAC7B,IAAMC,EAAQ5xB,EAAGomB,QAAQ9Q,GACzB,OAAKsc,GAAU5xB,EAAG6xB,YAGXD,GAASF,EAAc1xB,EAAG6xB,cAAc7iB,MAFtC,I,CAIX,OAAO0iB,EAVyB9xB,UAAA9E,OAAA,YAAA8E,UAAA,GAAWA,UAAA,GAAJsB,K,CAoDG4wB,CAAeP,EAAmBR,GAAYA,EAAS3K,QAAQmL,IACvGtwB,EAAO4E,YAAa,OAGtB,IAAI5F,EAAO8xB,cACJhB,EAAS3K,QAAQnmB,EAAO8xB,cAD/B,CAGAhsB,EAAQG,SAAW1K,EAAEw2B,MACrBjsB,EAAQI,SAAW3K,EAAEy2B,MACrB,IAAMjsB,EAASD,EAAQG,SACjBD,EAASF,EAAQI,SAIjB+rB,EAAqBjyB,EAAOiyB,oBAAsBjyB,EAAOkyB,sBACzDC,EAAqBnyB,EAAOmyB,oBAAsBnyB,EAAOoyB,sBAC/D,GAAIH,IAAuBlsB,GAAUosB,GAAsBpsB,GAAU8K,EAAOwhB,WAAaF,GAAqB,CAC5G,GAA2B,YAAvBF,EAGF,OAFAtV,EAAMnhB,gB,CAKVb,OAAOyI,OAAO4Z,EAAM,CAClBpY,WAAW,EACXE,SAAS,EACTC,qBAAqB,EACrBE,iBAAaJ,EACba,iBAAab,IAEfiB,EAAQC,OAASA,EACjBD,EAAQE,OAASA,EACjBgX,EAAKhY,gBAAiB,EAAAzE,EAAA8Q,OACtBrQ,EAAO4E,YAAa,EACpB5E,EAAOwI,aACPxI,EAAOsxB,oBAAiBztB,EACpB7E,EAAOisB,UAAY,IAAGjP,EAAK5X,oBAAqB,GACpD,IAAI5J,GAAiB,EACjBs1B,EAASxb,QAAQ0H,EAAK3X,qBACxB7J,GAAiB,EACS,WAAtBs1B,EAAS1iB,WACX4O,EAAKpY,WAAY,IAGjB1J,EAASgT,eAAiBhT,EAASgT,cAAcoH,QAAQ0H,EAAK3X,oBAAsBnK,EAASgT,gBAAkB4iB,GACjH51B,EAASgT,cAAcC,OAEzB,IAAMokB,EAAuB/2B,GAAkBwF,EAAO6E,gBAAkB7F,EAAOwyB,0BAC1ExyB,EAAOyyB,gCAAiCF,GAA0BzB,EAAS4B,mBAC9En3B,EAAEC,iBAEAwF,EAAOhB,OAAO2J,UAAY3I,EAAOhB,OAAO2J,SAAStG,SAAWrC,EAAO2I,UAAY3I,EAAOqD,YAAcrE,EAAO2f,SAC7G3e,EAAO2I,SAAS8lB,eAElBzuB,EAAO6B,KAAK,aAActH,E,CAnEU,CAblC,C,qFC9BJ,IAAAkF,EAAAtE,EAAA,S,aAEe,SAAAw2B,EAAqBhW,GAClC,IAAMzhB,GAAW,EAAAuF,EAAAC,eACXM,EAASC,KACT+b,EAAOhc,EAAO2D,gBAElB3E,EAIEgB,EAJFhB,OACA8F,EAGE9E,EAHF8E,QACA+E,EAEE7J,EAFFoJ,aAGF,GADIpJ,EADFqC,UAGGrD,EAAO6uB,eAAuC,UAAtBlS,EAAMiU,aAAnC,CACA,IAAIr1B,EAAIohB,EAER,GADIphB,EAAEs1B,gBAAet1B,EAAIA,EAAEs1B,eACtB7T,EAAKpY,UAAV,CAMA,IAAMguB,EAAe5V,EAAKrX,QAAQktB,WAAU,SAAAC,G,OAAYA,EAASC,YAAcx3B,EAAEw3B,S,IAC7EH,GAAgB,IAAG5V,EAAKrX,QAAQitB,GAAgBr3B,GACpD,IAAMy3B,EAAchW,EAAKrX,QAAQ9K,OAAS,EAAImiB,EAAKrX,QAAQ,GAAKpK,EAC1Dw2B,EAAQiB,EAAYjB,MACpBC,EAAQgB,EAAYhB,MAC1B,GAAIz2B,EAAE03B,wBAGJ,OAFAntB,EAAQC,OAASgsB,OACjBjsB,EAAQE,OAASgsB,GAGnB,IAAKhxB,EAAO6E,eAeV,OAdKtK,EAAE+Q,OAAOgJ,QAAQ0H,EAAK3X,qBACzBrE,EAAO4E,YAAa,QAElBoX,EAAKpY,YACPjK,OAAOyI,OAAO0C,EAAS,CACrBC,OAAQgsB,EACR/rB,OAAQgsB,EACRkB,MAAOlyB,EAAO8E,QAAQG,SACtBktB,MAAOnyB,EAAO8E,QAAQI,SACtBD,SAAU8rB,EACV7rB,SAAU8rB,IAEZhV,EAAKhY,gBAAiB,EAAAzE,EAAA8Q,SAI1B,GAAIrR,EAAOozB,sBAAwBpzB,EAAOrB,KACxC,GAAIqC,EAAO6C,cAET,GAAImuB,EAAQlsB,EAAQE,QAAUhF,EAAO1C,WAAa0C,EAAOyG,gBAAkBuqB,EAAQlsB,EAAQE,QAAUhF,EAAO1C,WAAa0C,EAAOuG,eAG9H,OAFAyV,EAAKpY,WAAY,OACjBoY,EAAKlY,SAAU,QAGZ,GAAIitB,EAAQjsB,EAAQC,QAAU/E,EAAO1C,WAAa0C,EAAOyG,gBAAkBsqB,EAAQjsB,EAAQC,QAAU/E,EAAO1C,WAAa0C,EAAOuG,eACrI,OAGJ,GAAIrM,EAASgT,eACP3S,EAAE+Q,SAAWpR,EAASgT,eAAiB3S,EAAE+Q,OAAOgJ,QAAQ0H,EAAK3X,mBAG/D,OAFA2X,EAAKlY,SAAU,OACf9D,EAAO4E,YAAa,GAOxB,GAHIoX,EAAKjY,qBACP/D,EAAO6B,KAAK,YAAatH,KAEvBA,EAAE83B,eAAiB93B,EAAE83B,cAAcx4B,OAAS,GAAhD,CACAiL,EAAQG,SAAW8rB,EACnBjsB,EAAQI,SAAW8rB,EACnB,IAAMsB,EAAQxtB,EAAQG,SAAWH,EAAQC,OACnCwtB,EAAQztB,EAAQI,SAAWJ,EAAQE,OACzC,KAAIhF,EAAOhB,OAAOisB,WAAa1nB,KAAKivB,KAAKjvB,KAAAkvB,IAAAH,EAAS,GAAI/uB,KAAAkvB,IAAAF,EAAS,IAAKvyB,EAAOhB,OAAOisB,WAAlF,CAEE,IAAIyH,EADN,QAAgC,IAArB1W,EAAK/X,YAEVjE,EAAO2C,gBAAkBmC,EAAQI,WAAaJ,EAAQE,QAAUhF,EAAO6C,cAAgBiC,EAAQG,WAAaH,EAAQC,OACtHiX,EAAK/X,aAAc,EAGfquB,EAAQA,EAAQC,EAAQA,GAAS,KACnCG,EAA4D,IAA/CnvB,KAAKovB,MAAMpvB,KAAKqc,IAAI2S,GAAQhvB,KAAKqc,IAAI0S,IAAgB/uB,KAAKwQ,GACvEiI,EAAK/X,YAAcjE,EAAO2C,eAAiB+vB,EAAa1zB,EAAO0zB,WAAa,GAAKA,EAAa1zB,EAAO0zB,YAY3G,GARI1W,EAAK/X,aACPjE,EAAO6B,KAAK,oBAAqBtH,QAEH,IAArByhB,EAAKtX,cACVI,EAAQG,WAAaH,EAAQC,QAAUD,EAAQI,WAAaJ,EAAQE,SACtEgX,EAAKtX,aAAc,IAGnBsX,EAAK/X,aAAejE,EAAO4yB,MAAQ5yB,EAAOhB,OAAO4zB,MAAQ5yB,EAAOhB,OAAO4zB,KAAKvwB,SAAW2Z,EAAKrX,QAAQ9K,OAAS,EAC/GmiB,EAAKpY,WAAY,OAGnB,GAAKoY,EAAKtX,YAAV,CAGA1E,EAAO4E,YAAa,GACf5F,EAAO2f,SAAWpkB,EAAEs4B,YACvBt4B,EAAEC,iBAEAwE,EAAO8zB,2BAA6B9zB,EAAOsvB,QAC7C/zB,EAAEw4B,kBAEJ,IAAI5tB,EAAOnF,EAAO2C,eAAiB2vB,EAAQC,EACvCS,EAAchzB,EAAO2C,eAAiBmC,EAAQG,SAAWH,EAAQmuB,UAAYnuB,EAAQI,SAAWJ,EAAQouB,UACxGl0B,EAAOm0B,iBACThuB,EAAO5B,KAAKqc,IAAIza,IAAS0E,EAAM,GAAI,GACnCmpB,EAAczvB,KAAKqc,IAAIoT,IAAgBnpB,EAAM,GAAI,IAEnD/E,EAAQK,KAAOA,EACfA,GAAQnG,EAAOo0B,WACXvpB,IACF1E,GAAQA,EACR6tB,GAAeA,GAEjB,IAAMK,EAAuBrzB,EAAOszB,iBACpCtzB,EAAOsxB,eAAiBnsB,EAAO,EAAI,OAAS,OAC5CnF,EAAOszB,iBAAmBN,EAAc,EAAI,OAAS,OACrD,IAuBIO,EAvBEC,EAASxzB,EAAOhB,OAAOrB,OAASqB,EAAO2f,QAC7C,IAAK3C,EAAKlY,QAAS,CAQjB,GAPI0vB,GACFxzB,EAAOqqB,QAAQ,CACbznB,UAAW5C,EAAOsxB,iBAGtBtV,EAAK7X,eAAiBnE,EAAOomB,eAC7BpmB,EAAO6hB,cAAc,GACjB7hB,EAAOqD,UAAW,CACpB,IAAMowB,EAAM,IAAI5jB,OAAOd,YAAY,gBAAiB,CAClD2kB,SAAS,EACTb,YAAY,IAEd7yB,EAAOsK,UAAUqpB,cAAcF,E,CAEjCzX,EAAKvX,qBAAsB,GAEvBzF,EAAOnB,aAAyC,IAA1BmC,EAAOyD,iBAAqD,IAA1BzD,EAAO0D,gBACjE1D,EAAOkG,eAAc,GAEvBlG,EAAO6B,KAAK,kBAAmBtH,E,CAG7ByhB,EAAKlY,SAAWuvB,IAAyBrzB,EAAOszB,kBAAoBE,GAAUjwB,KAAKqc,IAAIza,IAAS,IAElGnF,EAAOqqB,QAAQ,CACbznB,UAAW5C,EAAOsxB,eAClB1oB,cAAc,IAEhB2qB,GAAY,GAEdvzB,EAAO6B,KAAK,aAActH,GAC1ByhB,EAAKlY,SAAU,EACfkY,EAAK9X,iBAAmBiB,EAAO6W,EAAK7X,eACpC,IAAIyvB,GAAsB,EACtBC,EAAkB70B,EAAO60B,gBAiD7B,GAhDI70B,EAAOozB,sBACTyB,EAAkB,GAEhB1uB,EAAO,GACLquB,IAAWD,GAAavX,EAAK9X,kBAAoBlF,EAAO2I,eAAiB3H,EAAOuG,eAAiBvG,EAAOyH,KAAO,EAAIzH,EAAOuG,iBAC5HvG,EAAOqqB,QAAQ,CACbznB,UAAW,OACXgG,cAAc,EACdsjB,iBAAkB,IAGlBlQ,EAAK9X,iBAAmBlE,EAAOuG,iBACjCqtB,GAAsB,EAClB50B,EAAO80B,aACT9X,EAAK9X,iBAAmBlE,EAAOuG,eAAiB,EAAIhD,KAAAkvB,KAAEzyB,EAAOuG,eAAiByV,EAAK7X,eAAiBgB,EAAS0uB,MAGxG1uB,EAAO,IACZquB,IAAWD,GAAavX,EAAK9X,kBAAoBlF,EAAO2I,eAAiB3H,EAAOyG,eAAiBzG,EAAOyH,KAAO,EAAIzH,EAAOyG,iBAC5HzG,EAAOqqB,QAAQ,CACbznB,UAAW,OACXgG,cAAc,EACdsjB,iBAAkBlsB,EAAOuC,OAAO1I,QAAmC,SAAzBmF,EAAO+J,cAA2B/I,EAAO0lB,uBAAyBniB,KAAK8c,KAAK5O,WAAWzS,EAAO+J,cAAe,QAGvJiT,EAAK9X,iBAAmBlE,EAAOyG,iBACjCmtB,GAAsB,EAClB50B,EAAO80B,aACT9X,EAAK9X,iBAAmBlE,EAAOyG,eAAiB,EAAIlD,KAAAkvB,IAACzyB,EAAOyG,eAAiBuV,EAAK7X,eAAiBgB,EAAS0uB,MAI9GD,IACFr5B,EAAE03B,yBAA0B,IAIzBjyB,EAAOyD,gBAA4C,SAA1BzD,EAAOsxB,gBAA6BtV,EAAK9X,iBAAmB8X,EAAK7X,iBAC7F6X,EAAK9X,iBAAmB8X,EAAK7X,iBAE1BnE,EAAO0D,gBAA4C,SAA1B1D,EAAOsxB,gBAA6BtV,EAAK9X,iBAAmB8X,EAAK7X,iBAC7F6X,EAAK9X,iBAAmB8X,EAAK7X,gBAE1BnE,EAAO0D,gBAAmB1D,EAAOyD,iBACpCuY,EAAK9X,iBAAmB8X,EAAK7X,gBAI3BnF,EAAOisB,UAAY,EAAG,CACxB,KAAI1nB,KAAKqc,IAAIza,GAAQnG,EAAOisB,WAAajP,EAAK5X,oBAW5C,YADA4X,EAAK9X,iBAAmB8X,EAAK7X,gBAT7B,IAAK6X,EAAK5X,mBAMR,OALA4X,EAAK5X,oBAAqB,EAC1BU,EAAQC,OAASD,EAAQG,SACzBH,EAAQE,OAASF,EAAQI,SACzB8W,EAAK9X,iBAAmB8X,EAAK7X,oBAC7BW,EAAQK,KAAOnF,EAAO2C,eAAiBmC,EAAQG,SAAWH,EAAQC,OAASD,EAAQI,SAAWJ,EAAQE,O,CAQvGhG,EAAO+0B,eAAgB/0B,EAAO2f,WAG/B3f,EAAO2J,UAAY3J,EAAO2J,SAAStG,SAAWrC,EAAO2I,UAAY3J,EAAOuiB,uBAC1EvhB,EAAO2G,oBACP3G,EAAO4G,uBAEL5G,EAAOhB,OAAO2J,UAAY3J,EAAO2J,SAAStG,SAAWrC,EAAO2I,UAC9D3I,EAAO2I,SAASgmB,cAGlB3uB,EAAO0I,eAAesT,EAAK9X,kBAE3BlE,EAAO4I,aAAaoT,EAAK9X,kBAzIvB,CA1B2F,CAL1C,C,MAtD7C8X,EAAKtX,aAAesX,EAAK/X,aAC3BjE,EAAO6B,KAAK,oBAAqBtH,EALuB,C,qFCb9D,IAAAgF,EAAApE,EAAA,SACe,SAAA64B,EAAoBrY,GACjC,IAAM3b,EAASC,KACT+b,EAAOhc,EAAO2D,gBACdiuB,EAAe5V,EAAKrX,QAAQktB,WAAU,SAAAC,G,OAAYA,EAASC,YAAcpW,EAAMoW,S,IAIrF,IAHIH,GAAgB,GAClB5V,EAAKrX,QAAQ0W,OAAOuW,EAAc,GAEhC,CAAC,gBAAiB,aAAc,gBAAgBlZ,SAASiD,EAAMsY,UAClC,kBAAftY,EAAMsY,OAA6Bj0B,EAAOU,QAAQ8X,UAAYxY,EAAOU,QAAQqY,YAE3F,OAGJ,IACE/Z,EAKEgB,EALFhB,OACA8F,EAIE9E,EAJF8E,QACA+E,EAGE7J,EAHFoJ,aACA5G,EAEExC,EAFFwC,WAGF,GADIxC,EADFqC,UAGGrD,EAAO6uB,eAAuC,UAAtBlS,EAAMiU,aAAnC,CACA,IAAIr1B,EAAIohB,EAMR,GALIphB,EAAEs1B,gBAAet1B,EAAIA,EAAEs1B,eACvB7T,EAAKjY,qBACP/D,EAAO6B,KAAK,WAAYtH,GAE1ByhB,EAAKjY,qBAAsB,GACtBiY,EAAKpY,UAMR,OALIoY,EAAKlY,SAAW9E,EAAOnB,YACzBmC,EAAOkG,eAAc,GAEvB8V,EAAKlY,SAAU,OACfkY,EAAKtX,aAAc,GAIjB1F,EAAOnB,YAAcme,EAAKlY,SAAWkY,EAAKpY,aAAwC,IAA1B5D,EAAOyD,iBAAqD,IAA1BzD,EAAO0D,iBACnG1D,EAAOkG,eAAc,GAIvB,IAyBIguB,EAzBEC,GAAe,EAAA50B,EAAA8Q,OACf+jB,EAAWD,EAAenY,EAAKhY,eAGrC,GAAIhE,EAAO4E,WAAY,CACrB,IAAMyvB,EAAW95B,EAAE81B,MAAQ91B,EAAE61B,cAAgB71B,EAAE61B,eAC/CpwB,EAAO+c,mBAAmBsX,GAAYA,EAAS,IAAM95B,EAAE+Q,QACvDtL,EAAO6B,KAAK,YAAatH,GACrB65B,EAAW,KAAOD,EAAenY,EAAK1X,cAAgB,KACxDtE,EAAO6B,KAAK,wBAAyBtH,E,CAOzC,GAJAyhB,EAAK1X,eAAgB,EAAA/E,EAAA8Q,QACrB,EAAA9Q,EAAAksB,WAAS,WACFzrB,EAAOmH,YAAWnH,EAAO4E,YAAa,E,KAExCoX,EAAKpY,YAAcoY,EAAKlY,UAAY9D,EAAOsxB,gBAAmC,IAAjBxsB,EAAQK,MAAc6W,EAAK9X,mBAAqB8X,EAAK7X,eAIrH,OAHA6X,EAAKpY,WAAY,EACjBoY,EAAKlY,SAAU,OACfkY,EAAKtX,aAAc,GAYrB,GATAsX,EAAKpY,WAAY,EACjBoY,EAAKlY,SAAU,EACfkY,EAAKtX,aAAc,EAGjBwvB,EADEl1B,EAAO+0B,aACIlqB,EAAM7J,EAAO1C,WAAa0C,EAAO1C,WAEhC0e,EAAK9X,kBAEjBlF,EAAO2f,QAGX,GAAI3e,EAAOhB,OAAO2J,UAAY3J,EAAO2J,SAAStG,QAC5CrC,EAAO2I,SAASimB,WAAW,CACzBsF,mBAFJ,CAUA,IAFA,IAAII,EAAY,EACZ/T,EAAYvgB,EAAO0C,gBAAgB,GAC9B9I,EAAI,EAAGA,EAAI4I,EAAW3I,OAAQD,GAAKA,EAAIoF,EAAO8gB,mBAAqB,EAAI9gB,EAAO6gB,eAAgB,CACrG,IAAMsK,EAAYvwB,EAAIoF,EAAO8gB,mBAAqB,EAAI,EAAI9gB,EAAO6gB,oBACxB,IAA9Brd,EAAW5I,EAAIuwB,GACpB+J,GAAc1xB,EAAW5I,IAAMs6B,EAAa1xB,EAAW5I,EAAIuwB,KAC7DmK,EAAY16B,EACZ2mB,EAAY/d,EAAW5I,EAAIuwB,GAAa3nB,EAAW5I,IAE5Cs6B,GAAc1xB,EAAW5I,KAClC06B,EAAY16B,EACZ2mB,EAAY/d,EAAWA,EAAW3I,OAAS,GAAK2I,EAAWA,EAAW3I,OAAS,G,CAGnF,IAAI06B,EAAmB,KACnBC,EAAkB,KAClBx1B,EAAO4mB,SACL5lB,EAAOgD,YACTwxB,EAAkBx0B,EAAOhB,OAAOgK,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,SAAWrC,EAAOgJ,QAAUhJ,EAAOgJ,QAAQzG,OAAO1I,OAAS,EAAImG,EAAOuC,OAAO1I,OAAS,EAC9ImG,EAAOiD,QAChBsxB,EAAmB,IAIvB,IAAME,GAASP,EAAa1xB,EAAW8xB,IAAc/T,EAC/CmU,EAAYJ,EAAYt1B,EAAO8gB,mBAAqB,EAAI,EAAI9gB,EAAO6gB,eACzE,GAAIuU,EAAWp1B,EAAO21B,aAAc,CAElC,IAAK31B,EAAO41B,WAEV,YADA50B,EAAOiJ,QAAQjJ,EAAO8C,aAGM,SAA1B9C,EAAOsxB,iBACLmD,GAASz1B,EAAO61B,gBAAiB70B,EAAOiJ,QAAQjK,EAAO4mB,QAAU5lB,EAAOiD,MAAQsxB,EAAmBD,EAAYI,GAAgB10B,EAAOiJ,QAAQqrB,IAEtH,SAA1Bt0B,EAAOsxB,iBACLmD,EAAQ,EAAIz1B,EAAO61B,gBACrB70B,EAAOiJ,QAAQqrB,EAAYI,GACE,OAApBF,GAA4BC,EAAQ,GAAKlxB,KAAKqc,IAAI6U,GAASz1B,EAAO61B,gBAC3E70B,EAAOiJ,QAAQurB,GAEfx0B,EAAOiJ,QAAQqrB,G,KAGd,CAEL,IAAKt1B,EAAO81B,YAEV,YADA90B,EAAOiJ,QAAQjJ,EAAO8C,aAGE9C,EAAO+0B,aAAex6B,EAAE+Q,SAAWtL,EAAO+0B,WAAWC,QAAUz6B,EAAE+Q,SAAWtL,EAAO+0B,WAAWE,QAQ7G16B,EAAE+Q,SAAWtL,EAAO+0B,WAAWC,OACxCh1B,EAAOiJ,QAAQqrB,EAAYI,GAE3B10B,EAAOiJ,QAAQqrB,IATe,SAA1Bt0B,EAAOsxB,gBACTtxB,EAAOiJ,QAA6B,OAArBsrB,EAA4BA,EAAmBD,EAAYI,GAE9C,SAA1B10B,EAAOsxB,gBACTtxB,EAAOiJ,QAA4B,OAApBurB,EAA2BA,EAAkBF,G,EAvHN,C,uCCtB/C,SAAAY,IACb,IAAMl1B,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAD,EACEiB,EADFjB,GAEF,IAAIA,GAAyB,IAAnBA,EAAG2X,YAAb,CAGI1X,EAAOf,aACT+B,EAAOmI,gBAIT,IACE1E,EAGEzD,EAHFyD,eACAC,EAEE1D,EAFF0D,eACAjB,EACEzC,EADFyC,SAEIkb,EAAY3d,EAAOgJ,SAAWhJ,EAAOhB,OAAOgK,QAAQ3G,QAG1DrC,EAAOyD,gBAAiB,EACxBzD,EAAO0D,gBAAiB,EACxB1D,EAAOwI,aACPxI,EAAOyI,eACPzI,EAAO4G,sBACP,IAAMuuB,EAAgBxX,GAAa3e,EAAOrB,OACZ,SAAzBqB,EAAO+J,eAA4B/J,EAAO+J,cAAgB,KAAM/I,EAAOiD,OAAUjD,EAAOgD,aAAgBhD,EAAOhB,OAAO2I,gBAAmBwtB,EAGxIn1B,EAAOhB,OAAOrB,OAASggB,EACzB3d,EAAOyoB,YAAYzoB,EAAO+C,UAAW,GAAG,GAAO,GAE/C/C,EAAOiJ,QAAQjJ,EAAO8C,YAAa,GAAG,GAAO,GAL/C9C,EAAOiJ,QAAQjJ,EAAOuC,OAAO1I,OAAS,EAAG,GAAG,GAAO,GAQjDmG,EAAOo1B,UAAYp1B,EAAOo1B,SAASC,SAAWr1B,EAAOo1B,SAASE,SAChEhmB,aAAatP,EAAOo1B,SAASG,eAC7Bv1B,EAAOo1B,SAASG,cAAgBlmB,YAAW,WACrCrP,EAAOo1B,UAAYp1B,EAAOo1B,SAASC,SAAWr1B,EAAOo1B,SAASE,QAChEt1B,EAAOo1B,SAASI,Q,GAEjB,MAGLx1B,EAAO0D,eAAiBA,EACxB1D,EAAOyD,eAAiBA,EACpBzD,EAAOhB,OAAOkK,eAAiBzG,IAAazC,EAAOyC,UACrDzC,EAAO7B,eA3CuB,C,oFCNnB,SAAAs3B,EAAiBl7B,GAC9B,IAAMyF,EAASC,KACVD,EAAOqC,UACPrC,EAAO4E,aACN5E,EAAOhB,OAAO6vB,eAAet0B,EAAEC,iBAC/BwF,EAAOhB,OAAO8vB,0BAA4B9uB,EAAOqD,YACnD9I,EAAEw4B,kBACFx4B,EAAEm7B,6B,oFCPO,SAAAC,IACb,IAAM31B,EAASC,KAEbqK,EAGEtK,EAHFsK,UACAlB,EAEEpJ,EAFFoJ,aAGF,GADIpJ,EADFqC,QAEF,CACArC,EAAOkD,kBAAoBlD,EAAO1C,UAC9B0C,EAAO2C,eACT3C,EAAO1C,WAAagN,EAAU2K,WAE9BjV,EAAO1C,WAAagN,EAAUyK,UAGP,IAArB/U,EAAO1C,YAAiB0C,EAAO1C,UAAY,GAC/C0C,EAAO2G,oBACP3G,EAAO4G,sBAEP,IAAMwc,EAAiBpjB,EAAOyG,eAAiBzG,EAAOuG,gBAC/B,IAAnB6c,EACY,GAECpjB,EAAO1C,UAAY0C,EAAOuG,gBAAkB6c,KAEzCpjB,EAAOmD,UACzBnD,EAAO0I,eAAeU,GAAgBpJ,EAAO1C,UAAY0C,EAAO1C,WAElE0C,EAAO6B,KAAK,eAAgB7B,EAAO1C,WAAW,EArBhC,C,kICPhB,IAAAgL,EAAAnN,EAAA,SACe,SAAAy6B,EAAgBr7B,IAE7B,EAAA+N,EAAAC,sBADetI,KACc1F,EAAE+Q,QADhBrL,KAER7C,Q,qFCJT,IAAAy4B,EAAA16B,EAAA,S,aAEA26B,EAAe,CACb3tB,cAAA0tB,EAAA14B,QACA44B,cAAAC,EAAA74B,Q,oFCJF,IAAAoC,EAAApE,EAAA,SACM86B,EAAgB,SAACj2B,EAAQhB,GAC7B,OAAOgB,EAAO8e,MAAQ9f,EAAO8f,MAAQ9f,EAAO8f,KAAKC,KAAO,C,EAE3C,SAAAmX,IACb,IAAMl2B,EAASC,KAEb8C,EAIE/C,EAJF+C,UACA+H,EAGE9K,EAHF8K,YACA9L,EAEEgB,EAFFhB,OACAD,EACEiB,EADFjB,GAEId,EAAce,EAAOf,YAC3B,GAAKA,KAAeA,GAAmD,IAApCtE,OAAOD,KAAKuE,GAAapE,QAA5D,CAGA,IAAMs8B,EAAan2B,EAAO+1B,cAAc93B,EAAa+B,EAAOhB,OAAOo3B,gBAAiBp2B,EAAOjB,IAC3F,GAAKo3B,GAAcn2B,EAAOq2B,oBAAsBF,EAAhD,CACA,IACMG,GADuBH,KAAcl4B,EAAcA,EAAYk4B,QAActyB,IAClC7D,EAAOgC,eAClDu0B,EAAcN,EAAcj2B,EAAQhB,GACpCw3B,EAAaP,EAAcj2B,EAAQs2B,GACnCG,EAAaz3B,EAAOqD,QACtBk0B,IAAgBC,GAClBz3B,EAAGtE,UAAUgP,OAAO,GAAiCxN,OAA9B+C,EAAOkI,uBAAuB,QAAO,GAAiCjL,OAA9B+C,EAAOkI,uBAAuB,gBAC7FlH,EAAO0J,yBACG6sB,GAAeC,IACzBz3B,EAAGtE,UAAUoC,IAAI,GAAiCZ,OAA9B+C,EAAOkI,uBAAuB,UAC9CovB,EAAiBxX,KAAK4X,MAAuC,WAA/BJ,EAAiBxX,KAAK4X,OAAsBJ,EAAiBxX,KAAK4X,MAA6B,WAArB13B,EAAO8f,KAAK4X,OACtH33B,EAAGtE,UAAUoC,IAAI,GAAiCZ,OAA9B+C,EAAOkI,uBAAuB,gBAEpDlH,EAAO0J,wBAIT,CAAC,aAAc,aAAc,aAAajN,SAAQ,SAAAqZ,GAChD,IAAM6gB,EAAmB33B,EAAO8W,IAAS9W,EAAO8W,GAAMzT,QAChDu0B,EAAkBN,EAAiBxgB,IAASwgB,EAAiBxgB,GAAMzT,QACrEs0B,IAAqBC,GACvB52B,EAAO8V,GAAM+gB,WAEVF,GAAoBC,GACvB52B,EAAO8V,GAAMghB,Q,IAGjB,IAAMC,EAAmBT,EAAiB1zB,WAAa0zB,EAAiB1zB,YAAc5D,EAAO4D,UACvFo0B,EAAch4B,EAAOrB,OAAS24B,EAAiBvtB,gBAAkB/J,EAAO+J,eAAiBguB,GAC3FA,GAAoBjsB,GACtB9K,EAAOi3B,mBAET,EAAA13B,EAAAC,QAAOQ,EAAOhB,OAAQs3B,GACtB,IAAMY,EAAYl3B,EAAOhB,OAAOqD,QAChC1I,OAAOyI,OAAOpC,EAAQ,CACpB6E,eAAgB7E,EAAOhB,OAAO6F,eAC9BpB,eAAgBzD,EAAOhB,OAAOyE,eAC9BC,eAAgB1D,EAAOhB,OAAO0E,iBAE5B+yB,IAAeS,EACjBl3B,EAAO62B,WACGJ,GAAcS,GACxBl3B,EAAO82B,SAET92B,EAAOq2B,kBAAoBF,EAC3Bn2B,EAAO6B,KAAK,oBAAqBy0B,GAC7BU,GAAelsB,IACjB9K,EAAO2L,cACP3L,EAAOoL,WAAWrI,GAClB/C,EAAOyI,gBAETzI,EAAO6B,KAAK,aAAcy0B,EApDkC,CAJc,C,qFCb5E,IAAA72B,EAAAtE,EAAA,SACe,SAAAg8B,EAAuBl5B,G,IAAam5B,EAAAz4B,UAAA9E,OAAA,YAAA8E,UAAA,GAAeA,UAAA,GAAR,SAAUkB,EAAWlB,UAAA9E,OAAA,EAAA8E,UAAA,UAC7E,GAAKV,IAAwB,cAATm5B,GAAyBv3B,GAA7C,CACA,IAAIs2B,GAAa,EACXtmB,GAAS,EAAApQ,EAAA8Q,aACT8mB,EAAyB,WAATD,EAAoBvnB,EAAOynB,YAAcz3B,EAAYlD,aACrE46B,EAAS59B,OAAOD,KAAKuE,GAAarC,KAAI,SAAA47B,GAC1C,GAAqB,iBAAVA,GAA6C,IAAvBA,EAAMvwB,QAAQ,KAAY,CACzD,IAAMwwB,EAAWhmB,WAAW+lB,EAAME,OAAO,IAEzC,MAAO,CACLC,MAFYN,EAAgBI,EAG5BD,Q,CAGJ,MAAO,CACLG,MAAOH,EACPA,Q,IAGJD,EAAOK,MAAK,SAAC1mB,EAAG2mB,G,OAAM1a,SAASjM,EAAEymB,MAAO,IAAMxa,SAAS0a,EAAEF,MAAO,G,IAChE,IAAK,IAAI/9B,EAAI,EAAGA,EAAI29B,EAAO19B,OAAQD,GAAK,EAAG,CACzC,IAGIk+B,EAAAP,EAAO39B,GAFTm+B,EAEED,EAFFN,MACAQ,EACEF,EADFH,MAEW,WAATP,EACEvnB,EAAON,WAAW,eAAqBtT,OAAN+7B,EAAM,QAAM1jB,UAC/C6hB,EAAa4B,GAENC,GAASn4B,EAAYqd,cAC9BiZ,EAAa4B,E,CAGjB,OAAO5B,GAAc,KAhCqD,C,qFCF5E,IAAA8B,EAAA98B,EAAA,S,aAEA+8B,EAAe,CACbltB,WAAAitB,EAAA96B,QACAyO,cAAAusB,EAAAh7B,Q,oFCJF,IAAA8D,EAAA9F,EAAA,SAee,SAAAi9B,I,IA+BbC,EACA5jB,EA/CsBiF,EAAS4e,EACzBC,EAeAv4B,EAASC,KAEbqC,EAKEtC,EALFsC,WACAtD,EAIEgB,EAJFhB,OACA6K,EAGE7J,EAHF6J,IACA9K,EAEEiB,EAFFjB,GACAuB,EACEN,EADFM,OAGIk4B,GAzBgB9e,EAyBU,CAAC,cAAe1a,EAAO4D,UAAW,CAChE,YAAa5C,EAAOhB,OAAO2J,UAAY3J,EAAO2J,SAAStG,SACtD,CACDo2B,WAAcz5B,EAAO6J,YACpB,CACDgB,IAAOA,GACN,CACDiV,KAAQ9f,EAAO8f,MAAQ9f,EAAO8f,KAAKC,KAAO,GACzC,CACD,cAAe/f,EAAO8f,MAAQ9f,EAAO8f,KAAKC,KAAO,GAA0B,WAArB/f,EAAO8f,KAAK4X,MACjE,CACDnf,QAAWjX,EAAOiX,SACjB,CACDD,IAAOhX,EAAOgX,KACb,CACD,WAAYtY,EAAO2f,SAClB,CACD+Z,SAAY15B,EAAO2f,SAAW3f,EAAO2I,gBACpC,CACD,iBAAkB3I,EAAOuiB,sBA5CI+W,EA6C3Bt5B,EAAOkI,uBA5CLqxB,EAAgB,GACtB7e,EAAQjd,SAAQ,SAAAk8B,GACM,iBAATA,EACTh/B,OAAOD,KAAKi/B,GAAMl8B,SAAQ,SAAA6F,GACpBq2B,EAAKr2B,IACPi2B,EAAcx4B,KAAKu4B,EAASh2B,E,IAGP,iBAATq2B,GAChBJ,EAAcx4B,KAAKu4B,EAASK,E,IAGzBJ,IAiCPF,EAAA/1B,GAAWvC,KAAXqB,MAAAi3B,EAAgBr3B,EAAAC,EAAA,CAAGu3B,KACnB/jB,EAAA1V,EAAGtE,WAAUoC,IAAbuE,MAAAqT,EAAiBzT,EAAAC,EAAA,CAAGqB,IACpBtC,EAAO0J,sB,qFChDT,IAAAzI,EAAA9F,EAAA,SAAe,SAAAy9B,I,IAMbnkB,EALMzU,EAASC,KAEblB,EAEEiB,EAFFjB,GACAuD,EACEtC,EADFsC,YAEFmS,EAAA1V,EAAGtE,WAAUgP,OAAbrI,MAAAqT,EAAoBzT,EAAAC,EAAA,CAAGqB,IACvBtC,EAAO0J,sB,yFCsBTmvB,EAAe,CACb16B,cA9BF,WACE,IAAM6B,EAASC,KAEb64B,EAEE94B,EAFF8tB,SACA9uB,EACEgB,EADFhB,OAEI+e,EAEF/e,EADF+e,mBAEF,GAAIA,EAAoB,CACtB,IAAM2F,EAAiB1jB,EAAOuC,OAAO1I,OAAS,EACxCk/B,EAAqB/4B,EAAOwC,WAAWkhB,GAAkB1jB,EAAO0C,gBAAgBghB,GAAuC,EAArB3F,EACxG/d,EAAO8tB,SAAW9tB,EAAOyH,KAAOsxB,C,MAEhC/4B,EAAO8tB,SAAsC,IAA3B9tB,EAAOyC,SAAS5I,QAEN,IAA1BmF,EAAOyE,iBACTzD,EAAOyD,gBAAkBzD,EAAO8tB,WAEJ,IAA1B9uB,EAAO0E,iBACT1D,EAAO0D,gBAAkB1D,EAAO8tB,UAE9BgL,GAAaA,IAAc94B,EAAO8tB,WACpC9tB,EAAOiD,OAAQ,GAEb61B,IAAc94B,EAAO8tB,UACvB9tB,EAAO6B,KAAK7B,EAAO8tB,SAAW,OAAS,S,sFC1B3C,IAAAkL,EAAe,CACb1zB,MAAM,EACN1C,UAAW,aACXuwB,gBAAgB,EAChBpF,kBAAmB,UACnB9iB,aAAc,EACd7E,MAAO,IACPuY,SAAS,EACTsQ,sBAAsB,EACtBzV,gBAAgB,EAChB8U,QAAQ,EACR9jB,gBAAgB,EAChBnI,SAAS,EACTgC,kBAAmB,wDAEnBsF,MAAO,KACPC,OAAQ,KAERyd,gCAAgC,EAEhC5mB,UAAW,KACX1E,IAAK,KAELk1B,oBAAoB,EACpBE,mBAAoB,GAEpBtoB,YAAY,EAEZmX,gBAAgB,EAEhB0G,kBAAkB,EAElB3G,OAAQ,QAIR9hB,iBAAa4F,EACbuyB,gBAAiB,SAEjBhY,aAAc,EACdrV,cAAe,EACf8W,eAAgB,EAChBC,mBAAoB,EACpBoK,oBAAoB,EACpBviB,gBAAgB,EAChBgZ,sBAAsB,EACtB5C,mBAAoB,EAEpBE,kBAAmB,EAEnB8G,qBAAqB,EACrB/D,0BAA0B,EAE1B9X,eAAe,EAEfoW,cAAc,EAEd8T,WAAY,EACZV,WAAY,GACZ7E,eAAe,EACfiH,aAAa,EACbF,YAAY,EACZC,gBAAiB,GACjBF,aAAc,IACdZ,cAAc,EACdlvB,gBAAgB,EAChBomB,UAAW,EACX6H,0BAA0B,EAC1BtB,0BAA0B,EAC1BC,+BAA+B,EAC/BW,qBAAqB,EAErB6G,mBAAmB,EAEnBnF,YAAY,EACZD,gBAAiB,IAEjBtS,qBAAqB,EAErB1jB,YAAY,EAEZgxB,eAAe,EACfC,0BAA0B,EAC1B7I,qBAAqB,EAErBtoB,MAAM,EACN6tB,aAAc,KACdpB,qBAAqB,EAErBxE,QAAQ,EAERliB,gBAAgB,EAChBD,gBAAgB,EAChBqtB,aAAc,KAEdN,WAAW,EACXN,eAAgB,oBAChBI,kBAAmB,KAEnB4I,kBAAkB,EAClBxX,wBAAyB,GAEzBxa,uBAAwB,UAExBvB,WAAY,eACZoG,iBAAkB,sBAClBD,kBAAmB,uBACnBE,eAAgB,oBAChBC,eAAgB,oBAChB7B,aAAc,iBACdib,mBAAoB,wBACpBI,oBAAqB,EAErBta,oBAAoB,EAEpBtE,cAAc,E,oFCnHhB,IAAAtH,EAAApE,EAAA,SACe,SAAAg+B,EAA4Bn6B,EAAQqC,GACjD,OAAO,W,IAAsBwL,EAAAlO,UAAA9E,OAAA,YAAA8E,UAAA,GAAQA,UAAA,GAAF,GAC3By6B,EAAkBz/B,OAAOD,KAAKmT,GAAK,GACnCwsB,EAAexsB,EAAIusB,GACG,iBAAjBC,GAA8C,OAAjBA,GAIpC,CAAC,aAAc,aAAc,aAAapyB,QAAQmyB,IAAoB,IAAiC,IAA5Bp6B,EAAOo6B,KACpFp6B,EAAOo6B,GAAmB,CACxBE,MAAM,IAGJF,KAAmBp6B,GAAU,YAAaq6B,IAIhB,IAA5Br6B,EAAOo6B,KACTp6B,EAAOo6B,GAAmB,CACxB/2B,SAAS,IAG0B,iBAA5BrD,EAAOo6B,IAAmC,YAAap6B,EAAOo6B,KACvEp6B,EAAOo6B,GAAiB/2B,SAAU,GAE/BrD,EAAOo6B,KAAkBp6B,EAAOo6B,GAAmB,CACtD/2B,SAAS,KAEX,EAAA9C,EAAAC,QAAO6B,EAAkBwL,KAdvB,EAAAtN,EAAAC,QAAO6B,EAAkBwL,KATzB,EAAAtN,EAAAC,QAAO6B,EAAkBwL,E,wCCN/B1R,EAAA,S,2DCCAA,EAAA,S,gDCAAA,EAAA,S,gDCDAA,EAAA,S,8FCAA,IAAAoE,EAAApE,EAAA,SACe,SAAAo+B,EAAmCv5B,EAAQgC,EAAgBhD,EAAQw6B,GAehF,OAdIx5B,EAAOhB,OAAOwL,gBAChB7Q,OAAOD,KAAK8/B,GAAY/8B,SAAQ,SAAA8I,GAC9B,IAAKvG,EAAOuG,KAAwB,IAAhBvG,EAAOs6B,KAAe,CACxC,IAAIvvB,GAAU,EAAAxK,EAAAmG,iBAAgB1F,EAAOjB,GAAI,IAAoB9C,OAAhBu9B,EAAWj0B,KAAQ,GAC3DwE,KACHA,GAAU,EAAAxK,EAAAkL,eAAc,MAAO+uB,EAAWj0B,KAClCwB,UAAYyyB,EAAWj0B,GAC/BvF,EAAOjB,GAAG2L,OAAOX,IAEnB/K,EAAOuG,GAAOwE,EACd/H,EAAeuD,GAAOwE,C,KAIrB/K,C,uCChBT7D,EAAA,S,sECAe,SAAAs+B,I,IAA2Bp7B,EAAAM,UAAA9E,OAAA,YAAA8E,UAAA,GAAYA,UAAA,GAAF,GAClD,MAAO,IACa1C,OADToC,EAAQgM,OAAO8G,QAAO,eAAiB,QACjDA,QAAO,KAAO,K,oFCFjBhW,EAAA,S,2DCAAA,EAAA,Q,sCCAAA,EAAA,S,sECCAA,EAAA,Q,sCCDAA,EAAA,S,gDCAAA,EAAA,Q,sCCAAA,EAAA,S,gDCEAA,EAAA,Q,sCCFAA,EAAA,S,gDCAAA,EAAA,Q,sCCAAA,EAAA,Q,sCCAAA,EAAA,S,iFCAe,SAAAu+B,EAAqBn3B,GAClC,IAAMvC,EAASC,KAEbjB,EAEEgB,EAFFhB,OACAyG,EACEzF,EADFyF,SAEEzG,EAAOrB,MACTqC,EAAO2L,cAET,IAAMguB,EAAgB,SAAAn0B,GACpB,GAAuB,iBAAZA,EAAsB,CAC/B,IAAMo0B,EAAU1/B,SAASuQ,cAAc,OACvCmvB,EAAQC,UAAYr0B,EACpBC,EAASiF,OAAOkvB,EAAQp9B,SAAS,IACjCo9B,EAAQC,UAAY,E,MAEpBp0B,EAASiF,OAAOlF,E,EAGpB,GAAsB,iBAAXjD,GAAuB,WAAYA,EAC5C,IAAK,IAAI3I,EAAI,EAAGA,EAAI2I,EAAO1I,OAAQD,GAAK,EAClC2I,EAAO3I,IAAI+/B,EAAcp3B,EAAO3I,SAGtC+/B,EAAcp3B,GAEhBvC,EAAO2sB,eACH3tB,EAAOrB,MACTqC,EAAOoL,aAEJpM,EAAOoa,WAAYpZ,EAAOkK,WAC7BlK,EAAO5C,Q,oFC/BI,SAAA08B,EAAsBv3B,GACnC,IAAMvC,EAASC,KAEbjB,EAGEgB,EAHFhB,OACA8D,EAEE9C,EAFF8C,YACA2C,EACEzF,EADFyF,SAEEzG,EAAOrB,MACTqC,EAAO2L,cAET,IAAI6Y,EAAiB1hB,EAAc,EAC7Bi3B,EAAiB,SAAAv0B,GACrB,GAAuB,iBAAZA,EAAsB,CAC/B,IAAMo0B,EAAU1/B,SAASuQ,cAAc,OACvCmvB,EAAQC,UAAYr0B,EACpBC,EAASinB,QAAQkN,EAAQp9B,SAAS,IAClCo9B,EAAQC,UAAY,E,MAEpBp0B,EAASinB,QAAQlnB,E,EAGrB,GAAsB,iBAAXjD,GAAuB,WAAYA,EAAQ,CACpD,IAAK,IAAI3I,EAAI,EAAGA,EAAI2I,EAAO1I,OAAQD,GAAK,EAClC2I,EAAO3I,IAAImgC,EAAex3B,EAAO3I,IAEvC4qB,EAAiB1hB,EAAcP,EAAO1I,M,MAEtCkgC,EAAex3B,GAEjBvC,EAAO2sB,eACH3tB,EAAOrB,MACTqC,EAAOoL,aAEJpM,EAAOoa,WAAYpZ,EAAOkK,WAC7BlK,EAAO5C,SAET4C,EAAOiJ,QAAQub,EAAgB,GAAG,E,oFCpCrB,SAAAwV,EAAkBl0B,EAAOvD,GACtC,IAAMvC,EAASC,KAEbjB,EAGEgB,EAHFhB,OACA8D,EAEE9C,EAFF8C,YACA2C,EACEzF,EADFyF,SAEEw0B,EAAoBn3B,EACpB9D,EAAOrB,OACTs8B,GAAqBj6B,EAAOwrB,aAC5BxrB,EAAO2L,cACP3L,EAAO2sB,gBAET,IAAMuN,EAAal6B,EAAOuC,OAAO1I,OACjC,GAAIiM,GAAS,EACX9F,EAAOm6B,aAAa53B,QAGtB,GAAIuD,GAASo0B,EACXl6B,EAAOo6B,YAAY73B,OADrB,CAMA,IAFA,IAAIiiB,EAAiByV,EAAoBn0B,EAAQm0B,EAAoB,EAAIA,EACnEI,EAAe,GACZzgC,EAAIsgC,EAAa,EAAGtgC,GAAKkM,EAAOlM,GAAK,EAAG,CAC/C,IAAM0gC,EAAet6B,EAAOuC,OAAO3I,GACnC0gC,EAAa7wB,SACb4wB,EAAane,QAAQoe,E,CAEvB,GAAsB,iBAAX/3B,GAAuB,WAAYA,EAAQ,CACpD,IAAK,IAAIzF,EAAI,EAAGA,EAAIyF,EAAO1I,OAAQiD,GAAK,EAClCyF,EAAOzF,IAAI2I,EAASiF,OAAOnI,EAAOzF,IAExC0nB,EAAiByV,EAAoBn0B,EAAQm0B,EAAoB13B,EAAO1I,OAASogC,C,MAEjFx0B,EAASiF,OAAOnI,GAElB,IAAK,IAAI3F,EAAI,EAAGA,EAAIy9B,EAAaxgC,OAAQ+C,GAAK,EAC5C6I,EAASiF,OAAO2vB,EAAaz9B,IAE/BoD,EAAO2sB,eACH3tB,EAAOrB,MACTqC,EAAOoL,aAEJpM,EAAOoa,WAAYpZ,EAAOkK,WAC7BlK,EAAO5C,SAEL4B,EAAOrB,KACTqC,EAAOiJ,QAAQub,EAAiBxkB,EAAOwrB,aAAc,GAAG,GAExDxrB,EAAOiJ,QAAQub,EAAgB,GAAG,E,qFClDvB,SAAA+V,EAAqBC,GAClC,IAAMx6B,EAASC,KAEbjB,EAEEgB,EAFFhB,OAGEi7B,EADAj6B,EADF8C,YAGE9D,EAAOrB,OACTs8B,GAAqBj6B,EAAOwrB,aAC5BxrB,EAAO2L,eAET,IACI8uB,EADAjW,EAAiByV,EAErB,GAA6B,iBAAlBO,GAA8B,WAAYA,EAAe,CAClE,IAAK,IAAI5gC,EAAI,EAAGA,EAAI4gC,EAAc3gC,OAAQD,GAAK,EAC7C6gC,EAAgBD,EAAc5gC,GAC1BoG,EAAOuC,OAAOk4B,IAAgBz6B,EAAOuC,OAAOk4B,GAAehxB,SAC3DgxB,EAAgBjW,IAAgBA,GAAkB,GAExDA,EAAiBjhB,KAAK+C,IAAIke,EAAgB,E,MAE1CiW,EAAgBD,EACZx6B,EAAOuC,OAAOk4B,IAAgBz6B,EAAOuC,OAAOk4B,GAAehxB,SAC3DgxB,EAAgBjW,IAAgBA,GAAkB,GACtDA,EAAiBjhB,KAAK+C,IAAIke,EAAgB,GAE5CxkB,EAAO2sB,eACH3tB,EAAOrB,MACTqC,EAAOoL,aAEJpM,EAAOoa,WAAYpZ,EAAOkK,WAC7BlK,EAAO5C,SAEL4B,EAAOrB,KACTqC,EAAOiJ,QAAQub,EAAiBxkB,EAAOwrB,aAAc,GAAG,GAExDxrB,EAAOiJ,QAAQub,EAAgB,GAAG,E,oFCpCvB,SAAAkW,IAGb,IAFA,IACMF,EAAgB,GACb5gC,EAAI,EAAGA,EAFDqG,KAEYsC,OAAO1I,OAAQD,GAAK,EAC7C4gC,EAAcz6B,KAAKnG,GAHNqG,KAKR06B,YAAYH,E,oFCNrBr/B,EAAA,S,sECAe,SAAAy/B,EAAoB57B,GACjC,IAyCI67B,EAxCF9a,EASE/gB,EATF+gB,OACA/f,EAQEhB,EARFgB,OACAyB,EAOEzC,EAPFyC,GACAmH,EAME5J,EANF4J,aACAiZ,EAKE7iB,EALF6iB,cACAiZ,EAIE97B,EAJF87B,gBACAC,EAGE/7B,EAHF+7B,YACAC,EAEEh8B,EAFFg8B,gBACAC,EACEj8B,EADFi8B,gBAEFx5B,EAAG,cAAc,WACf,GAAIzB,EAAOhB,OAAO+gB,SAAWA,EAA7B,CACA/f,EAAOsC,WAAWvC,KAAK,GAA0C9D,OAAvC+D,EAAOhB,OAAOkI,wBAAgCjL,OAAP8jB,IAC7Dgb,GAAeA,KACjB/6B,EAAOsC,WAAWvC,KAAK,GAAwC9D,OAArC+D,EAAOhB,OAAOkI,uBAAuB,OAEjE,IAAMg0B,EAAwBJ,EAAkBA,IAAoB,GACpEnhC,OAAOyI,OAAOpC,EAAOhB,OAAQk8B,GAC7BvhC,OAAOyI,OAAOpC,EAAOgC,eAAgBk5B,EAPA,C,IASvCz5B,EAAG,gBAAgB,WACbzB,EAAOhB,OAAO+gB,SAAWA,GAC7BnX,G,IAEFnH,EAAG,iBAAiB,SAAC05B,EAAI5nB,GACnBvT,EAAOhB,OAAO+gB,SAAWA,GAC7B8B,EAActO,E,IAEhB9R,EAAG,iBAAiB,WAClB,GAAIzB,EAAOhB,OAAO+gB,SAAWA,GACzBib,EAAiB,CACnB,IAAKC,IAAoBA,IAAkBG,aAAc,OAEzDp7B,EAAOuC,OAAO9F,SAAQ,SAAA+I,GACpBA,EAAQ7F,iBAAiB,gHAAgHlD,SAAQ,SAAAwN,G,OAAYA,EAASR,Q,OAGxKuxB,G,KAIJv5B,EAAG,iBAAiB,WACdzB,EAAOhB,OAAO+gB,SAAWA,IACxB/f,EAAOuC,OAAO1I,SACjBghC,GAAyB,GAE3BrrB,uBAAsB,WAChBqrB,GAA0B76B,EAAOuC,QAAUvC,EAAOuC,OAAO1I,SAC3D+O,IACAiyB,GAAyB,E,yICnDjC,IAAAt7B,EAAApE,EAAA,SACe,SAAAkgC,EAAsBC,EAAc91B,GACjD,IAAM+1B,GAAc,EAAAh8B,EAAAi8B,qBAAoBh2B,GAKxC,OAJI+1B,IAAgB/1B,IAClB+1B,EAAYxgC,MAAM0gC,mBAAqB,SACvCF,EAAYxgC,MAAM,+BAAiC,UAE9CwgC,C,qFCPT,IAAAh8B,EAAApE,EAAA,SACe,SAAAugC,EAAoC7/B,G,IACjDmE,EADiDnE,EACjDmE,OACAuT,EAFiD1X,EAEjD0X,SACAooB,EAHiD9/B,EAGjD8/B,kBACAC,EAJiD//B,EAIjD+/B,UAEM94B,EAEF9C,EADF8C,YAUF,GAAI9C,EAAOhB,OAAO0nB,kBAAiC,IAAbnT,EAAgB,CACpD,IAAIsoB,GAAiB,GAEjBD,EACoBD,EAEAA,EAAkB31B,QAAO,SAAAu1B,GAC7C,IAAMx8B,EAAKw8B,EAAY9gC,UAAUG,SAAS,0BAf/B,SAAAmE,GACf,OAAKA,EAAGsX,cAKDtX,EAAGsX,cAHMrW,EAAOuC,OAAOyD,QAAO,SAAAR,G,OAAWA,EAAQyE,UAAYzE,EAAQyE,WAAalL,EAAG+8B,U,IAAY,E,CAY9BC,CAASR,GAAeA,EAC9F,OAAOv7B,EAAO+F,cAAchH,KAAQ+D,C,KAGpBrG,SAAQ,SAAAsC,IAC1B,EAAAQ,EAAAy8B,sBAAqBj9B,GAAI,WACvB,IAAI88B,GACC77B,IAAUA,EAAOmH,UAAtB,CACA00B,GAAiB,EACjB77B,EAAOqD,WAAY,EACnB,IAAMowB,EAAM,IAAI5jB,OAAOd,YAAY,gBAAiB,CAClD2kB,SAAS,EACTb,YAAY,IAEd7yB,EAAOsK,UAAUqpB,cAAcF,EAPE,C,8CChCzCt4B,EAAA,S,gDCAAA,EAAA,S,+HCAA,IAAAoE,EAAApE,EAAA,SACe,SAAA8gC,EAAsBj9B,EAAQwG,EAAS4N,GACpD,IAAM8oB,EAAc,sBAA6CjgC,OAAvBmX,EAAO,IAASnX,OAALmX,GAAS,IACxD+oB,GAAkB,EAAA58B,EAAAi8B,qBAAoBh2B,GACxCyE,EAAWkyB,EAAgBhiC,cAAc,IAAgB8B,OAAZigC,IAKjD,OAJKjyB,IACHA,GAAW,EAAA1K,EAAAkL,eAAc,MAAO,sBAA6CxO,OAAvBmX,EAAO,IAASnX,OAALmX,GAAS,KAC1E+oB,EAAgBzxB,OAAOT,IAElBA,C,uCCTT9O,EAAA,S,sECAAA,EAAA,S,iFCAAA,EAAA,S,mICAA,IAAAihC,EAAAjhC,EAAA,S,wGAUMkhC,EAAc,CAClB,CACEvgC,MAAO,oBACPC,IAAK,wEACLC,IAAKgF,EAAAs7B,IAGP,CACExgC,MAAO,eACPC,IAAK,+CACLC,IAAKgF,EAAAu7B,IAGP,CACEzgC,MAAO,WACPC,IAAK,wBACLC,IAAKgF,EAAAw7B,IAEP,CACE1gC,MAAO,8BACPC,IAAK,yDACLC,IAAKgF,EAAAy7B,IAEP,CACE3gC,MAAO,2BACPC,IAAK,8BACLC,IAAKgF,EAAA07B,IAEP,CACE5gC,MAAO,QACPC,IAAK,mCACLC,IAAKgF,EAAA27B,IAEP,CACE7gC,MAAO,wBACPC,IAAK,+DACLC,IAAKgF,EAAAo7B,IAEP,CACEtgC,MAAO,eACPC,IAAK,0CACLC,IAAKgF,EAAA47B,IAEP,CACE9gC,MAAO,oCACPC,IAAK,mCACLC,IAAKgF,EAAA67B,I,sCCxDTzwB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCC8CtH,IAAAC,E,6EA5CA,IAAIC,EAAY,GA6BhB,SAASC,EAAWphC,GAClB,OAAQ,GAAKA,GAAKoV,QAAO,+DAAiE,MAAQ,G,CAcpG8rB,EA1CA,SAA4BnjC,GAC1B,IAAI69B,EAAQuF,EAAUpjC,GAOtB,OALK69B,IACHA,EAOJ,WACE,IACE,MAAM,IAAI39B,K,CACV,MAAOojC,GACP,IAAI9oB,GAAW,GAAK8oB,EAAIC,OAAO3lB,MAAK,yDAEpC,GAAIpD,EAGF,OAAO6oB,EAAW7oB,EAAQ,G,CAI9B,MAAO,G,CApBGgpB,GACRJ,EAAUpjC,GAAM69B,GAGXA,C,uCCZTvrB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH5wB,EAAA0wB,QAAiB3hC,EAAA,SAAA4hC,aAA6C,SAAW5hC,EAAA,SAAA6hC,QAA6C,Q,sCCAtH,IAAAO,EAAApiC,EAAA,SAEAoiC,EAAAC,UAAUljC,iBAAiB,SAAS,SAAAC,GAClCgjC,EAAAE,WAAWhjC,UAAUgP,OAAO,kB,IAGvB,IAAMi0B,EAAWxjC,SAASC,cAAc,aAC/CojC,EAAAC,UAAUljC,iBAAiB,SAAS,SAAAC,GAClCgjC,EAAAE,WAAWhjC,UAAUgP,OAAO,mBAC5Bi0B,EAASjjC,UAAUgP,OAAO,kB,IAG5Bi0B,EAASpjC,iBAAiB,SAC1B,SAAoBqhB,GAClBgiB,QAAQC,IAAIjiB,GACZ4hB,EAAAE,WAAWhjC,UAAUoC,IAAI,mBACzB6gC,EAASjjC,UAAUoC,IAAI,kB,IAGzB0gC,EAAAE,WAAWnjC,iBAAiB,SAAS,SAAAC,GACnCsT,SAASgwB,Q,yCCpBJ,IAAMC,EAAa5jC,SAASC,cAAc,mBACpC4jC,EAAc7jC,SAASC,cAAc,gBACrC6jC,EAAe9jC,SAASC,cAAc,kBACtC8jC,EAAU/jC,SAASC,cAAc,YAE9C4jC,EAAYzjC,iBAAiB,SAAS,WACpCwjC,EAAWrjC,UAAUgP,OAAO,mBAC5Bk0B,QAAQC,IAAI,Q,IAGdI,EAAa1jC,iBAAiB,SAAS,WACrCwjC,EAAWrjC,UAAUoC,IAAI,mBACzB8gC,QAAQC,IAAI,Q,IA0BdK,EAAQ3jC,iBAAiB,SAAS,SAAAC,GAChCA,EAAEC,iBACFyjC,EAAQxjC,UAAUC,OAAO,S,IAGLR,SAASC,cAAc,YAC/BG,iBAAiB,SAAS,SAAAC,GACtCA,EAAEC,iBACFN,SAASS,KAAKF,UAAUC,OAAO,aAC/BR,SAASC,cAAc,qBAAqBM,UAAUC,OAAO,aAEzDR,SAASS,KAAKF,UAAUG,SAAS,cACnCC,aAAaC,QAAQ,QAAS,QAC9BijC,EAAYhjC,MAAMC,OAAS,QAC3BgjC,EAAajjC,MAAMC,OAAS,UAE5BH,aAAaC,QAAQ,QAAS,SAC9BijC,EAAYhjC,MAAMC,OAAS,QAC3BgjC,EAAajjC,MAAMC,OAAS,Q,IAIhCd,SAASI,iBAAiB,oBAAoB,WAC5C,IAAMW,EAAaJ,aAAaK,QAAQ,SACpCD,IACFf,SAASS,KAAKF,UAAUC,OAAO,YAA4B,SAAfO,GAC5Cf,SACGC,cAAc,qBACdM,UAAUC,OAAO,YAA4B,SAAfO,GACjCgjC,EAAQxjC,UAAUC,OAAO,SAAyB,SAAfO,G,OCnEvCE,EAAA,SAAA+iC,SAA8CC,KAAKC,MAAM,yf","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/toggle.js","src/js/suppurt-slider.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/support-list.js","node_modules/@parcel/runtime-js/lib/runtime-509c25a51fefdb29.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-236d6658200244b4.js","node_modules/@parcel/runtime-js/lib/runtime-a79bf45c9ad8547d.js","node_modules/@parcel/runtime-js/lib/runtime-6dda60653a853588.js","node_modules/@parcel/runtime-js/lib/runtime-b7f30e998df0790b.js","node_modules/@parcel/runtime-js/lib/runtime-658cea92de82207e.js","node_modules/@parcel/runtime-js/lib/runtime-dbe20dd744b3a72e.js","node_modules/@parcel/runtime-js/lib/runtime-5676c87d8cdb11a5.js","node_modules/@parcel/runtime-js/lib/runtime-24cd4ccdfdff5c68.js","src/js/userbar.js","src/js/burger-menu.js","node_modules/@parcel/runtime-js/lib/runtime-fd9bee744e13ae72.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export const slider = document.querySelector('.slider');\nexport const openMenuBtn = document.querySelector('.menu-hamburger');\nexport const closeMenuBtn = document.querySelector('.js-close-menu');\nslider.addEventListener('click', e => {\n  e.preventDefault();\n  slider.classList.toggle('active');\n});\n\nexport const toggleSwitch = document.querySelector('.slider');\ntoggleSwitch.addEventListener('click', e => {\n  e.preventDefault();\n  document.body.classList.toggle('dark-mode');\n  document.querySelector('.container-header').classList.toggle('dark-mode');\n\n  if (document.body.classList.contains('dark-mode')) {\n    localStorage.setItem('theme', 'dark');\n    openMenuBtn.style.stroke = 'white';\n    closeMenuBtn.style.stroke = 'white';\n  } else {\n    localStorage.setItem('theme', 'light');\n    openMenuBtn.style.stroke = 'black';\n    closeMenuBtn.style.stroke = 'black';\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    document.body.classList.toggle('dark-mode', savedTheme === 'dark');\n    document\n      .querySelector('.container-header')\n      .classList.toggle('dark-mode', savedTheme === 'dark');\n    slider.classList.toggle('active', savedTheme === 'dark');\n  }\n});\n","import Swiper from \"swiper\";\nimport { supportList } from \"./support-list\"\n\n\n\n\n\nconst sliderContainer = document.querySelector('.support-slider-container')\nconst sliderWrapper = document.querySelector('.swiper-wrapper');\nconst sliderNextBtn = document.querySelector('.slider__next');\n\n// renderSupportMarkup();\nfunction renderSupportMarkup() {\n    let supportListId = 0;\n    const supportMarcup = supportList.map(({ title, url, img }) => {\n        supportListId += 1\n        return `\n            <div class=\"swiper-slide\">\n                <a class=\"support-link\" href=\"${url}\" target=\"_blank\"><span class=\"support-id\" >${String(supportListId).padStart(2, 0)}</span><img class=\"support-img\" src=\"${img}\" alt=\"${title}\"></a>\n            </div>\n        `\n    }).join('');\n\n    sliderWrapper.insertAdjacentHTML('afterbegin', supportMarcup);\n};\nrenderSupportMarkup();\n\n\n\nSupportSlider();\n\nfunction SupportSlider() {\n    const sliderItem = Array.from(sliderWrapper.children);\n    sliderItem.forEach(function (slide) {\n        //desctop support render\n        if (sliderContainer.clientHeight === 490) {\n            for (let i = 6; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n\n        //tablet support render\n        if (sliderContainer.clientHeight === 472) {\n            for (let i = 6; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n\n        //mobile support rener \n        if (sliderContainer.clientHeight === 352) {\n            for (let i = 4; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n});\n}\n\n\n\nexport { renderSupportMarkup }","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import photoAction from '../images/support/action_x3.png'\nimport photoChildren from '../images/support/children_x3.png'\nimport photoHope from '../images/support/hope_x3.png'\nimport photoMedical from '../images/support/medical_x3.png'\nimport photoPrytula from '../images/support/prytula_x3.png'\nimport photoRazom from '../images/support/razom_x3.png'\nimport photoSans from '../images/support/sans_x3.png'\nimport photoUnited from '../images/support/united_x3.png'\nimport photoVision from '../images/support/world_x3.png'\n\nconst supportList = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: photoChildren,\n\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: photoHope,\n\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: photoUnited,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: photoMedical,\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: photoSans,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: photoRazom,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: photoAction,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: photoVision,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: photoPrytula,\n  },\n]\n\nexport {supportList};","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"7WMwY\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"kWEOS\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"cHizA\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"5yovL\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"3TlUI\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"cYcJN\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"9NfMQ\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"2X2gb\");","module.exports = require('./helpers/bundle-url').getBundleURL('cpyV2') + require('./helpers/bundle-manifest').resolve(\"7EhEv\");","import { userLogout, userLogin, logOutBtn } from './registration/reg-const';\n\nuserLogin.addEventListener('click', e => {\n  userLogout.classList.remove('visually-hidden');\n});\n\nexport const hugeback = document.querySelector('.hugeback');\nuserLogin.addEventListener('click', e => {\n  userLogout.classList.remove('visually-hidden');\n  hugeback.classList.remove('visually-hidden');\n});\n\nhugeback.addEventListener('click', onKeyPress);\nfunction onKeyPress(event) {\n  console.log(event);\n  userLogout.classList.add('visually-hidden');\n  hugeback.classList.add('visually-hidden');\n}\n\nuserLogout.addEventListener('click', e => {\n  location.reload();\n});\n","export const mobileMenu = document.querySelector('.menu-container');\nexport const openMenuBtn = document.querySelector('.menu-button');\nexport const closeMenuBtn = document.querySelector('.js-close-menu');\nexport const slider1 = document.querySelector('.slider1');\n\nopenMenuBtn.addEventListener('click', () => {\n  mobileMenu.classList.remove('visually-hidden');\n  console.log('slkdj');\n});\n\ncloseMenuBtn.addEventListener('click', () => {\n  mobileMenu.classList.add('visually-hidden');\n  console.log('slkdj');\n});\n\n// const toggleMenu = () => {\n//   const isMenuOpen =\n//     openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n//   openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n//   mobileMenu.classList.toggle('is-open');\n\n//   const scrollLockMethod = !isMenuOpen\n//     ? 'disableBodyScroll'\n//     : 'enableBodyScroll';\n//   bodyScrollLock[scrollLockMethod](document.body);\n// };\n\n// openMenuBtn.addEventListener('click', toggleMenu);\n// closeMenuBtn.addEventListener('click', toggleMenu);\n\n// // Close the mobile menu on wider screens if the device orientation changes\n// window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n//   if (!e.matches) return;\n//   mobileMenu.classList.remove('is-open');\n//   openMenuBtn.setAttribute('aria-expanded', false);\n//   bodyScrollLock.enableBodyScroll(document.body);\n// });\n\nslider1.addEventListener('click', e => {\n  e.preventDefault();\n  slider1.classList.toggle('active');\n});\n\nconst toggleSwitch1 = document.querySelector('.slider1');\ntoggleSwitch1.addEventListener('click', e => {\n  e.preventDefault();\n  document.body.classList.toggle('dark-mode');\n  document.querySelector('.container-header').classList.toggle('dark-mode');\n\n  if (document.body.classList.contains('dark-mode')) {\n    localStorage.setItem('theme', 'dark');\n    openMenuBtn.style.stroke = 'white';\n    closeMenuBtn.style.stroke = 'white';\n  } else {\n    localStorage.setItem('theme', 'light');\n    openMenuBtn.style.stroke = 'black';\n    closeMenuBtn.style.stroke = 'black';\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    document.body.classList.toggle('dark-mode', savedTheme === 'dark');\n    document\n      .querySelector('.container-header')\n      .classList.toggle('dark-mode', savedTheme === 'dark');\n    slider1.classList.toggle('active', savedTheme === 'dark');\n  }\n});\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cpyV2\\\":\\\"shoppinglist.c82df315.js\\\",\\\"7WMwY\\\":\\\"action_x3.8b4609bf.png\\\",\\\"kWEOS\\\":\\\"children_x3.5adeda60.png\\\",\\\"cHizA\\\":\\\"hope_x3.d858c6b5.png\\\",\\\"5yovL\\\":\\\"medical_x3.1eb2c89f.png\\\",\\\"3TlUI\\\":\\\"prytula_x3.5fcf9759.png\\\",\\\"cYcJN\\\":\\\"razom_x3.4f66fd0b.png\\\",\\\"9NfMQ\\\":\\\"sans_x3.8ad93f8a.png\\\",\\\"2X2gb\\\":\\\"united_x3.73fdef0c.png\\\",\\\"7EhEv\\\":\\\"world_x3.ac23da05.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$ea65b02536286aab$export$b38bf4f33e9e4c25","document","querySelector","$ea65b02536286aab$export$1b02be83949d2782","$ea65b02536286aab$export$68285d7e71896045","addEventListener","e","preventDefault","classList","toggle","body","contains","localStorage","setItem","style","stroke","savedTheme","getItem","parcelRequire","supportListId","supportMarcup","sliderItem","$d8edbecb2cf17134$var$sliderContainer","$d8edbecb2cf17134$var$sliderWrapper","$d8edbecb2cf17134$var$sliderNextBtn","$axqiF","supportList","map","param","title","url","img","concat","String","padStart","join","insertAdjacentHTML","Array","from","children","forEach","slide","clientHeight","i2","add","i1","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","default","update","$42aG2","translate","$lUFJw","transition","$59lEw","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","_key","_modules","el","params","constructor","prototype","toString","call","slice","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$parcel$interopDefault","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","direction","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","index","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","slidesPerView","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","remove","emitContainerClasses","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","module","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$3bd3f193ccd5630c$var$isObject","obj","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","o","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","includes","num","Number","major","minor","isWebView","test","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","slideNext","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","$a5EB7","$7ac16313eec5804a$export$e717ece34225e054","$esXhi","$anvKG","$1QOQ6","$e2JDi","$cE6fU","$8BgfK","$5W6ne","$eB02X","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","err","stack","$7dd1ddf6834435ca$var$getBundleURL","$bN6mU","userLogin","userLogout","$cde51fd23f160a76$export$9a01ccfa41ddd54f","console","log","reload","$a6f082bb96fcbb30$export$a9dde863f8eded58","$a6f082bb96fcbb30$export$1b02be83949d2782","$a6f082bb96fcbb30$export$68285d7e71896045","$a6f082bb96fcbb30$export$c23372d9d356f4c9","register","JSON","parse"],"version":3,"file":"shoppinglist.c82df315.js.map"}