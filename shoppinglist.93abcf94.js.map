{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/toggle.js","src/js/suppurt-slider.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/support-list.js","node_modules/@parcel/runtime-js/lib/runtime-0f7c7cd0edd58a94.js","node_modules/@parcel/runtime-js/lib/runtime-e8a4e4ff4651444e.js","node_modules/@parcel/runtime-js/lib/runtime-cabcab004244927c.js","node_modules/@parcel/runtime-js/lib/runtime-721cc7d594f1a68e.js","node_modules/@parcel/runtime-js/lib/runtime-ff80446371122134.js","node_modules/@parcel/runtime-js/lib/runtime-fdbba52afb571dbc.js","node_modules/@parcel/runtime-js/lib/runtime-1288e349524e2067.js","node_modules/@parcel/runtime-js/lib/runtime-95d3aed7076923e5.js","node_modules/@parcel/runtime-js/lib/runtime-46a0eddffc8f40a8.js","src/js/userbar.js","src/js/burger-menu.js","node_modules/@parcel/runtime-js/lib/runtime-fe1bf5622ff762d5.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","export const slider = document.querySelector('.slider');\nexport const openMenuBtn = document.querySelector('.menu-hamburger');\nexport const closeMenuBtn = document.querySelector('.js-close-menu');\nslider.addEventListener('click', e => {\n  e.preventDefault();\n  slider.classList.toggle('active');\n});\n\nexport const toggleSwitch = document.querySelector('.slider');\ntoggleSwitch.addEventListener('click', e => {\n  e.preventDefault();\n  document.body.classList.toggle('dark-mode');\n  document.querySelector('.container-header').classList.toggle('dark-mode');\n\n  if (document.body.classList.contains('dark-mode')) {\n    localStorage.setItem('theme', 'dark');\n    openMenuBtn.style.stroke = 'white';\n    closeMenuBtn.style.stroke = 'white';\n  } else {\n    localStorage.setItem('theme', 'light');\n    openMenuBtn.style.stroke = 'black';\n    closeMenuBtn.style.stroke = 'black';\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    document.body.classList.toggle('dark-mode', savedTheme === 'dark');\n    document\n      .querySelector('.container-header')\n      .classList.toggle('dark-mode', savedTheme === 'dark');\n    slider.classList.toggle('active', savedTheme === 'dark');\n  }\n});\n","import Swiper from \"swiper\";\nimport { supportList } from \"./support-list\"\n\n\n\n\n\nconst sliderContainer = document.querySelector('.support-slider-container')\nconst sliderWrapper = document.querySelector('.swiper-wrapper');\nconst sliderNextBtn = document.querySelector('.slider__next');\n\n// renderSupportMarkup();\nfunction renderSupportMarkup() {\n    let supportListId = 0;\n    const supportMarcup = supportList.map(({ title, url, img }) => {\n        supportListId += 1\n        return `\n            <div class=\"swiper-slide\">\n                <a class=\"support-link\" href=\"${url}\" target=\"_blank\"><span class=\"support-id\" >${String(supportListId).padStart(2, 0)}</span><img class=\"support-img\" src=\"${img}\" alt=\"${title}\"></a>\n            </div>\n        `\n    }).join('');\n\n    sliderWrapper.insertAdjacentHTML('afterbegin', supportMarcup);\n};\nrenderSupportMarkup();\n\n\n\nSupportSlider();\n\nfunction SupportSlider() {\n    const sliderItem = Array.from(sliderWrapper.children);\n    sliderItem.forEach(function (slide) {\n        //desctop support render\n        if (sliderContainer.clientHeight === 490) {\n            for (let i = 6; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n\n        //tablet support render\n        if (sliderContainer.clientHeight === 472) {\n            for (let i = 6; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n\n        //mobile support rener \n        if (sliderContainer.clientHeight === 352) {\n            for (let i = 4; i < sliderItem.length; i++) {\n                sliderItem[i].classList.add('support-slider-hidden');\n            }\n            sliderNextBtn.addEventListener('click', function () {\n                slide.classList.toggle('support-slider-hidden');\n                return;\n            })     \n            return;\n        }\n});\n}\n\n\n\nexport { renderSupportMarkup }","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import photoAction from '../images/support/action_x3.png'\nimport photoChildren from '../images/support/children_x3.png'\nimport photoHope from '../images/support/hope_x3.png'\nimport photoMedical from '../images/support/medical_x3.png'\nimport photoPrytula from '../images/support/prytula_x3.png'\nimport photoRazom from '../images/support/razom_x3.png'\nimport photoSans from '../images/support/sans_x3.png'\nimport photoUnited from '../images/support/united_x3.png'\nimport photoVision from '../images/support/world_x3.png'\n\nconst supportList = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: photoChildren,\n\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: photoHope,\n\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: photoUnited,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: photoMedical,\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: photoSans,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: photoRazom,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: photoAction,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: photoVision,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: photoPrytula,\n  },\n]\n\nexport {supportList};","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"BXaXV\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"dXiFX\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kEf3X\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2rX82\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9a9O4\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"lLo7F\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fgFHX\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"bQ46H\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"fHIiT\")).toString();","import { userLogout, userLogin, logOutBtn } from './registration/reg-const';\n\nuserLogin.addEventListener('click', e => {\n  userLogout.classList.remove('visually-hidden');\n});\n\nexport const hugeback = document.querySelector('.hugeback');\nuserLogin.addEventListener('click', e => {\n  userLogout.classList.remove('visually-hidden');\n  hugeback.classList.remove('visually-hidden');\n});\n\nhugeback.addEventListener('click', onKeyPress);\nfunction onKeyPress(event) {\n  console.log(event);\n  userLogout.classList.add('visually-hidden');\n  hugeback.classList.add('visually-hidden');\n}\n\nuserLogout.addEventListener('click', e => {\n  location.reload();\n});\n","export const mobileMenu = document.querySelector('.menu-container');\nexport const openMenuBtn = document.querySelector('.menu-button');\nexport const closeMenuBtn = document.querySelector('.js-close-menu');\nexport const slider1 = document.querySelector('.slider1');\n\nopenMenuBtn.addEventListener('click', () => {\n  mobileMenu.classList.remove('visually-hidden');\n  console.log('slkdj');\n});\n\ncloseMenuBtn.addEventListener('click', () => {\n  mobileMenu.classList.add('visually-hidden');\n  console.log('slkdj');\n});\n\n// const toggleMenu = () => {\n//   const isMenuOpen =\n//     openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n//   openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n//   mobileMenu.classList.toggle('is-open');\n\n//   const scrollLockMethod = !isMenuOpen\n//     ? 'disableBodyScroll'\n//     : 'enableBodyScroll';\n//   bodyScrollLock[scrollLockMethod](document.body);\n// };\n\n// openMenuBtn.addEventListener('click', toggleMenu);\n// closeMenuBtn.addEventListener('click', toggleMenu);\n\n// // Close the mobile menu on wider screens if the device orientation changes\n// window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n//   if (!e.matches) return;\n//   mobileMenu.classList.remove('is-open');\n//   openMenuBtn.setAttribute('aria-expanded', false);\n//   bodyScrollLock.enableBodyScroll(document.body);\n// });\n\nslider1.addEventListener('click', e => {\n  e.preventDefault();\n  slider1.classList.toggle('active');\n});\n\nconst toggleSwitch1 = document.querySelector('.slider1');\ntoggleSwitch1.addEventListener('click', e => {\n  e.preventDefault();\n  document.body.classList.toggle('dark-mode');\n  document.querySelector('.container-header').classList.toggle('dark-mode');\n\n  if (document.body.classList.contains('dark-mode')) {\n    localStorage.setItem('theme', 'dark');\n    openMenuBtn.style.stroke = 'white';\n    closeMenuBtn.style.stroke = 'white';\n  } else {\n    localStorage.setItem('theme', 'light');\n    openMenuBtn.style.stroke = 'black';\n    closeMenuBtn.style.stroke = 'black';\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme) {\n    document.body.classList.toggle('dark-mode', savedTheme === 'dark');\n    document\n      .querySelector('.container-header')\n      .classList.toggle('dark-mode', savedTheme === 'dark');\n    slider1.classList.toggle('active', savedTheme === 'dark');\n  }\n});\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"dKQml\\\":\\\"shoppinglist.93abcf94.js\\\",\\\"BXaXV\\\":\\\"action_x3.8b4609bf.png\\\",\\\"dXiFX\\\":\\\"children_x3.5adeda60.png\\\",\\\"kEf3X\\\":\\\"hope_x3.d858c6b5.png\\\",\\\"2rX82\\\":\\\"medical_x3.1eb2c89f.png\\\",\\\"9a9O4\\\":\\\"prytula_x3.5fcf9759.png\\\",\\\"lLo7F\\\":\\\"razom_x3.4f66fd0b.png\\\",\\\"fgFHX\\\":\\\"sans_x3.8ad93f8a.png\\\",\\\"bQ46H\\\":\\\"united_x3.73fdef0c.png\\\",\\\"fHIiT\\\":\\\"world_x3.ac23da05.png\\\"}\"));"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$517f5efacfe8d43b$export$b38bf4f33e9e4c25","document","querySelector","$517f5efacfe8d43b$export$1b02be83949d2782","$517f5efacfe8d43b$export$68285d7e71896045","addEventListener","e","preventDefault","classList","toggle","body","contains","localStorage","setItem","style","stroke","savedTheme","getItem","parcelRequire","$7d4df22e94a8dd7a$var$sliderContainer","$7d4df22e94a8dd7a$var$sliderWrapper","$7d4df22e94a8dd7a$var$sliderNextBtn","supportListId","supportMarcup","$6ofwr","supportList","map","title","url","img","String","padStart","join","insertAdjacentHTML","$7d4df22e94a8dd7a$export$c6b9e9d161968e24","sliderItem","Array","from","children","forEach","slide","clientHeight","add","$7d4df22e94a8dd7a$var$SupportSlider","$7xxPi","$d3aa16e5c5539775$var$prototypes","$mPJF1","default","$jEOyI","$4HaqR","$b4Co2","$jtnqo","$7Q6KL","$lt8Bz","$i1StC","$6Vw97","$5rbog","$5IPB6","$d3aa16e5c5539775$var$extendedDefaults","$d3aa16e5c5539775$var$Swiper","getSlideIndex","slideEl","slidesEl","params","this","slides","$dNWnP","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndexByData","index","filter","getAttribute","recalcSlides","enable","swiper","enabled","grabCursor","setGrabCursor","emit","disable","unsetGrabCursor","setProgress","progress","speed","Math","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","emitContainerClasses","_emitClasses","el","cls","className","split","indexOf","containerModifierClass","getSlideClasses","destroyed","emitSlidesClasses","updates","classNames","push","slidesPerViewDynamic","view","exact","slidesGrid","slidesSizesGrid","size","swiperSize","activeIndex","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","update","snapGrid","setTranslate","translateValue","rtlTranslate","translate","newTranslate","translated","breakpoints","setBreakpoint","querySelectorAll","imageEl","complete","$fa3Xa","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","autoHeight","updateAutoHeight","slidesPerView","isEnd","virtual","slideTo","watchOverflow","checkOverflow","changeDirection","newDirection","needUpdate","currentDirection","direction","remove","width","height","changeLanguageDirection","rtl","dir","mount","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","getWrapper","createElements","createElement","append","assign","toLowerCase","elementStyle","wrongRTL","init","initialized","addClasses","loop","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","target","preload","destroy","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","eventsListeners","eventName","off","deleteProps","static","newDefaults","extend","extendedDefaults","defaults","$1AMhv","mod","prototype","__modules__","modules","module","isArray","m","installModule","constructor","args","toString","call","slice","getDocument","swipers","containerEl","newParams","__swiper__","support","$1gHsq","getSupport","device","$agupX","getDevice","userAgent","browser","$kMnIR","getBrowser","eventsAnyListeners","allModulesParams","extendParams","$kmZuC","on","bind","once","swiperParams","originalParams","passedParams","onAny","isHorizontal","isVertical","realIndex","isBeginning","previousTranslate","velocity","animating","cssOverflowAdjustment","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","prototypeGroup","protoMethod","use","$kdpim","$c4Sz9","$57d5daab652ed4f7$var$isObject","obj","$57d5daab652ed4f7$export$8b58be045bf06082","src","key","$57d5daab652ed4f7$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$57d5daab652ed4f7$export$f65ca476c09acec0","doc","$57d5daab652ed4f7$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$57d5daab652ed4f7$export$38b2d434cce3ea22","win","window","$a0cd23a932383e06$export$8694e5c03a4df8e6","object","e1","$a0cd23a932383e06$export$bdd553fddd433dcb","delay","$a0cd23a932383e06$export$461939dd4422153","now","$a0cd23a932383e06$export$5ec402b7fcf74398","axis","getWindow","matrix","curTransform","transformMatrix","curStyle","currentStyle","$a0cd23a932383e06$export$3735103072e4a80","WebKitCSSMatrix","transform","webkitTransform","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$a0cd23a932383e06$export$a6cdc56e425d0d0a","o","$a0cd23a932383e06$export$8b58be045bf06082","to","noExtend","nextSource","node","HTMLElement","nodeType","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","$a0cd23a932383e06$export$a607267f322101fd","varName","varValue","setProperty","$a0cd23a932383e06$export$a5dd2b4b1a116d6d","targetPosition","side","startPosition","time","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$a0cd23a932383e06$export$616841b86f802685","$a0cd23a932383e06$export$eb846d859f2895e6","selector","matches","$a0cd23a932383e06$export$c8a8987d4410bf2d","tag","classes","$a0cd23a932383e06$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$a0cd23a932383e06$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$a0cd23a932383e06$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$a0cd23a932383e06$export$4184470d4bd0f986","prop","$a0cd23a932383e06$export$371885c503a01623","child","previousSibling","$a0cd23a932383e06$export$aedc7b608ca8e855","parents","parent","parentElement","$a0cd23a932383e06$export$6b974c5889da0bb5","fireCallBack","$a0cd23a932383e06$export$863f37913038cf77","includeMargins","offsetWidth","$0ec8fed4d94b7d0e$var$support","$0ec8fed4d94b7d0e$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$0ec8fed4d94b7d0e$var$calcSupport","$7792fe51e58fd98a$var$deviceCached","$7792fe51e58fd98a$export$30c823bc834d6ab4","overrides","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","os","$7792fe51e58fd98a$var$calcDevice","$f20ab12260e3c8aa$var$browser","$f20ab12260e3c8aa$export$89e15fc796a4a429","needPerspectiveFix","isSafari","includes","major","minor","num","Number","isWebView","test","$f20ab12260e3c8aa$var$calcBrowser","$eb78a4a6fe62148c$export$2e2bcd8739ae039","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$8cb02f6e7ce8fb4d$export$2e2bcd8739ae039","observers","attach","options","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$044a2fc60b096a26$export$2e2bcd8739ae039","events","handler","priority","self","method","event","onceHandler","__emitterProxy","apply","offAny","eventHandler","data","context","unshift","$2nlfG","$e4f8f8ad9cb19e91$export$2e2bcd8739ae039","$aafDk","$jMtU7","$kPOBn","$8OSjY","$hBtS3","$29hok","$lCVGa","$3EEt9","$1bae36ef23f50f9c$export$2e2bcd8739ae039","clientWidth","parseInt","isNaN","$7666f706306747b4$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$e669b25e9df72d3e$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","visibleSlides","offsetHeight","$f2afd2868f8e8bc2$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$66bd21459a070ee6$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","$cd0d10153bc4aa64$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","updateSlidesProgress","$1909e99c7f96a783$export$2e2bcd8739ae039","getFilteredSlide","activeSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","$fbe9e371bf7fd468$export$2e2bcd8739ae039","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$fbe9e371bf7fd468$export$81ecffcda7ad6ebb","skip","realIndex1","$b09adb3584f4f5c0$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$b09adb3584f4f5c0$var$unlazy","$b09adb3584f4f5c0$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slideIndexLastInView","rewind","$2a947fda846258ea$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1umi3","$36b34534f351ba31$export$2e2bcd8739ae039","$1vvVW","$jVKXc","$a9I2T","$fzQVA","$1159e22d2ec30d20$export$2e2bcd8739ae039","virtualTranslate","getTranslate","$119175075d742233$export$2e2bcd8739ae039","byController","x","y","newProgress","$03be93aa6759504c$export$2e2bcd8739ae039","$764ce935999ac3a7$export$2e2bcd8739ae039","$b5732e441af1da9c$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","behavior","onTranslateToWrapperTransitionEnd","$e2mnO","$80fdd84039bf9f36$export$2e2bcd8739ae039","$C1QMZ","$3QxHx","$a3829d6301edc915$export$2e2bcd8739ae039","transitionDuration","$g81jD","$0724fc2edc847bc2$export$2e2bcd8739ae039","step","$bbde69f506a53967$export$2e2bcd8739ae039","$2cd05ec7ceec4531$export$2e2bcd8739ae039","$VoUIG","$e2d2e56ba51214aa$export$2e2bcd8739ae039","$hma03","$cNUv0","$73yc0","$30lE7","$6K2nc","$k6ufv","$0ac8a65aa579cc54$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","transitionStart","transitionEnd","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$ca2c3f7f2b80cb2e$export$2e2bcd8739ae039","newIndex","$9525e32ea72263e1$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$523356300376327b$export$2e2bcd8739ae039","normalize","val","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","$230229aaaf399bb3$export$2e2bcd8739ae039","$4e88e13af59bc0c1$export$2e2bcd8739ae039","threshold","currentSnap","$ea2bd50b7bab181f$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$jAQHU","$5b52a0cd14268ef0$export$2e2bcd8739ae039","$iefk9","$8TQCt","$e43a43ab7da51df1$export$2e2bcd8739ae039","slideRealIndex","$d4556bd6c5a7f2d0$export$2e2bcd8739ae039","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","currentSlideTranslate","slideToLoop","controller","control","loopParams","c","$67ac46f20fbdf8d4$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$8kBkW","$fa12fb2ee5c28987$export$2e2bcd8739ae039","$lGUvJ","$610d2748ae2a3d7a$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$fca95b10f60c741c$export$2e2bcd8739ae039","$d20293ed7c4414e4$var$dummyEventAttached","$d20293ed7c4414e4$var$dummyEventListener","$d20293ed7c4414e4$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$i41Or","onLoad","$d20293ed7c4414e4$export$2e2bcd8739ae039","$iDuHK","$hwZYB","$7UVOE","$lI65j","$9A257","$7V4dh","$d913afca7372dc81$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","base","__closestFrom","assignedSlot","found","getRootNode","$d913afca7372dc81$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$cc35800f8eced6b5$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","isLoop","evt","bubbles","dispatchEvent","loopFixed","disableParentSwiper","resistanceRatio","resistance","followFinger","$5c3a9c649f4b5f25$export$2e2bcd8739ae039","type","touchEndTime","timeDiff","pathTree","updateClickedSlide","currentPos","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$d26a01a5d69e1b50$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$6f991739d9bf88be$export$2e2bcd8739ae039","stopImmediatePropagation","$fce26d50c7e61a92$export$2e2bcd8739ae039","$5c411feff72a52ef$export$2e2bcd8739ae039","$6iUdR","$50b100814b3eeec4$export$2e2bcd8739ae039","$kp9jL","$4970091fac3b5d77$var$isGridEnabled","$4970091fac3b5d77$export$2e2bcd8739ae039","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","$edad5ec5e4a0f3c0$export$2e2bcd8739ae039","currentHeight","innerHeight","points","point","minRatio","substr","value","sort","b","$lHwXw","$42a915ff7a2ae30b$export$2e2bcd8739ae039","$e5Gui","$fcc72e1d6455c726$export$2e2bcd8739ae039","suffixes","prefix","resultClasses","item","$fcc72e1d6455c726$var$prepareClasses","autoheight","centered","$a4227d791ec395d4$export$2e2bcd8739ae039","$3f584f40558f8bb9$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$128e9ae4dc5cc7e1$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$ed458fea3043c525$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$a38c14293bf6942a$export$2e2bcd8739ae039","checkProps","$a59367f5a43a662f$export$2e2bcd8739ae039","$b3f342b4a3f8a5f2$export$2e2bcd8739ae039","appendElement","tempDOM","innerHTML","$0b71822481728c98$export$2e2bcd8739ae039","prependElement","$5e5e77ec41ddd74a$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$5dc678a0b70a1ea8$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$9fd743be1d735d66$export$2e2bcd8739ae039","removeSlide","$fe3c58194e0402ae$export$2e2bcd8739ae039","overwriteParams","perspective","recreateShadows","getEffectParams","requireUpdateOnVirtual","overwriteParamsResult","_s","slideShadows","$fac719e250553c76$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$42fdb4152f52aa22$export$2e2bcd8739ae039","transformElements","allSlides","transitionEndTarget","eventTriggered","parentNode","getSlide","elementTransitionEnd","$3a65e8106b617bf7$export$2e2bcd8739ae039","shadowClass","shadowContainer","$2Yc32","$4a710658a599411b$export$e717ece34225e054","$parcel$interopDefault","$aqyjA","$87uCu","$9CPkO","$jmEDt","$6g1ET","$dhVbX","$g3EFZ","$37Xe5","exports","URL","resolve","import","meta","$3qSm1","userLogin","userLogout","$639e13474889053b$export$9a01ccfa41ddd54f","console","log","reload","$6442e51d8b52aaf7$export$a9dde863f8eded58","$6442e51d8b52aaf7$export$1b02be83949d2782","$6442e51d8b52aaf7$export$68285d7e71896045","$6442e51d8b52aaf7$export$c23372d9d356f4c9","register","JSON","parse"],"version":3,"file":"shoppinglist.93abcf94.js.map"}